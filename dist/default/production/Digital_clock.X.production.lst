

Microchip MPLAB XC8 Assembler V2.05 build -831301201 
                                                                                               Tue Oct 24 09:21:08 2023

Microchip MPLAB XC8 C Compiler v2.05 (Free license) build 20181220022703 Og1 
     1                           	processor	16F877A
     2                           	opt	pw 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1
     7                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1
     8                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1
     9                           	psect	maintext,global,class=CODE,split=1,delta=2
    10                           	psect	text1,local,class=CODE,merge=1,delta=2
    11                           	psect	text2,local,class=CODE,merge=1,delta=2
    12                           	psect	text3,local,class=CODE,merge=1,delta=2
    13                           	psect	text4,local,class=CODE,merge=1,delta=2
    14                           	psect	text5,local,class=CODE,merge=1,delta=2,group=1
    15                           	psect	text6,local,class=CODE,merge=1,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text9,local,class=CODE,merge=1,delta=2,group=1
    19                           	psect	text10,local,class=CODE,merge=1,delta=2
    20                           	psect	text11,local,class=CODE,merge=1,delta=2
    21                           	psect	text12,local,class=CODE,merge=1,delta=2
    22                           	psect	text13,local,class=CODE,merge=1,delta=2
    23                           	psect	text14,local,class=CODE,merge=1,delta=2
    24                           	psect	intentry,global,class=CODE,delta=2
    25                           	psect	text15,local,class=CODE,merge=1,delta=2
    26                           	psect	text16,local,class=CODE,merge=1,delta=2
    27                           	dabs	1,0x7E,2
    28  0000                     
    29                           ; Version 2.05
    30                           ; Generated 20/12/2018 GMT
    31                           ; 
    32                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution.
    46                           ; 
    47                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    48                           ;        software without specific prior written permission.
    49                           ; 
    50                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    51                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    52                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    53                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    54                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    55                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    56                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    57                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    58                           ; 
    59                           ; 
    60                           ; Code-generator required, PIC16F877A Definitions
    61                           ; 
    62                           ; SFR Addresses
    63  0000                     	;# 
    64  0001                     	;# 
    65  0002                     	;# 
    66  0003                     	;# 
    67  0004                     	;# 
    68  0005                     	;# 
    69  0006                     	;# 
    70  0007                     	;# 
    71  0008                     	;# 
    72  0009                     	;# 
    73  000A                     	;# 
    74  000B                     	;# 
    75  000C                     	;# 
    76  000D                     	;# 
    77  000E                     	;# 
    78  000E                     	;# 
    79  000F                     	;# 
    80  0010                     	;# 
    81  0011                     	;# 
    82  0012                     	;# 
    83  0013                     	;# 
    84  0014                     	;# 
    85  0015                     	;# 
    86  0015                     	;# 
    87  0016                     	;# 
    88  0017                     	;# 
    89  0018                     	;# 
    90  0019                     	;# 
    91  001A                     	;# 
    92  001B                     	;# 
    93  001B                     	;# 
    94  001C                     	;# 
    95  001D                     	;# 
    96  001E                     	;# 
    97  001F                     	;# 
    98  0081                     	;# 
    99  0085                     	;# 
   100  0086                     	;# 
   101  0087                     	;# 
   102  0088                     	;# 
   103  0089                     	;# 
   104  008C                     	;# 
   105  008D                     	;# 
   106  008E                     	;# 
   107  0091                     	;# 
   108  0092                     	;# 
   109  0093                     	;# 
   110  0094                     	;# 
   111  0098                     	;# 
   112  0099                     	;# 
   113  009C                     	;# 
   114  009D                     	;# 
   115  009E                     	;# 
   116  009F                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  018C                     	;# 
   122  018D                     	;# 
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000D                     	;# 
   137  000E                     	;# 
   138  000E                     	;# 
   139  000F                     	;# 
   140  0010                     	;# 
   141  0011                     	;# 
   142  0012                     	;# 
   143  0013                     	;# 
   144  0014                     	;# 
   145  0015                     	;# 
   146  0015                     	;# 
   147  0016                     	;# 
   148  0017                     	;# 
   149  0018                     	;# 
   150  0019                     	;# 
   151  001A                     	;# 
   152  001B                     	;# 
   153  001B                     	;# 
   154  001C                     	;# 
   155  001D                     	;# 
   156  001E                     	;# 
   157  001F                     	;# 
   158  0081                     	;# 
   159  0085                     	;# 
   160  0086                     	;# 
   161  0087                     	;# 
   162  0088                     	;# 
   163  0089                     	;# 
   164  008C                     	;# 
   165  008D                     	;# 
   166  008E                     	;# 
   167  0091                     	;# 
   168  0092                     	;# 
   169  0093                     	;# 
   170  0094                     	;# 
   171  0098                     	;# 
   172  0099                     	;# 
   173  009C                     	;# 
   174  009D                     	;# 
   175  009E                     	;# 
   176  009F                     	;# 
   177  010C                     	;# 
   178  010D                     	;# 
   179  010E                     	;# 
   180  010F                     	;# 
   181  018C                     	;# 
   182  018D                     	;# 
   183  0013                     _SSPBUF	set	19
   184  000C                     _PIR1bits	set	12
   185  0006                     _PORTBbits	set	6
   186  0008                     _PORTD	set	8
   187  0014                     _SSPCON	set	20
   188  000B                     _INTCONbits	set	11
   189  0063                     _SSPIF	set	99
   190  0094                     _SSPSTATbits	set	148
   191  0091                     _SSPCON2bits	set	145
   192  0086                     _TRISBbits	set	134
   193  0088                     _TRISD	set	136
   194  0087                     _TRISC	set	135
   195  0093                     _SSPADD	set	147
   196  0081                     _OPTION_REGbits	set	129
   197  048C                     _ACKEN	set	1164
   198  0489                     _RSEN	set	1161
   199  048A                     _PEN	set	1162
   200  0488                     _SEN	set	1160
   201                           
   202                           	psect	strings
   203  0800                     __pstrings:	
   204  0800                     stringtab:	
   205  0800                     __stringtab:	
   206  0800                     stringcode:	
   207                           ;	String table - string pointers are 1 byte each
   208                           
   209  0800                     stringdir:	
   210  0800  3008               	movlw	high stringdir
   211  0801  008A               	movwf	10
   212  0802  0804               	movf	4,w
   213  0803  0A84               	incf	4,f
   214  0804  0782               	addwf	2,f
   215  0805                     __stringbase:	
   216  0805  3400               	retlw	0
   217  0806                     __end_of__stringtab:	
   218  0806                     STR_1:	
   219  0806  3443               	retlw	67	;'C'
   220  0807  344C               	retlw	76	;'L'
   221  0808  344F               	retlw	79	;'O'
   222  0809  3443               	retlw	67	;'C'
   223  080A  344B               	retlw	75	;'K'
   224  080B  343A               	retlw	58	;':'
   225  080C  3400               	retlw	0
   226  080D                     STR_3:	
   227  080D  3453               	retlw	83	;'S'
   228  080E  3445               	retlw	69	;'E'
   229  080F  3443               	retlw	67	;'C'
   230  0810  342E               	retlw	46	;'.'
   231  0811  343A               	retlw	58	;':'
   232  0812  3400               	retlw	0
   233  0813                     STR_6:	
   234  0813  344D               	retlw	77	;'M'
   235  0814  3449               	retlw	73	;'I'
   236  0815  344E               	retlw	78	;'N'
   237  0816  342E               	retlw	46	;'.'
   238  0817  343A               	retlw	58	;':'
   239  0818  3400               	retlw	0
   240  0819                     STR_15:	
   241  0819  344D               	retlw	77	;'M'
   242  081A  344F               	retlw	79	;'O'
   243  081B  344E               	retlw	78	;'N'
   244  081C  342E               	retlw	46	;'.'
   245  081D  343A               	retlw	58	;':'
   246  081E  3400               	retlw	0
   247  081F                     STR_18:	
   248  081F  3479               	retlw	121	;'y'
   249  0820  3465               	retlw	101	;'e'
   250  0821  3472               	retlw	114	;'r'
   251  0822  342E               	retlw	46	;'.'
   252  0823  343A               	retlw	58	;':'
   253  0824  3400               	retlw	0
   254  0825                     STR_2:	
   255  0825  3444               	retlw	68	;'D'
   256  0826  3441               	retlw	65	;'A'
   257  0827  3454               	retlw	84	;'T'
   258  0828  3445               	retlw	69	;'E'
   259  0829  343A               	retlw	58	;':'
   260  082A  3400               	retlw	0
   261  082B                     STR_9:	
   262  082B  3468               	retlw	104	;'h'
   263  082C  346F               	retlw	111	;'o'
   264  082D  3475               	retlw	117	;'u'
   265  082E  3472               	retlw	114	;'r'
   266  082F  343A               	retlw	58	;':'
   267  0830  3400               	retlw	0
   268  080D                     
   269                           ; #config settings
   270  0000                     
   271                           	psect	cinit
   272  000F                     start_initialization:	
   273  000F                     __initialization:	
   274                           
   275                           ; Clear objects allocated to BANK0
   276  000F  1283               	bcf	3,5	;RP0=0, select bank0
   277  0010  1303               	bcf	3,6	;RP1=0, select bank0
   278  0011  01C9               	clrf	__pbssBANK0& (0+127)
   279  0012  01CA               	clrf	(__pbssBANK0+1)& (0+127)
   280  0013  01CB               	clrf	(__pbssBANK0+2)& (0+127)
   281  0014  01CC               	clrf	(__pbssBANK0+3)& (0+127)
   282  0015  01CD               	clrf	(__pbssBANK0+4)& (0+127)
   283  0016  01CE               	clrf	(__pbssBANK0+5)& (0+127)
   284  0017  01CF               	clrf	(__pbssBANK0+6)& (0+127)
   285  0018  01D0               	clrf	(__pbssBANK0+7)& (0+127)
   286  0019  01D1               	clrf	(__pbssBANK0+8)& (0+127)
   287  001A                     end_of_initialization:	
   288                           ;End of C runtime variable initialization code
   289                           
   290  001A                     __end_of__initialization:	
   291  001A  0183               	clrf	3
   292  001B  120A  118A  2F05   	ljmp	_main	;jump to C main() function
   293                           
   294                           	psect	bssBANK0
   295  0049                     __pbssBANK0:	
   296  0049                     _timing_flag:	
   297  0049                     	ds	1
   298  004A                     ___con:	
   299  004A                     	ds	1
   300  004B                     ___year:	
   301  004B                     	ds	1
   302  004C                     ___month:	
   303  004C                     	ds	1
   304  004D                     ___date:	
   305  004D                     	ds	1
   306  004E                     ___day:	
   307  004E                     	ds	1
   308  004F                     ___hour:	
   309  004F                     	ds	1
   310  0050                     ___minute:	
   311  0050                     	ds	1
   312  0051                     ___second:	
   313  0051                     	ds	1
   314                           
   315                           	psect	cstackCOMMON
   316  0070                     __pcstackCOMMON:	
   317  0070                     ?_lcd_init:	
   318  0070                     ?_lcd_command:	
   319                           ; 1 bytes @ 0x0
   320                           
   321  0070                     ?_set_timing:	
   322                           ; 1 bytes @ 0x0
   323                           
   324  0070                     ?_decimal_to_bcd:	
   325                           ; 1 bytes @ 0x0
   326                           
   327  0070                     ?_bcd_to_ascii:	
   328                           ; 1 bytes @ 0x0
   329                           
   330  0070                     ?_main:	
   331                           ; 1 bytes @ 0x0
   332                           
   333  0070                     ?_lcd_data:	
   334                           ; 1 bytes @ 0x0
   335                           
   336  0070                     ?_bcd_to_decimal:	
   337                           ; 1 bytes @ 0x0
   338                           
   339  0070                     ?_external:	
   340                           ; 1 bytes @ 0x0
   341                           
   342  0070                     ?i1_lcd_init:	
   343                           ; 1 bytes @ 0x0
   344                           
   345  0070                     ?i1_lcd_command:	
   346                           ; 1 bytes @ 0x0
   347                           
   348  0070                     ??i1_lcd_command:	
   349                           ; 1 bytes @ 0x0
   350                           
   351                           
   352                           ; 1 bytes @ 0x0
   353  0070                     	ds	2
   354  0072                     i1lcd_command@cmd:	
   355                           
   356                           ; 1 bytes @ 0x2
   357  0072                     	ds	1
   358  0073                     ??_external:	
   359  0073                     ??i1_lcd_init:	
   360                           ; 1 bytes @ 0x3
   361                           
   362                           
   363                           ; 1 bytes @ 0x3
   364  0073                     	ds	3
   365  0076                     ??_lcd_command:	
   366  0076                     ??_lcd_data:	
   367                           ; 1 bytes @ 0x6
   368                           
   369  0076                     ?___bmul:	
   370                           ; 1 bytes @ 0x6
   371                           
   372  0076                     ??___awdiv:	
   373                           ; 1 bytes @ 0x6
   374                           
   375  0076                     ??___awmod:	
   376                           ; 1 bytes @ 0x6
   377                           
   378  0076                     ___bmul@multiplicand:	
   379                           ; 1 bytes @ 0x6
   380                           
   381                           
   382                           ; 1 bytes @ 0x6
   383  0076                     	ds	1
   384  0077                     ??_DS1307_write:	
   385  0077                     ??___bmul:	
   386                           ; 1 bytes @ 0x7
   387                           
   388  0077                     DS1307_write@_second:	
   389                           ; 1 bytes @ 0x7
   390                           
   391                           
   392                           ; 1 bytes @ 0x7
   393  0077                     	ds	1
   394  0078                     ??_lcd_init:	
   395                           
   396                           	psect	cstackBANK0
   397  0020                     __pcstackBANK0:	
   398                           ; 1 bytes @ 0x8
   399                           
   400  0020                     ?___awdiv:	
   401  0020                     ?___awmod:	
   402                           ; 2 bytes @ 0x0
   403                           
   404  0020                     lcd_data@data:	
   405                           ; 2 bytes @ 0x0
   406                           
   407  0020                     lcd_command@cmd:	
   408                           ; 1 bytes @ 0x0
   409                           
   410  0020                     ___bmul@product:	
   411                           ; 1 bytes @ 0x0
   412                           
   413  0020                     ___awdiv@divisor:	
   414                           ; 1 bytes @ 0x0
   415                           
   416  0020                     ___awmod@divisor:	
   417                           ; 2 bytes @ 0x0
   418                           
   419                           
   420                           ; 2 bytes @ 0x0
   421  0020                     	ds	1
   422  0021                     ?_lcd_string:	
   423  0021                     ??_bcd_to_ascii:	
   424                           ; 1 bytes @ 0x1
   425                           
   426  0021                     lcd_string@num:	
   427                           ; 1 bytes @ 0x1
   428                           
   429  0021                     ___bmul@multiplier:	
   430                           ; 1 bytes @ 0x1
   431                           
   432                           
   433                           ; 1 bytes @ 0x1
   434  0021                     	ds	1
   435  0022                     ??_lcd_string:	
   436  0022                     ??_bcd_to_decimal:	
   437                           ; 1 bytes @ 0x2
   438                           
   439  0022                     ___awdiv@dividend:	
   440                           ; 1 bytes @ 0x2
   441                           
   442  0022                     ___awmod@dividend:	
   443                           ; 2 bytes @ 0x2
   444                           
   445                           
   446                           ; 2 bytes @ 0x2
   447  0022                     	ds	1
   448  0023                     lcd_string@i:	
   449  0023                     bcd_to_ascii@value:	
   450                           ; 1 bytes @ 0x3
   451                           
   452                           
   453                           ; 1 bytes @ 0x3
   454  0023                     	ds	1
   455  0024                     lcd_string@str:	
   456  0024                     bcd_to_ascii@bcd:	
   457                           ; 1 bytes @ 0x4
   458                           
   459  0024                     bcd_to_decimal@value:	
   460                           ; 1 bytes @ 0x4
   461                           
   462  0024                     ___awdiv@counter:	
   463                           ; 1 bytes @ 0x4
   464                           
   465  0024                     ___awmod@counter:	
   466                           ; 1 bytes @ 0x4
   467                           
   468                           
   469                           ; 1 bytes @ 0x4
   470  0024                     	ds	1
   471  0025                     ?_DS1307_read:	
   472  0025                     DS1307_read@register_address:	
   473                           ; 1 bytes @ 0x5
   474                           
   475  0025                     bcd_to_decimal@dec:	
   476                           ; 1 bytes @ 0x5
   477                           
   478  0025                     ___awdiv@sign:	
   479                           ; 1 bytes @ 0x5
   480                           
   481  0025                     ___awmod@sign:	
   482                           ; 1 bytes @ 0x5
   483                           
   484                           
   485                           ; 1 bytes @ 0x5
   486  0025                     	ds	1
   487  0026                     ??_DS1307_read:	
   488  0026                     ___awdiv@quotient:	
   489                           ; 1 bytes @ 0x6
   490                           
   491                           
   492                           ; 2 bytes @ 0x6
   493  0026                     	ds	1
   494  0027                     DS1307_read@slave_address:	
   495                           
   496                           ; 1 bytes @ 0x7
   497  0027                     	ds	1
   498  0028                     ??_decimal_to_bcd:	
   499                           
   500                           ; 1 bytes @ 0x8
   501  0028                     	ds	3
   502  002B                     decimal_to_bcd@msb:	
   503                           
   504                           ; 1 bytes @ 0xB
   505  002B                     	ds	1
   506  002C                     decimal_to_bcd@lsb:	
   507                           
   508                           ; 1 bytes @ 0xC
   509  002C                     	ds	1
   510  002D                     decimal_to_bcd@hex:	
   511                           
   512                           ; 1 bytes @ 0xD
   513  002D                     	ds	1
   514  002E                     decimal_to_bcd@value:	
   515                           
   516                           ; 1 bytes @ 0xE
   517  002E                     	ds	1
   518  002F                     ?_DS1307_write:	
   519  002F                     DS1307_write@_minute:	
   520                           ; 1 bytes @ 0xF
   521                           
   522                           
   523                           ; 1 bytes @ 0xF
   524  002F                     	ds	1
   525  0030                     DS1307_write@_hour:	
   526                           
   527                           ; 1 bytes @ 0x10
   528  0030                     	ds	1
   529  0031                     DS1307_write@_day:	
   530                           
   531                           ; 1 bytes @ 0x11
   532  0031                     	ds	1
   533  0032                     DS1307_write@_date:	
   534                           
   535                           ; 1 bytes @ 0x12
   536  0032                     	ds	1
   537  0033                     DS1307_write@_month:	
   538                           
   539                           ; 1 bytes @ 0x13
   540  0033                     	ds	1
   541  0034                     DS1307_write@_year:	
   542                           
   543                           ; 1 bytes @ 0x14
   544  0034                     	ds	1
   545  0035                     ??_set_timing:	
   546                           
   547                           ; 1 bytes @ 0x15
   548  0035                     	ds	5
   549  003A                     set_timing@bcd_val_second:	
   550                           
   551                           ; 1 bytes @ 0x1A
   552  003A                     	ds	1
   553  003B                     set_timing@bcd_val_minute:	
   554                           
   555                           ; 1 bytes @ 0x1B
   556  003B                     	ds	1
   557  003C                     set_timing@bcd_val_hour:	
   558                           
   559                           ; 1 bytes @ 0x1C
   560  003C                     	ds	1
   561  003D                     set_timing@bcd_val_date:	
   562                           
   563                           ; 1 bytes @ 0x1D
   564  003D                     	ds	1
   565  003E                     set_timing@bcd_val_month:	
   566                           
   567                           ; 1 bytes @ 0x1E
   568  003E                     	ds	1
   569  003F                     set_timing@bcd_val_year:	
   570                           
   571                           ; 1 bytes @ 0x1F
   572  003F                     	ds	1
   573  0040                     set_timing@decimal_val_second:	
   574                           
   575                           ; 1 bytes @ 0x20
   576  0040                     	ds	1
   577  0041                     set_timing@decimal_val_minute:	
   578                           
   579                           ; 1 bytes @ 0x21
   580  0041                     	ds	1
   581  0042                     set_timing@decimal_val_hour:	
   582                           
   583                           ; 1 bytes @ 0x22
   584  0042                     	ds	1
   585  0043                     set_timing@decimal_val_date:	
   586                           
   587                           ; 1 bytes @ 0x23
   588  0043                     	ds	1
   589  0044                     set_timing@decimal_val_month:	
   590                           
   591                           ; 1 bytes @ 0x24
   592  0044                     	ds	1
   593  0045                     set_timing@decimal_val_year:	
   594                           
   595                           ; 1 bytes @ 0x25
   596  0045                     	ds	1
   597  0046                     ??_main:	
   598                           
   599                           ; 1 bytes @ 0x26
   600  0046                     	ds	3
   601                           
   602                           	psect	maintext
   603  0705                     __pmaintext:	
   604 ;;
   605 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   606 ;;
   607 ;; *************** function _main *****************
   608 ;; Defined at:
   609 ;;		line 46 in file "D_Clock.c"
   610 ;; Parameters:    Size  Location     Type
   611 ;;		None
   612 ;; Auto vars:     Size  Location     Type
   613 ;;		None
   614 ;; Return value:  Size  Location     Type
   615 ;;                  1    wreg      void 
   616 ;; Registers used:
   617 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   618 ;; Tracked objects:
   619 ;;		On entry : B00/0
   620 ;;		On exit  : 0/0
   621 ;;		Unchanged: 0/0
   622 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   623 ;;      Params:         0       0       0       0       0
   624 ;;      Locals:         0       0       0       0       0
   625 ;;      Temps:          0       3       0       0       0
   626 ;;      Totals:         0       3       0       0       0
   627 ;;Total ram usage:        3 bytes
   628 ;; Hardware stack levels required when called:    7
   629 ;; This function calls:
   630 ;;		_DS1307_read
   631 ;;		_lcd_command
   632 ;;		_lcd_init
   633 ;;		_lcd_string
   634 ;;		_set_timing
   635 ;; This function is called by:
   636 ;;		Startup code after reset
   637 ;; This function uses a non-reentrant model
   638 ;;
   639                           
   640                           
   641                           ;psect for function _main
   642  0705                     _main:	
   643                           
   644                           ;D_Clock.c: 47: INTCONbits.GIE = 1;
   645                           
   646                           ;incstack = 0
   647                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   648  0705  178B               	bsf	11,7	;volatile
   649                           
   650                           ;D_Clock.c: 48: INTCONbits.PEIE = 1;
   651  0706  170B               	bsf	11,6	;volatile
   652                           
   653                           ;D_Clock.c: 49: INTCONbits.INTE = 1;
   654  0707  160B               	bsf	11,4	;volatile
   655                           
   656                           ;D_Clock.c: 50: OPTION_REGbits.INTEDG =1;
   657  0708  1683               	bsf	3,5	;RP0=1, select bank1
   658  0709  1303               	bcf	3,6	;RP1=0, select bank1
   659  070A  1701               	bsf	1,6	;volatile
   660                           
   661                           ;D_Clock.c: 52: SSPADD = 49 ;
   662  070B  3031               	movlw	49
   663  070C  0093               	movwf	19	;volatile
   664                           
   665                           ;D_Clock.c: 53: SSPCON = 0x28 ;
   666  070D  3028               	movlw	40
   667  070E  1283               	bcf	3,5	;RP0=0, select bank0
   668  070F  1303               	bcf	3,6	;RP1=0, select bank0
   669  0710  0094               	movwf	20	;volatile
   670                           
   671                           ;D_Clock.c: 55: TRISC = 0xff;
   672  0711  30FF               	movlw	255
   673  0712  1683               	bsf	3,5	;RP0=1, select bank1
   674  0713  1303               	bcf	3,6	;RP1=0, select bank1
   675  0714  0087               	movwf	7	;volatile
   676                           
   677                           ;D_Clock.c: 56: TRISD =0x00;
   678  0715  0188               	clrf	8	;volatile
   679                           
   680                           ;D_Clock.c: 57: PORTD = 0x00;
   681  0716  1283               	bcf	3,5	;RP0=0, select bank0
   682  0717  1303               	bcf	3,6	;RP1=0, select bank0
   683  0718  0188               	clrf	8	;volatile
   684                           
   685                           ;D_Clock.c: 58: TRISBbits.TRISB0 =1;
   686  0719  1683               	bsf	3,5	;RP0=1, select bank1
   687  071A  1303               	bcf	3,6	;RP1=0, select bank1
   688  071B  1406               	bsf	6,0	;volatile
   689                           
   690                           ;D_Clock.c: 59: TRISBbits.TRISB1 =0;
   691  071C  1086               	bcf	6,1	;volatile
   692                           
   693                           ;D_Clock.c: 60: TRISBbits.TRISB2 =0;
   694  071D  1106               	bcf	6,2	;volatile
   695                           
   696                           ;D_Clock.c: 61: TRISBbits.TRISB3 =0;
   697  071E  1186               	bcf	6,3	;volatile
   698                           
   699                           ;D_Clock.c: 62: TRISBbits.TRISB4 =1;
   700  071F  1606               	bsf	6,4	;volatile
   701                           
   702                           ;D_Clock.c: 63: TRISBbits.TRISB5 =1;
   703  0720  1686               	bsf	6,5	;volatile
   704                           
   705                           ;D_Clock.c: 64: TRISBbits.TRISB6 =1;
   706  0721  1706               	bsf	6,6	;volatile
   707                           
   708                           ;D_Clock.c: 67: lcd_init();
   709  0722  120A  158A  26DB  120A  118A  	fcall	_lcd_init
   710                           
   711                           ;D_Clock.c: 68: lcd_command (0x80);
   712  0727  3080               	movlw	128
   713  0728  120A  158A  26AF  120A  118A  	fcall	_lcd_command
   714                           
   715                           ;D_Clock.c: 69: lcd_string ("CLOCK:",6);
   716  072D  3006               	movlw	6
   717  072E  1283               	bcf	3,5	;RP0=0, select bank0
   718  072F  1303               	bcf	3,6	;RP1=0, select bank0
   719  0730  00C6               	movwf	??_main
   720  0731  0846               	movf	??_main,w
   721  0732  00A1               	movwf	lcd_string@num
   722  0733  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   723  0734  120A  118A  27D2  120A  118A  	fcall	_lcd_string
   724                           
   725                           ;D_Clock.c: 70: lcd_command (0xc0) ;
   726  0739  30C0               	movlw	192
   727  073A  120A  158A  26AF  120A  118A  	fcall	_lcd_command
   728                           
   729                           ;D_Clock.c: 71: lcd_string ("DATE:", 5) ;
   730  073F  3005               	movlw	5
   731  0740  1283               	bcf	3,5	;RP0=0, select bank0
   732  0741  1303               	bcf	3,6	;RP1=0, select bank0
   733  0742  00C6               	movwf	??_main
   734  0743  0846               	movf	??_main,w
   735  0744  00A1               	movwf	lcd_string@num
   736  0745  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   737  0746  120A  118A  27D2  120A  118A  	fcall	_lcd_string
   738                           
   739                           ;D_Clock.c: 72: _delay((unsigned long)((100)*(20000000/4000.0)));
   740  074B  3003               	movlw	3
   741  074C  1283               	bcf	3,5	;RP0=0, select bank0
   742  074D  1303               	bcf	3,6	;RP1=0, select bank0
   743  074E  00C8               	movwf	??_main+2
   744  074F  308A               	movlw	138
   745  0750  00C7               	movwf	??_main+1
   746  0751  3055               	movlw	85
   747  0752  00C6               	movwf	??_main
   748  0753                     u2317:	
   749  0753  0BC6               	decfsz	??_main,f
   750  0754  2F53               	goto	u2317
   751  0755  0BC7               	decfsz	??_main+1,f
   752  0756  2F53               	goto	u2317
   753  0757  0BC8               	decfsz	??_main+2,f
   754  0758  2F53               	goto	u2317
   755  0759                     l2218:	
   756                           
   757                           ;D_Clock.c: 75: {;D_Clock.c: 76: _delay((unsigned long)((20)*(20000000/4000.0)));
   758  0759  3082               	movlw	130
   759  075A  1283               	bcf	3,5	;RP0=0, select bank0
   760  075B  1303               	bcf	3,6	;RP1=0, select bank0
   761  075C  00C7               	movwf	??_main+1
   762  075D  30DD               	movlw	221
   763  075E  00C6               	movwf	??_main
   764  075F                     u2327:	
   765  075F  0BC6               	decfsz	??_main,f
   766  0760  2F5F               	goto	u2327
   767  0761  0BC7               	decfsz	??_main+1,f
   768  0762  2F5F               	goto	u2327
   769                           
   770                           ;D_Clock.c: 77: DS1307_read (0xd0, 0);
   771  0763  1283               	bcf	3,5	;RP0=0, select bank0
   772  0764  1303               	bcf	3,6	;RP1=0, select bank0
   773  0765  01A5               	clrf	DS1307_read@register_address
   774  0766  30D0               	movlw	208
   775  0767  120A  118A  2577  120A  118A  	fcall	_DS1307_read
   776                           
   777                           ;D_Clock.c: 78: if(timing_flag > 0 ) {
   778  076C  1283               	bcf	3,5	;RP0=0, select bank0
   779  076D  1303               	bcf	3,6	;RP1=0, select bank0
   780  076E  0849               	movf	_timing_flag,w
   781  076F  1903               	btfsc	3,2
   782  0770  2F59               	goto	l2218
   783                           
   784                           ;D_Clock.c: 79: set_timing ();
   785  0771  120A  118A  201E  120A  118A  	fcall	_set_timing
   786  0776  2F59               	goto	l2218
   787  0777                     __end_of_main:	
   788                           
   789                           	psect	text1
   790  001E                     __ptext1:	
   791 ;; *************** function _set_timing *****************
   792 ;; Defined at:
   793 ;;		line 354 in file "D_Clock.c"
   794 ;; Parameters:    Size  Location     Type
   795 ;;		None
   796 ;; Auto vars:     Size  Location     Type
   797 ;;  decimal_val_    1   37[BANK0 ] unsigned char 
   798 ;;  decimal_val_    1   36[BANK0 ] unsigned char 
   799 ;;  decimal_val_    1   35[BANK0 ] unsigned char 
   800 ;;  decimal_val_    1   34[BANK0 ] unsigned char 
   801 ;;  decimal_val_    1   33[BANK0 ] unsigned char 
   802 ;;  decimal_val_    1   32[BANK0 ] unsigned char 
   803 ;;  bcd_val_year    1   31[BANK0 ] unsigned char 
   804 ;;  bcd_val_mont    1   30[BANK0 ] unsigned char 
   805 ;;  bcd_val_date    1   29[BANK0 ] unsigned char 
   806 ;;  bcd_val_hour    1   28[BANK0 ] unsigned char 
   807 ;;  bcd_val_minu    1   27[BANK0 ] unsigned char 
   808 ;;  bcd_val_seco    1   26[BANK0 ] unsigned char 
   809 ;; Return value:  Size  Location     Type
   810 ;;                  1    wreg      void 
   811 ;; Registers used:
   812 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   813 ;; Tracked objects:
   814 ;;		On entry : 0/0
   815 ;;		On exit  : 0/0
   816 ;;		Unchanged: 0/0
   817 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   818 ;;      Params:         0       0       0       0       0
   819 ;;      Locals:         0      12       0       0       0
   820 ;;      Temps:          0       5       0       0       0
   821 ;;      Totals:         0      17       0       0       0
   822 ;;Total ram usage:       17 bytes
   823 ;; Hardware stack levels used:    1
   824 ;; Hardware stack levels required when called:    6
   825 ;; This function calls:
   826 ;;		_DS1307_write
   827 ;;		_bcd_to_ascii
   828 ;;		_bcd_to_decimal
   829 ;;		_decimal_to_bcd
   830 ;;		_lcd_command
   831 ;;		_lcd_init
   832 ;;		_lcd_string
   833 ;; This function is called by:
   834 ;;		_main
   835 ;; This function uses a non-reentrant model
   836 ;;
   837                           
   838                           
   839                           ;psect for function _set_timing
   840  001E                     _set_timing:	
   841                           
   842                           ;D_Clock.c: 356: unsigned char decimal_val_second ;;D_Clock.c: 357: unsigned char bcd_va
      +                          l_second ;;D_Clock.c: 358: unsigned char decimal_val_minute ;;D_Clock.c: 359: unsigned c
      +                          har bcd_val_minute ;;D_Clock.c: 360: unsigned char decimal_val_hour ;;D_Clock.c: 361: un
      +                          signed char bcd_val_hour ;;D_Clock.c: 362: unsigned char decimal_val_date ;;D_Clock.c: 3
      +                          63: unsigned char bcd_val_date ;;D_Clock.c: 364: unsigned char decimal_val_month ;;D_Clo
      +                          ck.c: 365: unsigned char bcd_val_month ;;D_Clock.c: 366: unsigned char decimal_val_year 
      +                          ;
   843                           
   844                           ;incstack = 0
   845                           ; Regs used in _set_timing: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   846  001E  1283               	bcf	3,5	;RP0=0, select bank0
   847  001F  1303               	bcf	3,6	;RP1=0, select bank0
   848  0020  0851               	movf	___second,w
   849  0021  120A  158A  270E  120A  118A  	fcall	_bcd_to_decimal
   850  0026  1283               	bcf	3,5	;RP0=0, select bank0
   851  0027  1303               	bcf	3,6	;RP1=0, select bank0
   852  0028  00B5               	movwf	??_set_timing
   853  0029  0835               	movf	??_set_timing,w
   854  002A  00C0               	movwf	set_timing@decimal_val_second
   855                           
   856                           ;D_Clock.c: 370: bcd_val_second =__second ;
   857  002B  0851               	movf	___second,w
   858  002C  00B5               	movwf	??_set_timing
   859  002D  0835               	movf	??_set_timing,w
   860  002E  00BA               	movwf	set_timing@bcd_val_second
   861                           
   862                           ;D_Clock.c: 371: decimal_val_minute = bcd_to_decimal (__minute) ;
   863  002F  0850               	movf	___minute,w
   864  0030  120A  158A  270E  120A  118A  	fcall	_bcd_to_decimal
   865  0035  1283               	bcf	3,5	;RP0=0, select bank0
   866  0036  1303               	bcf	3,6	;RP1=0, select bank0
   867  0037  00B5               	movwf	??_set_timing
   868  0038  0835               	movf	??_set_timing,w
   869  0039  00C1               	movwf	set_timing@decimal_val_minute
   870                           
   871                           ;D_Clock.c: 372: bcd_val_minute =__minute ;
   872  003A  0850               	movf	___minute,w
   873  003B  00B5               	movwf	??_set_timing
   874  003C  0835               	movf	??_set_timing,w
   875  003D  00BB               	movwf	set_timing@bcd_val_minute
   876                           
   877                           ;D_Clock.c: 373: decimal_val_hour = bcd_to_decimal (__hour) ;
   878  003E  084F               	movf	___hour,w
   879  003F  120A  158A  270E  120A  118A  	fcall	_bcd_to_decimal
   880  0044  1283               	bcf	3,5	;RP0=0, select bank0
   881  0045  1303               	bcf	3,6	;RP1=0, select bank0
   882  0046  00B5               	movwf	??_set_timing
   883  0047  0835               	movf	??_set_timing,w
   884  0048  00C2               	movwf	set_timing@decimal_val_hour
   885                           
   886                           ;D_Clock.c: 374: bcd_val_hour =__hour ;
   887  0049  084F               	movf	___hour,w
   888  004A  00B5               	movwf	??_set_timing
   889  004B  0835               	movf	??_set_timing,w
   890  004C  00BC               	movwf	set_timing@bcd_val_hour
   891                           
   892                           ;D_Clock.c: 375: decimal_val_date = bcd_to_decimal (__date) ;
   893  004D  084D               	movf	___date,w
   894  004E  120A  158A  270E  120A  118A  	fcall	_bcd_to_decimal
   895  0053  1283               	bcf	3,5	;RP0=0, select bank0
   896  0054  1303               	bcf	3,6	;RP1=0, select bank0
   897  0055  00B5               	movwf	??_set_timing
   898  0056  0835               	movf	??_set_timing,w
   899  0057  00C3               	movwf	set_timing@decimal_val_date
   900                           
   901                           ;D_Clock.c: 376: bcd_val_date =__date ;
   902  0058  084D               	movf	___date,w
   903  0059  00B5               	movwf	??_set_timing
   904  005A  0835               	movf	??_set_timing,w
   905  005B  00BD               	movwf	set_timing@bcd_val_date
   906                           
   907                           ;D_Clock.c: 377: decimal_val_month = bcd_to_decimal (__month) ;
   908  005C  084C               	movf	___month,w
   909  005D  120A  158A  270E  120A  118A  	fcall	_bcd_to_decimal
   910  0062  1283               	bcf	3,5	;RP0=0, select bank0
   911  0063  1303               	bcf	3,6	;RP1=0, select bank0
   912  0064  00B5               	movwf	??_set_timing
   913  0065  0835               	movf	??_set_timing,w
   914  0066  00C4               	movwf	set_timing@decimal_val_month
   915                           
   916                           ;D_Clock.c: 378: bcd_val_month =__month ;
   917  0067  084C               	movf	___month,w
   918  0068  00B5               	movwf	??_set_timing
   919  0069  0835               	movf	??_set_timing,w
   920  006A  00BE               	movwf	set_timing@bcd_val_month
   921                           
   922                           ;D_Clock.c: 379: decimal_val_year = bcd_to_decimal (__year) ;
   923  006B  084B               	movf	___year,w
   924  006C  120A  158A  270E  120A  118A  	fcall	_bcd_to_decimal
   925  0071  1283               	bcf	3,5	;RP0=0, select bank0
   926  0072  1303               	bcf	3,6	;RP1=0, select bank0
   927  0073  00B5               	movwf	??_set_timing
   928  0074  0835               	movf	??_set_timing,w
   929  0075  00C5               	movwf	set_timing@decimal_val_year
   930                           
   931                           ;D_Clock.c: 380: bcd_val_year =__year ;
   932  0076  084B               	movf	___year,w
   933  0077  00B5               	movwf	??_set_timing
   934  0078  0835               	movf	??_set_timing,w
   935  0079  00BF               	movwf	set_timing@bcd_val_year
   936  007A                     l2164:	
   937                           
   938                           ;D_Clock.c: 636: lcd_init ();
   939  007A  120A  158A  26DB  120A  118A  	fcall	_lcd_init
   940  007F                     l2166:	
   941  007F  1283               	bcf	3,5	;RP0=0, select bank0
   942  0080  1303               	bcf	3,6	;RP1=0, select bank0
   943  0081  1B06               	btfsc	6,6	;volatile
   944  0082  2D1A               	goto	l2168
   945                           
   946                           ;D_Clock.c: 385: {;D_Clock.c: 387: if (timing_flag == 1)
   947                           
   948                           ;D_Clock.c: 384: while (PORTBbits.RB6 == 0)
   949                           
   950                           ;D_Clock.c: 382: lcd_init ();
   951  0083  0349               	decf	_timing_flag,w
   952  0084  1D03               	btfss	3,2
   953  0085  2945               	goto	l1906
   954                           
   955                           ;D_Clock.c: 388: {;D_Clock.c: 389: lcd_command(0x01);
   956  0086  3001               	movlw	1
   957  0087  120A  158A  26AF  120A  118A  	fcall	_lcd_command
   958                           
   959                           ;D_Clock.c: 390: lcd_command (0x83);
   960  008C  3083               	movlw	131
   961  008D  120A  158A  26AF  120A  118A  	fcall	_lcd_command
   962                           
   963                           ;D_Clock.c: 391: lcd_string ("SEC.:",5);
   964  0092  3005               	movlw	5
   965  0093  1283               	bcf	3,5	;RP0=0, select bank0
   966  0094  1303               	bcf	3,6	;RP1=0, select bank0
   967  0095  00B5               	movwf	??_set_timing
   968  0096  0835               	movf	??_set_timing,w
   969  0097  00A1               	movwf	lcd_string@num
   970  0098  3008               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   971  0099  120A  118A  27D2  120A  118A  	fcall	_lcd_string
   972                           
   973                           ;D_Clock.c: 392: lcd_command (0x89) ;
   974  009E  3089               	movlw	137
   975  009F  120A  158A  26AF  120A  118A  	fcall	_lcd_command
   976                           
   977                           ;D_Clock.c: 393: bcd_to_ascii (bcd_val_second) ;
   978  00A4  1283               	bcf	3,5	;RP0=0, select bank0
   979  00A5  1303               	bcf	3,6	;RP1=0, select bank0
   980  00A6  083A               	movf	set_timing@bcd_val_second,w
   981  00A7  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
   982                           
   983                           ;D_Clock.c: 395: if(PORTBbits.RB4 == 1)
   984  00AC  1283               	bcf	3,5	;RP0=0, select bank0
   985  00AD  1303               	bcf	3,6	;RP1=0, select bank0
   986  00AE  1E06               	btfss	6,4	;volatile
   987  00AF  28F8               	goto	l1886
   988  00B0                     l238:	
   989  00B0  1A06               	btfsc	6,4	;volatile
   990  00B1  28B0               	goto	l238
   991                           
   992                           ;D_Clock.c: 398: decimal_val_second ++ ;
   993  00B2  3001               	movlw	1
   994  00B3  00B5               	movwf	??_set_timing
   995  00B4  0835               	movf	??_set_timing,w
   996  00B5  07C0               	addwf	set_timing@decimal_val_second,f
   997                           
   998                           ;D_Clock.c: 399: if(decimal_val_second == 60)
   999  00B6  303C               	movlw	60
  1000  00B7  0640               	xorwf	set_timing@decimal_val_second,w
  1001  00B8  1903               	btfsc	3,2
  1002                           
  1003                           ;D_Clock.c: 400: {;D_Clock.c: 401: decimal_val_second =0 ;
  1004  00B9  01C0               	clrf	set_timing@decimal_val_second
  1005                           
  1006                           ;D_Clock.c: 402: };D_Clock.c: 403: _delay((unsigned long)((100)*(20000000/4000.0)));
  1007  00BA  3003               	movlw	3
  1008  00BB  1283               	bcf	3,5	;RP0=0, select bank0
  1009  00BC  1303               	bcf	3,6	;RP1=0, select bank0
  1010  00BD  00B7               	movwf	??_set_timing+2
  1011  00BE  308A               	movlw	138
  1012  00BF  00B6               	movwf	??_set_timing+1
  1013  00C0  3055               	movlw	85
  1014  00C1  00B5               	movwf	??_set_timing
  1015  00C2                     u2337:	
  1016  00C2  0BB5               	decfsz	??_set_timing,f
  1017  00C3  28C2               	goto	u2337
  1018  00C4  0BB6               	decfsz	??_set_timing+1,f
  1019  00C5  28C2               	goto	u2337
  1020  00C6  0BB7               	decfsz	??_set_timing+2,f
  1021  00C7  28C2               	goto	u2337
  1022                           
  1023                           ;D_Clock.c: 404: lcd_command (0x83);
  1024  00C8  3083               	movlw	131
  1025  00C9  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1026                           
  1027                           ;D_Clock.c: 405: lcd_string ("SEC.:",5);
  1028  00CE  3005               	movlw	5
  1029  00CF  1283               	bcf	3,5	;RP0=0, select bank0
  1030  00D0  1303               	bcf	3,6	;RP1=0, select bank0
  1031  00D1  00B5               	movwf	??_set_timing
  1032  00D2  0835               	movf	??_set_timing,w
  1033  00D3  00A1               	movwf	lcd_string@num
  1034  00D4  3008               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1035  00D5  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1036                           
  1037                           ;D_Clock.c: 406: lcd_command (0x89) ;
  1038  00DA  3089               	movlw	137
  1039  00DB  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1040                           
  1041                           ;D_Clock.c: 407: bcd_val_second = decimal_to_bcd (decimal_val_second);
  1042  00E0  1283               	bcf	3,5	;RP0=0, select bank0
  1043  00E1  1303               	bcf	3,6	;RP1=0, select bank0
  1044  00E2  0840               	movf	set_timing@decimal_val_second,w
  1045  00E3  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1046  00E8  1283               	bcf	3,5	;RP0=0, select bank0
  1047  00E9  1303               	bcf	3,6	;RP1=0, select bank0
  1048  00EA  00B5               	movwf	??_set_timing
  1049  00EB  0835               	movf	??_set_timing,w
  1050  00EC  00BA               	movwf	set_timing@bcd_val_second
  1051                           
  1052                           ;D_Clock.c: 408: bcd_to_ascii (bcd_val_second) ;
  1053  00ED  083A               	movf	set_timing@bcd_val_second,w
  1054  00EE  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1055                           
  1056                           ;D_Clock.c: 409: lcd_init ();
  1057  00F3  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1058  00F8                     l1886:	
  1059                           
  1060                           ;D_Clock.c: 410: };D_Clock.c: 411: if(PORTBbits.RB5 == 1)
  1061  00F8  1283               	bcf	3,5	;RP0=0, select bank0
  1062  00F9  1303               	bcf	3,6	;RP1=0, select bank0
  1063  00FA  1E86               	btfss	6,5	;volatile
  1064  00FB  2945               	goto	l1906
  1065  00FC                     l243:	
  1066  00FC  1A86               	btfsc	6,5	;volatile
  1067  00FD  28FC               	goto	l243
  1068                           
  1069                           ;D_Clock.c: 414: decimal_val_second -- ;
  1070  00FE  3001               	movlw	1
  1071  00FF  02C0               	subwf	set_timing@decimal_val_second,f
  1072                           
  1073                           ;D_Clock.c: 415: if(decimal_val_second == 0)
  1074  0100  0840               	movf	set_timing@decimal_val_second,w
  1075  0101  1D03               	btfss	3,2
  1076  0102  2907               	goto	l246
  1077                           
  1078                           ;D_Clock.c: 416: {;D_Clock.c: 417: decimal_val_second = 59 ;
  1079  0103  303B               	movlw	59
  1080  0104  00B5               	movwf	??_set_timing
  1081  0105  0835               	movf	??_set_timing,w
  1082  0106  00C0               	movwf	set_timing@decimal_val_second
  1083  0107                     l246:	
  1084                           
  1085                           ;D_Clock.c: 418: };D_Clock.c: 419: _delay((unsigned long)((100)*(20000000/4000.0)));
  1086  0107  3003               	movlw	3
  1087  0108  1283               	bcf	3,5	;RP0=0, select bank0
  1088  0109  1303               	bcf	3,6	;RP1=0, select bank0
  1089  010A  00B7               	movwf	??_set_timing+2
  1090  010B  308A               	movlw	138
  1091  010C  00B6               	movwf	??_set_timing+1
  1092  010D  3055               	movlw	85
  1093  010E  00B5               	movwf	??_set_timing
  1094  010F                     u2347:	
  1095  010F  0BB5               	decfsz	??_set_timing,f
  1096  0110  290F               	goto	u2347
  1097  0111  0BB6               	decfsz	??_set_timing+1,f
  1098  0112  290F               	goto	u2347
  1099  0113  0BB7               	decfsz	??_set_timing+2,f
  1100  0114  290F               	goto	u2347
  1101                           
  1102                           ;D_Clock.c: 420: lcd_command (0x83);
  1103  0115  3083               	movlw	131
  1104  0116  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1105                           
  1106                           ;D_Clock.c: 421: lcd_string ("SEC.:",5);
  1107  011B  3005               	movlw	5
  1108  011C  1283               	bcf	3,5	;RP0=0, select bank0
  1109  011D  1303               	bcf	3,6	;RP1=0, select bank0
  1110  011E  00B5               	movwf	??_set_timing
  1111  011F  0835               	movf	??_set_timing,w
  1112  0120  00A1               	movwf	lcd_string@num
  1113  0121  3008               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1114  0122  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1115                           
  1116                           ;D_Clock.c: 422: lcd_command (0x89) ;
  1117  0127  3089               	movlw	137
  1118  0128  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1119                           
  1120                           ;D_Clock.c: 423: bcd_val_second = decimal_to_bcd (decimal_val_second);
  1121  012D  1283               	bcf	3,5	;RP0=0, select bank0
  1122  012E  1303               	bcf	3,6	;RP1=0, select bank0
  1123  012F  0840               	movf	set_timing@decimal_val_second,w
  1124  0130  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1125  0135  1283               	bcf	3,5	;RP0=0, select bank0
  1126  0136  1303               	bcf	3,6	;RP1=0, select bank0
  1127  0137  00B5               	movwf	??_set_timing
  1128  0138  0835               	movf	??_set_timing,w
  1129  0139  00BA               	movwf	set_timing@bcd_val_second
  1130                           
  1131                           ;D_Clock.c: 424: bcd_to_ascii (bcd_val_second) ;
  1132  013A  083A               	movf	set_timing@bcd_val_second,w
  1133  013B  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1134                           
  1135                           ;D_Clock.c: 425: lcd_init ();
  1136  0140  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1137  0145                     l1906:	
  1138                           
  1139                           ;D_Clock.c: 426: };D_Clock.c: 428: };D_Clock.c: 430: if (timing_flag == 2)
  1140  0145  3002               	movlw	2
  1141  0146  1283               	bcf	3,5	;RP0=0, select bank0
  1142  0147  1303               	bcf	3,6	;RP1=0, select bank0
  1143  0148  0649               	xorwf	_timing_flag,w
  1144  0149  1D03               	btfss	3,2
  1145  014A  2A0A               	goto	l1958
  1146                           
  1147                           ;D_Clock.c: 431: {;D_Clock.c: 432: lcd_command(0x01);
  1148  014B  3001               	movlw	1
  1149  014C  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1150                           
  1151                           ;D_Clock.c: 433: lcd_command (0x83);
  1152  0151  3083               	movlw	131
  1153  0152  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1154                           
  1155                           ;D_Clock.c: 434: lcd_string ("MIN.:",5);
  1156  0157  3005               	movlw	5
  1157  0158  1283               	bcf	3,5	;RP0=0, select bank0
  1158  0159  1303               	bcf	3,6	;RP1=0, select bank0
  1159  015A  00B5               	movwf	??_set_timing
  1160  015B  0835               	movf	??_set_timing,w
  1161  015C  00A1               	movwf	lcd_string@num
  1162  015D  300E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1163  015E  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1164                           
  1165                           ;D_Clock.c: 435: lcd_command (0x89) ;
  1166  0163  3089               	movlw	137
  1167  0164  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1168                           
  1169                           ;D_Clock.c: 436: bcd_to_ascii (bcd_val_minute) ;
  1170  0169  1283               	bcf	3,5	;RP0=0, select bank0
  1171  016A  1303               	bcf	3,6	;RP1=0, select bank0
  1172  016B  083B               	movf	set_timing@bcd_val_minute,w
  1173  016C  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1174                           
  1175                           ;D_Clock.c: 438: if(PORTBbits.RB4 == 1)
  1176  0171  1283               	bcf	3,5	;RP0=0, select bank0
  1177  0172  1303               	bcf	3,6	;RP1=0, select bank0
  1178  0173  1E06               	btfss	6,4	;volatile
  1179  0174  29BD               	goto	l1938
  1180  0175                     l249:	
  1181  0175  1A06               	btfsc	6,4	;volatile
  1182  0176  2975               	goto	l249
  1183                           
  1184                           ;D_Clock.c: 441: decimal_val_minute ++ ;
  1185  0177  3001               	movlw	1
  1186  0178  00B5               	movwf	??_set_timing
  1187  0179  0835               	movf	??_set_timing,w
  1188  017A  07C1               	addwf	set_timing@decimal_val_minute,f
  1189                           
  1190                           ;D_Clock.c: 442: if(decimal_val_minute == 60)
  1191  017B  303C               	movlw	60
  1192  017C  0641               	xorwf	set_timing@decimal_val_minute,w
  1193  017D  1903               	btfsc	3,2
  1194                           
  1195                           ;D_Clock.c: 443: {;D_Clock.c: 444: decimal_val_minute =0 ;
  1196  017E  01C1               	clrf	set_timing@decimal_val_minute
  1197                           
  1198                           ;D_Clock.c: 445: };D_Clock.c: 446: _delay((unsigned long)((100)*(20000000/4000.0)));
  1199  017F  3003               	movlw	3
  1200  0180  1283               	bcf	3,5	;RP0=0, select bank0
  1201  0181  1303               	bcf	3,6	;RP1=0, select bank0
  1202  0182  00B7               	movwf	??_set_timing+2
  1203  0183  308A               	movlw	138
  1204  0184  00B6               	movwf	??_set_timing+1
  1205  0185  3055               	movlw	85
  1206  0186  00B5               	movwf	??_set_timing
  1207  0187                     u2357:	
  1208  0187  0BB5               	decfsz	??_set_timing,f
  1209  0188  2987               	goto	u2357
  1210  0189  0BB6               	decfsz	??_set_timing+1,f
  1211  018A  2987               	goto	u2357
  1212  018B  0BB7               	decfsz	??_set_timing+2,f
  1213  018C  2987               	goto	u2357
  1214                           
  1215                           ;D_Clock.c: 447: lcd_command (0x83);
  1216  018D  3083               	movlw	131
  1217  018E  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1218                           
  1219                           ;D_Clock.c: 448: lcd_string ("MIN.:",5);
  1220  0193  3005               	movlw	5
  1221  0194  1283               	bcf	3,5	;RP0=0, select bank0
  1222  0195  1303               	bcf	3,6	;RP1=0, select bank0
  1223  0196  00B5               	movwf	??_set_timing
  1224  0197  0835               	movf	??_set_timing,w
  1225  0198  00A1               	movwf	lcd_string@num
  1226  0199  300E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1227  019A  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1228                           
  1229                           ;D_Clock.c: 449: lcd_command (0x89) ;
  1230  019F  3089               	movlw	137
  1231  01A0  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1232                           
  1233                           ;D_Clock.c: 450: bcd_val_minute = decimal_to_bcd (decimal_val_minute);
  1234  01A5  1283               	bcf	3,5	;RP0=0, select bank0
  1235  01A6  1303               	bcf	3,6	;RP1=0, select bank0
  1236  01A7  0841               	movf	set_timing@decimal_val_minute,w
  1237  01A8  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1238  01AD  1283               	bcf	3,5	;RP0=0, select bank0
  1239  01AE  1303               	bcf	3,6	;RP1=0, select bank0
  1240  01AF  00B5               	movwf	??_set_timing
  1241  01B0  0835               	movf	??_set_timing,w
  1242  01B1  00BB               	movwf	set_timing@bcd_val_minute
  1243                           
  1244                           ;D_Clock.c: 451: bcd_to_ascii (bcd_val_minute) ;
  1245  01B2  083B               	movf	set_timing@bcd_val_minute,w
  1246  01B3  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1247                           
  1248                           ;D_Clock.c: 452: lcd_init ();
  1249  01B8  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1250  01BD                     l1938:	
  1251                           
  1252                           ;D_Clock.c: 453: };D_Clock.c: 454: if(PORTBbits.RB5 == 1)
  1253  01BD  1283               	bcf	3,5	;RP0=0, select bank0
  1254  01BE  1303               	bcf	3,6	;RP1=0, select bank0
  1255  01BF  1E86               	btfss	6,5	;volatile
  1256  01C0  2A0A               	goto	l1958
  1257  01C1                     l254:	
  1258  01C1  1A86               	btfsc	6,5	;volatile
  1259  01C2  29C1               	goto	l254
  1260                           
  1261                           ;D_Clock.c: 457: decimal_val_minute -- ;
  1262  01C3  3001               	movlw	1
  1263  01C4  02C1               	subwf	set_timing@decimal_val_minute,f
  1264                           
  1265                           ;D_Clock.c: 458: if(decimal_val_minute == 0)
  1266  01C5  0841               	movf	set_timing@decimal_val_minute,w
  1267  01C6  1D03               	btfss	3,2
  1268  01C7  29CC               	goto	l257
  1269                           
  1270                           ;D_Clock.c: 459: {;D_Clock.c: 460: decimal_val_minute = 59 ;
  1271  01C8  303B               	movlw	59
  1272  01C9  00B5               	movwf	??_set_timing
  1273  01CA  0835               	movf	??_set_timing,w
  1274  01CB  00C1               	movwf	set_timing@decimal_val_minute
  1275  01CC                     l257:	
  1276                           
  1277                           ;D_Clock.c: 461: };D_Clock.c: 462: _delay((unsigned long)((100)*(20000000/4000.0)));
  1278  01CC  3003               	movlw	3
  1279  01CD  1283               	bcf	3,5	;RP0=0, select bank0
  1280  01CE  1303               	bcf	3,6	;RP1=0, select bank0
  1281  01CF  00B7               	movwf	??_set_timing+2
  1282  01D0  308A               	movlw	138
  1283  01D1  00B6               	movwf	??_set_timing+1
  1284  01D2  3055               	movlw	85
  1285  01D3  00B5               	movwf	??_set_timing
  1286  01D4                     u2367:	
  1287  01D4  0BB5               	decfsz	??_set_timing,f
  1288  01D5  29D4               	goto	u2367
  1289  01D6  0BB6               	decfsz	??_set_timing+1,f
  1290  01D7  29D4               	goto	u2367
  1291  01D8  0BB7               	decfsz	??_set_timing+2,f
  1292  01D9  29D4               	goto	u2367
  1293                           
  1294                           ;D_Clock.c: 463: lcd_command (0x83);
  1295  01DA  3083               	movlw	131
  1296  01DB  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1297                           
  1298                           ;D_Clock.c: 464: lcd_string ("MIN.:",5);
  1299  01E0  3005               	movlw	5
  1300  01E1  1283               	bcf	3,5	;RP0=0, select bank0
  1301  01E2  1303               	bcf	3,6	;RP1=0, select bank0
  1302  01E3  00B5               	movwf	??_set_timing
  1303  01E4  0835               	movf	??_set_timing,w
  1304  01E5  00A1               	movwf	lcd_string@num
  1305  01E6  300E               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
  1306  01E7  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1307                           
  1308                           ;D_Clock.c: 465: lcd_command (0x89) ;
  1309  01EC  3089               	movlw	137
  1310  01ED  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1311                           
  1312                           ;D_Clock.c: 466: bcd_val_minute = decimal_to_bcd (decimal_val_minute);
  1313  01F2  1283               	bcf	3,5	;RP0=0, select bank0
  1314  01F3  1303               	bcf	3,6	;RP1=0, select bank0
  1315  01F4  0841               	movf	set_timing@decimal_val_minute,w
  1316  01F5  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1317  01FA  1283               	bcf	3,5	;RP0=0, select bank0
  1318  01FB  1303               	bcf	3,6	;RP1=0, select bank0
  1319  01FC  00B5               	movwf	??_set_timing
  1320  01FD  0835               	movf	??_set_timing,w
  1321  01FE  00BB               	movwf	set_timing@bcd_val_minute
  1322                           
  1323                           ;D_Clock.c: 467: bcd_to_ascii (bcd_val_minute) ;
  1324  01FF  083B               	movf	set_timing@bcd_val_minute,w
  1325  0200  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1326                           
  1327                           ;D_Clock.c: 468: lcd_init ();
  1328  0205  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1329  020A                     l1958:	
  1330                           
  1331                           ;D_Clock.c: 469: };D_Clock.c: 470: };D_Clock.c: 472: if (timing_flag == 3)
  1332  020A  3003               	movlw	3
  1333  020B  1283               	bcf	3,5	;RP0=0, select bank0
  1334  020C  1303               	bcf	3,6	;RP1=0, select bank0
  1335  020D  0649               	xorwf	_timing_flag,w
  1336  020E  1D03               	btfss	3,2
  1337  020F  2ACF               	goto	l2010
  1338                           
  1339                           ;D_Clock.c: 473: {;D_Clock.c: 474: lcd_command(0x01);
  1340  0210  3001               	movlw	1
  1341  0211  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1342                           
  1343                           ;D_Clock.c: 475: lcd_command (0x83);
  1344  0216  3083               	movlw	131
  1345  0217  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1346                           
  1347                           ;D_Clock.c: 476: lcd_string ("hour:",5);
  1348  021C  3005               	movlw	5
  1349  021D  1283               	bcf	3,5	;RP0=0, select bank0
  1350  021E  1303               	bcf	3,6	;RP1=0, select bank0
  1351  021F  00B5               	movwf	??_set_timing
  1352  0220  0835               	movf	??_set_timing,w
  1353  0221  00A1               	movwf	lcd_string@num
  1354  0222  3026               	movlw	(low ((STR_9-__stringbase)| (0+32768)))& (0+255)
  1355  0223  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1356                           
  1357                           ;D_Clock.c: 477: lcd_command (0x89) ;
  1358  0228  3089               	movlw	137
  1359  0229  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1360                           
  1361                           ;D_Clock.c: 478: bcd_to_ascii (bcd_val_hour) ;
  1362  022E  1283               	bcf	3,5	;RP0=0, select bank0
  1363  022F  1303               	bcf	3,6	;RP1=0, select bank0
  1364  0230  083C               	movf	set_timing@bcd_val_hour,w
  1365  0231  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1366                           
  1367                           ;D_Clock.c: 480: if(PORTBbits.RB4 == 1)
  1368  0236  1283               	bcf	3,5	;RP0=0, select bank0
  1369  0237  1303               	bcf	3,6	;RP1=0, select bank0
  1370  0238  1E06               	btfss	6,4	;volatile
  1371  0239  2A82               	goto	l1990
  1372  023A                     l260:	
  1373  023A  1A06               	btfsc	6,4	;volatile
  1374  023B  2A3A               	goto	l260
  1375                           
  1376                           ;D_Clock.c: 483: decimal_val_hour ++ ;
  1377  023C  3001               	movlw	1
  1378  023D  00B5               	movwf	??_set_timing
  1379  023E  0835               	movf	??_set_timing,w
  1380  023F  07C2               	addwf	set_timing@decimal_val_hour,f
  1381                           
  1382                           ;D_Clock.c: 484: if(decimal_val_hour == 60)
  1383  0240  303C               	movlw	60
  1384  0241  0642               	xorwf	set_timing@decimal_val_hour,w
  1385  0242  1903               	btfsc	3,2
  1386                           
  1387                           ;D_Clock.c: 485: {;D_Clock.c: 486: decimal_val_hour =0 ;
  1388  0243  01C2               	clrf	set_timing@decimal_val_hour
  1389                           
  1390                           ;D_Clock.c: 487: };D_Clock.c: 488: _delay((unsigned long)((100)*(20000000/4000.0)));
  1391  0244  3003               	movlw	3
  1392  0245  1283               	bcf	3,5	;RP0=0, select bank0
  1393  0246  1303               	bcf	3,6	;RP1=0, select bank0
  1394  0247  00B7               	movwf	??_set_timing+2
  1395  0248  308A               	movlw	138
  1396  0249  00B6               	movwf	??_set_timing+1
  1397  024A  3055               	movlw	85
  1398  024B  00B5               	movwf	??_set_timing
  1399  024C                     u2377:	
  1400  024C  0BB5               	decfsz	??_set_timing,f
  1401  024D  2A4C               	goto	u2377
  1402  024E  0BB6               	decfsz	??_set_timing+1,f
  1403  024F  2A4C               	goto	u2377
  1404  0250  0BB7               	decfsz	??_set_timing+2,f
  1405  0251  2A4C               	goto	u2377
  1406                           
  1407                           ;D_Clock.c: 489: lcd_command (0x83);
  1408  0252  3083               	movlw	131
  1409  0253  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1410                           
  1411                           ;D_Clock.c: 490: lcd_string ("SEC.:",5);
  1412  0258  3005               	movlw	5
  1413  0259  1283               	bcf	3,5	;RP0=0, select bank0
  1414  025A  1303               	bcf	3,6	;RP1=0, select bank0
  1415  025B  00B5               	movwf	??_set_timing
  1416  025C  0835               	movf	??_set_timing,w
  1417  025D  00A1               	movwf	lcd_string@num
  1418  025E  3008               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1419  025F  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1420                           
  1421                           ;D_Clock.c: 491: lcd_command (0x89) ;
  1422  0264  3089               	movlw	137
  1423  0265  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1424                           
  1425                           ;D_Clock.c: 492: bcd_val_hour = decimal_to_bcd (decimal_val_hour);
  1426  026A  1283               	bcf	3,5	;RP0=0, select bank0
  1427  026B  1303               	bcf	3,6	;RP1=0, select bank0
  1428  026C  0842               	movf	set_timing@decimal_val_hour,w
  1429  026D  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1430  0272  1283               	bcf	3,5	;RP0=0, select bank0
  1431  0273  1303               	bcf	3,6	;RP1=0, select bank0
  1432  0274  00B5               	movwf	??_set_timing
  1433  0275  0835               	movf	??_set_timing,w
  1434  0276  00BC               	movwf	set_timing@bcd_val_hour
  1435                           
  1436                           ;D_Clock.c: 493: bcd_to_ascii (bcd_val_hour) ;
  1437  0277  083C               	movf	set_timing@bcd_val_hour,w
  1438  0278  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1439                           
  1440                           ;D_Clock.c: 494: lcd_init ();
  1441  027D  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1442  0282                     l1990:	
  1443                           
  1444                           ;D_Clock.c: 495: };D_Clock.c: 496: if(PORTBbits.RB5 == 1)
  1445  0282  1283               	bcf	3,5	;RP0=0, select bank0
  1446  0283  1303               	bcf	3,6	;RP1=0, select bank0
  1447  0284  1E86               	btfss	6,5	;volatile
  1448  0285  2ACF               	goto	l2010
  1449  0286                     l265:	
  1450  0286  1A86               	btfsc	6,5	;volatile
  1451  0287  2A86               	goto	l265
  1452                           
  1453                           ;D_Clock.c: 499: decimal_val_hour -- ;
  1454  0288  3001               	movlw	1
  1455  0289  02C2               	subwf	set_timing@decimal_val_hour,f
  1456                           
  1457                           ;D_Clock.c: 500: if(decimal_val_hour == 0)
  1458  028A  0842               	movf	set_timing@decimal_val_hour,w
  1459  028B  1D03               	btfss	3,2
  1460  028C  2A91               	goto	l268
  1461                           
  1462                           ;D_Clock.c: 501: {;D_Clock.c: 502: decimal_val_hour = 59 ;
  1463  028D  303B               	movlw	59
  1464  028E  00B5               	movwf	??_set_timing
  1465  028F  0835               	movf	??_set_timing,w
  1466  0290  00C2               	movwf	set_timing@decimal_val_hour
  1467  0291                     l268:	
  1468                           
  1469                           ;D_Clock.c: 503: };D_Clock.c: 504: _delay((unsigned long)((100)*(20000000/4000.0)));
  1470  0291  3003               	movlw	3
  1471  0292  1283               	bcf	3,5	;RP0=0, select bank0
  1472  0293  1303               	bcf	3,6	;RP1=0, select bank0
  1473  0294  00B7               	movwf	??_set_timing+2
  1474  0295  308A               	movlw	138
  1475  0296  00B6               	movwf	??_set_timing+1
  1476  0297  3055               	movlw	85
  1477  0298  00B5               	movwf	??_set_timing
  1478  0299                     u2387:	
  1479  0299  0BB5               	decfsz	??_set_timing,f
  1480  029A  2A99               	goto	u2387
  1481  029B  0BB6               	decfsz	??_set_timing+1,f
  1482  029C  2A99               	goto	u2387
  1483  029D  0BB7               	decfsz	??_set_timing+2,f
  1484  029E  2A99               	goto	u2387
  1485                           
  1486                           ;D_Clock.c: 505: lcd_command (0x83);
  1487  029F  3083               	movlw	131
  1488  02A0  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1489                           
  1490                           ;D_Clock.c: 506: lcd_string ("SEC.:",5);
  1491  02A5  3005               	movlw	5
  1492  02A6  1283               	bcf	3,5	;RP0=0, select bank0
  1493  02A7  1303               	bcf	3,6	;RP1=0, select bank0
  1494  02A8  00B5               	movwf	??_set_timing
  1495  02A9  0835               	movf	??_set_timing,w
  1496  02AA  00A1               	movwf	lcd_string@num
  1497  02AB  3008               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1498  02AC  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1499                           
  1500                           ;D_Clock.c: 507: lcd_command (0x89) ;
  1501  02B1  3089               	movlw	137
  1502  02B2  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1503                           
  1504                           ;D_Clock.c: 508: bcd_val_hour = decimal_to_bcd (decimal_val_hour);
  1505  02B7  1283               	bcf	3,5	;RP0=0, select bank0
  1506  02B8  1303               	bcf	3,6	;RP1=0, select bank0
  1507  02B9  0842               	movf	set_timing@decimal_val_hour,w
  1508  02BA  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1509  02BF  1283               	bcf	3,5	;RP0=0, select bank0
  1510  02C0  1303               	bcf	3,6	;RP1=0, select bank0
  1511  02C1  00B5               	movwf	??_set_timing
  1512  02C2  0835               	movf	??_set_timing,w
  1513  02C3  00BC               	movwf	set_timing@bcd_val_hour
  1514                           
  1515                           ;D_Clock.c: 509: bcd_to_ascii (bcd_val_hour) ;
  1516  02C4  083C               	movf	set_timing@bcd_val_hour,w
  1517  02C5  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1518                           
  1519                           ;D_Clock.c: 510: lcd_init ();
  1520  02CA  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1521  02CF                     l2010:	
  1522                           
  1523                           ;D_Clock.c: 511: };D_Clock.c: 512: };D_Clock.c: 514: if (timing_flag == 4 )
  1524  02CF  3004               	movlw	4
  1525  02D0  1283               	bcf	3,5	;RP0=0, select bank0
  1526  02D1  1303               	bcf	3,6	;RP1=0, select bank0
  1527  02D2  0649               	xorwf	_timing_flag,w
  1528  02D3  1D03               	btfss	3,2
  1529  02D4  2B94               	goto	l2062
  1530                           
  1531                           ;D_Clock.c: 515: {;D_Clock.c: 516: lcd_command(0x01);
  1532  02D5  3001               	movlw	1
  1533  02D6  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1534                           
  1535                           ;D_Clock.c: 517: lcd_command (0x83);
  1536  02DB  3083               	movlw	131
  1537  02DC  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1538                           
  1539                           ;D_Clock.c: 518: lcd_string ("DATE:",5);
  1540  02E1  3005               	movlw	5
  1541  02E2  1283               	bcf	3,5	;RP0=0, select bank0
  1542  02E3  1303               	bcf	3,6	;RP1=0, select bank0
  1543  02E4  00B5               	movwf	??_set_timing
  1544  02E5  0835               	movf	??_set_timing,w
  1545  02E6  00A1               	movwf	lcd_string@num
  1546  02E7  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1547  02E8  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1548                           
  1549                           ;D_Clock.c: 519: lcd_command (0x89) ;
  1550  02ED  3089               	movlw	137
  1551  02EE  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1552                           
  1553                           ;D_Clock.c: 520: bcd_to_ascii (bcd_val_date) ;
  1554  02F3  1283               	bcf	3,5	;RP0=0, select bank0
  1555  02F4  1303               	bcf	3,6	;RP1=0, select bank0
  1556  02F5  083D               	movf	set_timing@bcd_val_date,w
  1557  02F6  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1558                           
  1559                           ;D_Clock.c: 522: if(PORTBbits.RB4 == 1)
  1560  02FB  1283               	bcf	3,5	;RP0=0, select bank0
  1561  02FC  1303               	bcf	3,6	;RP1=0, select bank0
  1562  02FD  1E06               	btfss	6,4	;volatile
  1563  02FE  2B47               	goto	l2042
  1564  02FF                     l271:	
  1565  02FF  1A06               	btfsc	6,4	;volatile
  1566  0300  2AFF               	goto	l271
  1567                           
  1568                           ;D_Clock.c: 525: decimal_val_date ++ ;
  1569  0301  3001               	movlw	1
  1570  0302  00B5               	movwf	??_set_timing
  1571  0303  0835               	movf	??_set_timing,w
  1572  0304  07C3               	addwf	set_timing@decimal_val_date,f
  1573                           
  1574                           ;D_Clock.c: 526: if(decimal_val_date == 32)
  1575  0305  3020               	movlw	32
  1576  0306  0643               	xorwf	set_timing@decimal_val_date,w
  1577  0307  1903               	btfsc	3,2
  1578                           
  1579                           ;D_Clock.c: 527: {;D_Clock.c: 528: decimal_val_date =0 ;
  1580  0308  01C3               	clrf	set_timing@decimal_val_date
  1581                           
  1582                           ;D_Clock.c: 529: };D_Clock.c: 530: _delay((unsigned long)((100)*(20000000/4000.0)));
  1583  0309  3003               	movlw	3
  1584  030A  1283               	bcf	3,5	;RP0=0, select bank0
  1585  030B  1303               	bcf	3,6	;RP1=0, select bank0
  1586  030C  00B7               	movwf	??_set_timing+2
  1587  030D  308A               	movlw	138
  1588  030E  00B6               	movwf	??_set_timing+1
  1589  030F  3055               	movlw	85
  1590  0310  00B5               	movwf	??_set_timing
  1591  0311                     u2397:	
  1592  0311  0BB5               	decfsz	??_set_timing,f
  1593  0312  2B11               	goto	u2397
  1594  0313  0BB6               	decfsz	??_set_timing+1,f
  1595  0314  2B11               	goto	u2397
  1596  0315  0BB7               	decfsz	??_set_timing+2,f
  1597  0316  2B11               	goto	u2397
  1598                           
  1599                           ;D_Clock.c: 531: lcd_command (0x83);
  1600  0317  3083               	movlw	131
  1601  0318  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1602                           
  1603                           ;D_Clock.c: 532: lcd_string ("DATE:",5);
  1604  031D  3005               	movlw	5
  1605  031E  1283               	bcf	3,5	;RP0=0, select bank0
  1606  031F  1303               	bcf	3,6	;RP1=0, select bank0
  1607  0320  00B5               	movwf	??_set_timing
  1608  0321  0835               	movf	??_set_timing,w
  1609  0322  00A1               	movwf	lcd_string@num
  1610  0323  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1611  0324  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1612                           
  1613                           ;D_Clock.c: 533: lcd_command (0x89) ;
  1614  0329  3089               	movlw	137
  1615  032A  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1616                           
  1617                           ;D_Clock.c: 534: bcd_val_date = decimal_to_bcd (decimal_val_date);
  1618  032F  1283               	bcf	3,5	;RP0=0, select bank0
  1619  0330  1303               	bcf	3,6	;RP1=0, select bank0
  1620  0331  0843               	movf	set_timing@decimal_val_date,w
  1621  0332  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1622  0337  1283               	bcf	3,5	;RP0=0, select bank0
  1623  0338  1303               	bcf	3,6	;RP1=0, select bank0
  1624  0339  00B5               	movwf	??_set_timing
  1625  033A  0835               	movf	??_set_timing,w
  1626  033B  00BD               	movwf	set_timing@bcd_val_date
  1627                           
  1628                           ;D_Clock.c: 535: bcd_to_ascii (bcd_val_date) ;
  1629  033C  083D               	movf	set_timing@bcd_val_date,w
  1630  033D  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1631                           
  1632                           ;D_Clock.c: 536: lcd_init ();
  1633  0342  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1634  0347                     l2042:	
  1635                           
  1636                           ;D_Clock.c: 537: };D_Clock.c: 538: if(PORTBbits.RB5 == 1)
  1637  0347  1283               	bcf	3,5	;RP0=0, select bank0
  1638  0348  1303               	bcf	3,6	;RP1=0, select bank0
  1639  0349  1E86               	btfss	6,5	;volatile
  1640  034A  2B94               	goto	l2062
  1641  034B                     l276:	
  1642  034B  1A86               	btfsc	6,5	;volatile
  1643  034C  2B4B               	goto	l276
  1644                           
  1645                           ;D_Clock.c: 541: decimal_val_date -- ;
  1646  034D  3001               	movlw	1
  1647  034E  02C3               	subwf	set_timing@decimal_val_date,f
  1648                           
  1649                           ;D_Clock.c: 542: if(decimal_val_date == 0)
  1650  034F  0843               	movf	set_timing@decimal_val_date,w
  1651  0350  1D03               	btfss	3,2
  1652  0351  2B56               	goto	l279
  1653                           
  1654                           ;D_Clock.c: 543: {;D_Clock.c: 544: decimal_val_date = 31 ;
  1655  0352  301F               	movlw	31
  1656  0353  00B5               	movwf	??_set_timing
  1657  0354  0835               	movf	??_set_timing,w
  1658  0355  00C3               	movwf	set_timing@decimal_val_date
  1659  0356                     l279:	
  1660                           
  1661                           ;D_Clock.c: 545: };D_Clock.c: 546: _delay((unsigned long)((100)*(20000000/4000.0)));
  1662  0356  3003               	movlw	3
  1663  0357  1283               	bcf	3,5	;RP0=0, select bank0
  1664  0358  1303               	bcf	3,6	;RP1=0, select bank0
  1665  0359  00B7               	movwf	??_set_timing+2
  1666  035A  308A               	movlw	138
  1667  035B  00B6               	movwf	??_set_timing+1
  1668  035C  3055               	movlw	85
  1669  035D  00B5               	movwf	??_set_timing
  1670  035E                     u2407:	
  1671  035E  0BB5               	decfsz	??_set_timing,f
  1672  035F  2B5E               	goto	u2407
  1673  0360  0BB6               	decfsz	??_set_timing+1,f
  1674  0361  2B5E               	goto	u2407
  1675  0362  0BB7               	decfsz	??_set_timing+2,f
  1676  0363  2B5E               	goto	u2407
  1677                           
  1678                           ;D_Clock.c: 547: lcd_command (0x83);
  1679  0364  3083               	movlw	131
  1680  0365  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1681                           
  1682                           ;D_Clock.c: 548: lcd_string ("DATE:",5);
  1683  036A  3005               	movlw	5
  1684  036B  1283               	bcf	3,5	;RP0=0, select bank0
  1685  036C  1303               	bcf	3,6	;RP1=0, select bank0
  1686  036D  00B5               	movwf	??_set_timing
  1687  036E  0835               	movf	??_set_timing,w
  1688  036F  00A1               	movwf	lcd_string@num
  1689  0370  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  1690  0371  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1691                           
  1692                           ;D_Clock.c: 549: lcd_command (0x89) ;
  1693  0376  3089               	movlw	137
  1694  0377  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1695                           
  1696                           ;D_Clock.c: 550: bcd_val_date = decimal_to_bcd (decimal_val_date);
  1697  037C  1283               	bcf	3,5	;RP0=0, select bank0
  1698  037D  1303               	bcf	3,6	;RP1=0, select bank0
  1699  037E  0843               	movf	set_timing@decimal_val_date,w
  1700  037F  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1701  0384  1283               	bcf	3,5	;RP0=0, select bank0
  1702  0385  1303               	bcf	3,6	;RP1=0, select bank0
  1703  0386  00B5               	movwf	??_set_timing
  1704  0387  0835               	movf	??_set_timing,w
  1705  0388  00BD               	movwf	set_timing@bcd_val_date
  1706                           
  1707                           ;D_Clock.c: 551: bcd_to_ascii (bcd_val_date) ;
  1708  0389  083D               	movf	set_timing@bcd_val_date,w
  1709  038A  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1710                           
  1711                           ;D_Clock.c: 552: lcd_init ();
  1712  038F  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1713  0394                     l2062:	
  1714                           
  1715                           ;D_Clock.c: 553: };D_Clock.c: 554: };D_Clock.c: 556: if (timing_flag == 5)
  1716  0394  3005               	movlw	5
  1717  0395  1283               	bcf	3,5	;RP0=0, select bank0
  1718  0396  1303               	bcf	3,6	;RP1=0, select bank0
  1719  0397  0649               	xorwf	_timing_flag,w
  1720  0398  1D03               	btfss	3,2
  1721  0399  2C59               	goto	l2114
  1722                           
  1723                           ;D_Clock.c: 557: {;D_Clock.c: 558: lcd_command(0x01);
  1724  039A  3001               	movlw	1
  1725  039B  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1726                           
  1727                           ;D_Clock.c: 559: lcd_command (0x83);
  1728  03A0  3083               	movlw	131
  1729  03A1  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1730                           
  1731                           ;D_Clock.c: 560: lcd_string ("MON.:",5);
  1732  03A6  3005               	movlw	5
  1733  03A7  1283               	bcf	3,5	;RP0=0, select bank0
  1734  03A8  1303               	bcf	3,6	;RP1=0, select bank0
  1735  03A9  00B5               	movwf	??_set_timing
  1736  03AA  0835               	movf	??_set_timing,w
  1737  03AB  00A1               	movwf	lcd_string@num
  1738  03AC  3014               	movlw	(low ((STR_15-__stringbase)| (0+32768)))& (0+255)
  1739  03AD  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1740                           
  1741                           ;D_Clock.c: 561: lcd_command (0x89) ;
  1742  03B2  3089               	movlw	137
  1743  03B3  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1744                           
  1745                           ;D_Clock.c: 562: bcd_to_ascii (bcd_val_month) ;
  1746  03B8  1283               	bcf	3,5	;RP0=0, select bank0
  1747  03B9  1303               	bcf	3,6	;RP1=0, select bank0
  1748  03BA  083E               	movf	set_timing@bcd_val_month,w
  1749  03BB  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1750                           
  1751                           ;D_Clock.c: 564: if(PORTBbits.RB4 == 1)
  1752  03C0  1283               	bcf	3,5	;RP0=0, select bank0
  1753  03C1  1303               	bcf	3,6	;RP1=0, select bank0
  1754  03C2  1E06               	btfss	6,4	;volatile
  1755  03C3  2C0C               	goto	l2094
  1756  03C4                     l282:	
  1757  03C4  1A06               	btfsc	6,4	;volatile
  1758  03C5  2BC4               	goto	l282
  1759                           
  1760                           ;D_Clock.c: 567: decimal_val_month ++ ;
  1761  03C6  3001               	movlw	1
  1762  03C7  00B5               	movwf	??_set_timing
  1763  03C8  0835               	movf	??_set_timing,w
  1764  03C9  07C4               	addwf	set_timing@decimal_val_month,f
  1765                           
  1766                           ;D_Clock.c: 568: if(decimal_val_month == 60)
  1767  03CA  303C               	movlw	60
  1768  03CB  0644               	xorwf	set_timing@decimal_val_month,w
  1769  03CC  1903               	btfsc	3,2
  1770                           
  1771                           ;D_Clock.c: 569: {;D_Clock.c: 570: decimal_val_month =0 ;
  1772  03CD  01C4               	clrf	set_timing@decimal_val_month
  1773                           
  1774                           ;D_Clock.c: 571: };D_Clock.c: 572: _delay((unsigned long)((100)*(20000000/4000.0)));
  1775  03CE  3003               	movlw	3
  1776  03CF  1283               	bcf	3,5	;RP0=0, select bank0
  1777  03D0  1303               	bcf	3,6	;RP1=0, select bank0
  1778  03D1  00B7               	movwf	??_set_timing+2
  1779  03D2  308A               	movlw	138
  1780  03D3  00B6               	movwf	??_set_timing+1
  1781  03D4  3055               	movlw	85
  1782  03D5  00B5               	movwf	??_set_timing
  1783  03D6                     u2417:	
  1784  03D6  0BB5               	decfsz	??_set_timing,f
  1785  03D7  2BD6               	goto	u2417
  1786  03D8  0BB6               	decfsz	??_set_timing+1,f
  1787  03D9  2BD6               	goto	u2417
  1788  03DA  0BB7               	decfsz	??_set_timing+2,f
  1789  03DB  2BD6               	goto	u2417
  1790                           
  1791                           ;D_Clock.c: 573: lcd_command (0x83);
  1792  03DC  3083               	movlw	131
  1793  03DD  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1794                           
  1795                           ;D_Clock.c: 574: lcd_string ("SEC.:",5);
  1796  03E2  3005               	movlw	5
  1797  03E3  1283               	bcf	3,5	;RP0=0, select bank0
  1798  03E4  1303               	bcf	3,6	;RP1=0, select bank0
  1799  03E5  00B5               	movwf	??_set_timing
  1800  03E6  0835               	movf	??_set_timing,w
  1801  03E7  00A1               	movwf	lcd_string@num
  1802  03E8  3008               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1803  03E9  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1804                           
  1805                           ;D_Clock.c: 575: lcd_command (0x89) ;
  1806  03EE  3089               	movlw	137
  1807  03EF  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1808                           
  1809                           ;D_Clock.c: 576: bcd_val_month = decimal_to_bcd (decimal_val_month);
  1810  03F4  1283               	bcf	3,5	;RP0=0, select bank0
  1811  03F5  1303               	bcf	3,6	;RP1=0, select bank0
  1812  03F6  0844               	movf	set_timing@decimal_val_month,w
  1813  03F7  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1814  03FC  1283               	bcf	3,5	;RP0=0, select bank0
  1815  03FD  1303               	bcf	3,6	;RP1=0, select bank0
  1816  03FE  00B5               	movwf	??_set_timing
  1817  03FF  0835               	movf	??_set_timing,w
  1818  0400  00BE               	movwf	set_timing@bcd_val_month
  1819                           
  1820                           ;D_Clock.c: 577: bcd_to_ascii (bcd_val_month) ;
  1821  0401  083E               	movf	set_timing@bcd_val_month,w
  1822  0402  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1823                           
  1824                           ;D_Clock.c: 578: lcd_init ();
  1825  0407  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1826  040C                     l2094:	
  1827                           
  1828                           ;D_Clock.c: 579: };D_Clock.c: 580: if(PORTBbits.RB5 == 1)
  1829  040C  1283               	bcf	3,5	;RP0=0, select bank0
  1830  040D  1303               	bcf	3,6	;RP1=0, select bank0
  1831  040E  1E86               	btfss	6,5	;volatile
  1832  040F  2C59               	goto	l2114
  1833  0410                     l287:	
  1834  0410  1A86               	btfsc	6,5	;volatile
  1835  0411  2C10               	goto	l287
  1836                           
  1837                           ;D_Clock.c: 583: decimal_val_month -- ;
  1838  0412  3001               	movlw	1
  1839  0413  02C4               	subwf	set_timing@decimal_val_month,f
  1840                           
  1841                           ;D_Clock.c: 584: if(decimal_val_month == 0)
  1842  0414  0844               	movf	set_timing@decimal_val_month,w
  1843  0415  1D03               	btfss	3,2
  1844  0416  2C1B               	goto	l290
  1845                           
  1846                           ;D_Clock.c: 585: {;D_Clock.c: 586: decimal_val_month = 59 ;
  1847  0417  303B               	movlw	59
  1848  0418  00B5               	movwf	??_set_timing
  1849  0419  0835               	movf	??_set_timing,w
  1850  041A  00C4               	movwf	set_timing@decimal_val_month
  1851  041B                     l290:	
  1852                           
  1853                           ;D_Clock.c: 587: };D_Clock.c: 588: _delay((unsigned long)((100)*(20000000/4000.0)));
  1854  041B  3003               	movlw	3
  1855  041C  1283               	bcf	3,5	;RP0=0, select bank0
  1856  041D  1303               	bcf	3,6	;RP1=0, select bank0
  1857  041E  00B7               	movwf	??_set_timing+2
  1858  041F  308A               	movlw	138
  1859  0420  00B6               	movwf	??_set_timing+1
  1860  0421  3055               	movlw	85
  1861  0422  00B5               	movwf	??_set_timing
  1862  0423                     u2427:	
  1863  0423  0BB5               	decfsz	??_set_timing,f
  1864  0424  2C23               	goto	u2427
  1865  0425  0BB6               	decfsz	??_set_timing+1,f
  1866  0426  2C23               	goto	u2427
  1867  0427  0BB7               	decfsz	??_set_timing+2,f
  1868  0428  2C23               	goto	u2427
  1869                           
  1870                           ;D_Clock.c: 589: lcd_command (0x83);
  1871  0429  3083               	movlw	131
  1872  042A  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1873                           
  1874                           ;D_Clock.c: 590: lcd_string ("SEC.:",5);
  1875  042F  3005               	movlw	5
  1876  0430  1283               	bcf	3,5	;RP0=0, select bank0
  1877  0431  1303               	bcf	3,6	;RP1=0, select bank0
  1878  0432  00B5               	movwf	??_set_timing
  1879  0433  0835               	movf	??_set_timing,w
  1880  0434  00A1               	movwf	lcd_string@num
  1881  0435  3008               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
  1882  0436  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1883                           
  1884                           ;D_Clock.c: 591: lcd_command (0x89) ;
  1885  043B  3089               	movlw	137
  1886  043C  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1887                           
  1888                           ;D_Clock.c: 592: bcd_val_month = decimal_to_bcd (decimal_val_month);
  1889  0441  1283               	bcf	3,5	;RP0=0, select bank0
  1890  0442  1303               	bcf	3,6	;RP1=0, select bank0
  1891  0443  0844               	movf	set_timing@decimal_val_month,w
  1892  0444  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  1893  0449  1283               	bcf	3,5	;RP0=0, select bank0
  1894  044A  1303               	bcf	3,6	;RP1=0, select bank0
  1895  044B  00B5               	movwf	??_set_timing
  1896  044C  0835               	movf	??_set_timing,w
  1897  044D  00BE               	movwf	set_timing@bcd_val_month
  1898                           
  1899                           ;D_Clock.c: 593: bcd_to_ascii (bcd_val_month) ;
  1900  044E  083E               	movf	set_timing@bcd_val_month,w
  1901  044F  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1902                           
  1903                           ;D_Clock.c: 594: lcd_init ();
  1904  0454  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  1905  0459                     l2114:	
  1906                           
  1907                           ;D_Clock.c: 595: };D_Clock.c: 596: };D_Clock.c: 598: if (timing_flag == 6)
  1908  0459  3006               	movlw	6
  1909  045A  1283               	bcf	3,5	;RP0=0, select bank0
  1910  045B  1303               	bcf	3,6	;RP1=0, select bank0
  1911  045C  0649               	xorwf	_timing_flag,w
  1912  045D  1D03               	btfss	3,2
  1913  045E  287F               	goto	l2166
  1914                           
  1915                           ;D_Clock.c: 599: {;D_Clock.c: 600: lcd_command(0x01);
  1916  045F  3001               	movlw	1
  1917  0460  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1918                           
  1919                           ;D_Clock.c: 601: lcd_command (0x83);
  1920  0465  3083               	movlw	131
  1921  0466  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1922                           
  1923                           ;D_Clock.c: 602: lcd_string ("yer.:",5);
  1924  046B  3005               	movlw	5
  1925  046C  1283               	bcf	3,5	;RP0=0, select bank0
  1926  046D  1303               	bcf	3,6	;RP1=0, select bank0
  1927  046E  00B5               	movwf	??_set_timing
  1928  046F  0835               	movf	??_set_timing,w
  1929  0470  00A1               	movwf	lcd_string@num
  1930  0471  301A               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1931  0472  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1932                           
  1933                           ;D_Clock.c: 603: lcd_command (0x89) ;
  1934  0477  3089               	movlw	137
  1935  0478  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1936                           
  1937                           ;D_Clock.c: 604: bcd_to_ascii (bcd_val_year) ;
  1938  047D  1283               	bcf	3,5	;RP0=0, select bank0
  1939  047E  1303               	bcf	3,6	;RP1=0, select bank0
  1940  047F  083F               	movf	set_timing@bcd_val_year,w
  1941  0480  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  1942                           
  1943                           ;D_Clock.c: 606: if(PORTBbits.RB4 == 1)
  1944  0485  1283               	bcf	3,5	;RP0=0, select bank0
  1945  0486  1303               	bcf	3,6	;RP1=0, select bank0
  1946  0487  1E06               	btfss	6,4	;volatile
  1947  0488  2CD1               	goto	l2146
  1948  0489                     l293:	
  1949  0489  1A06               	btfsc	6,4	;volatile
  1950  048A  2C89               	goto	l293
  1951                           
  1952                           ;D_Clock.c: 609: decimal_val_year ++ ;
  1953  048B  3001               	movlw	1
  1954  048C  00B5               	movwf	??_set_timing
  1955  048D  0835               	movf	??_set_timing,w
  1956  048E  07C5               	addwf	set_timing@decimal_val_year,f
  1957                           
  1958                           ;D_Clock.c: 610: if(decimal_val_year == 60)
  1959  048F  303C               	movlw	60
  1960  0490  0645               	xorwf	set_timing@decimal_val_year,w
  1961  0491  1903               	btfsc	3,2
  1962                           
  1963                           ;D_Clock.c: 611: {;D_Clock.c: 612: decimal_val_year =0 ;
  1964  0492  01C5               	clrf	set_timing@decimal_val_year
  1965                           
  1966                           ;D_Clock.c: 613: };D_Clock.c: 614: _delay((unsigned long)((100)*(20000000/4000.0)));
  1967  0493  3003               	movlw	3
  1968  0494  1283               	bcf	3,5	;RP0=0, select bank0
  1969  0495  1303               	bcf	3,6	;RP1=0, select bank0
  1970  0496  00B7               	movwf	??_set_timing+2
  1971  0497  308A               	movlw	138
  1972  0498  00B6               	movwf	??_set_timing+1
  1973  0499  3055               	movlw	85
  1974  049A  00B5               	movwf	??_set_timing
  1975  049B                     u2437:	
  1976  049B  0BB5               	decfsz	??_set_timing,f
  1977  049C  2C9B               	goto	u2437
  1978  049D  0BB6               	decfsz	??_set_timing+1,f
  1979  049E  2C9B               	goto	u2437
  1980  049F  0BB7               	decfsz	??_set_timing+2,f
  1981  04A0  2C9B               	goto	u2437
  1982                           
  1983                           ;D_Clock.c: 615: lcd_command (0x83);
  1984  04A1  3083               	movlw	131
  1985  04A2  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  1986                           
  1987                           ;D_Clock.c: 616: lcd_string ("yer.:",5);
  1988  04A7  3005               	movlw	5
  1989  04A8  1283               	bcf	3,5	;RP0=0, select bank0
  1990  04A9  1303               	bcf	3,6	;RP1=0, select bank0
  1991  04AA  00B5               	movwf	??_set_timing
  1992  04AB  0835               	movf	??_set_timing,w
  1993  04AC  00A1               	movwf	lcd_string@num
  1994  04AD  301A               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  1995  04AE  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  1996                           
  1997                           ;D_Clock.c: 617: lcd_command (0x89) ;
  1998  04B3  3089               	movlw	137
  1999  04B4  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  2000                           
  2001                           ;D_Clock.c: 618: bcd_val_year = decimal_to_bcd (decimal_val_year);
  2002  04B9  1283               	bcf	3,5	;RP0=0, select bank0
  2003  04BA  1303               	bcf	3,6	;RP1=0, select bank0
  2004  04BB  0845               	movf	set_timing@decimal_val_year,w
  2005  04BC  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2006  04C1  1283               	bcf	3,5	;RP0=0, select bank0
  2007  04C2  1303               	bcf	3,6	;RP1=0, select bank0
  2008  04C3  00B5               	movwf	??_set_timing
  2009  04C4  0835               	movf	??_set_timing,w
  2010  04C5  00BF               	movwf	set_timing@bcd_val_year
  2011                           
  2012                           ;D_Clock.c: 619: bcd_to_ascii (bcd_val_year) ;
  2013  04C6  083F               	movf	set_timing@bcd_val_year,w
  2014  04C7  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  2015                           
  2016                           ;D_Clock.c: 620: lcd_init ();
  2017  04CC  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  2018  04D1                     l2146:	
  2019                           
  2020                           ;D_Clock.c: 621: };D_Clock.c: 622: if(PORTBbits.RB5 == 1)
  2021  04D1  1283               	bcf	3,5	;RP0=0, select bank0
  2022  04D2  1303               	bcf	3,6	;RP1=0, select bank0
  2023  04D3  1E86               	btfss	6,5	;volatile
  2024  04D4  287F               	goto	l2166
  2025  04D5                     l298:	
  2026  04D5  1A86               	btfsc	6,5	;volatile
  2027  04D6  2CD5               	goto	l298
  2028                           
  2029                           ;D_Clock.c: 625: decimal_val_year -- ;
  2030  04D7  3001               	movlw	1
  2031  04D8  02C5               	subwf	set_timing@decimal_val_year,f
  2032                           
  2033                           ;D_Clock.c: 626: if(decimal_val_year == 0)
  2034  04D9  0845               	movf	set_timing@decimal_val_year,w
  2035  04DA  1D03               	btfss	3,2
  2036  04DB  2CE0               	goto	l301
  2037                           
  2038                           ;D_Clock.c: 627: {;D_Clock.c: 628: decimal_val_year = 59 ;
  2039  04DC  303B               	movlw	59
  2040  04DD  00B5               	movwf	??_set_timing
  2041  04DE  0835               	movf	??_set_timing,w
  2042  04DF  00C5               	movwf	set_timing@decimal_val_year
  2043  04E0                     l301:	
  2044                           
  2045                           ;D_Clock.c: 629: };D_Clock.c: 630: _delay((unsigned long)((100)*(20000000/4000.0)));
  2046  04E0  3003               	movlw	3
  2047  04E1  1283               	bcf	3,5	;RP0=0, select bank0
  2048  04E2  1303               	bcf	3,6	;RP1=0, select bank0
  2049  04E3  00B7               	movwf	??_set_timing+2
  2050  04E4  308A               	movlw	138
  2051  04E5  00B6               	movwf	??_set_timing+1
  2052  04E6  3055               	movlw	85
  2053  04E7  00B5               	movwf	??_set_timing
  2054  04E8                     u2447:	
  2055  04E8  0BB5               	decfsz	??_set_timing,f
  2056  04E9  2CE8               	goto	u2447
  2057  04EA  0BB6               	decfsz	??_set_timing+1,f
  2058  04EB  2CE8               	goto	u2447
  2059  04EC  0BB7               	decfsz	??_set_timing+2,f
  2060  04ED  2CE8               	goto	u2447
  2061                           
  2062                           ;D_Clock.c: 631: lcd_command (0x83);
  2063  04EE  3083               	movlw	131
  2064  04EF  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  2065                           
  2066                           ;D_Clock.c: 632: lcd_string ("yer.:",5);
  2067  04F4  3005               	movlw	5
  2068  04F5  1283               	bcf	3,5	;RP0=0, select bank0
  2069  04F6  1303               	bcf	3,6	;RP1=0, select bank0
  2070  04F7  00B5               	movwf	??_set_timing
  2071  04F8  0835               	movf	??_set_timing,w
  2072  04F9  00A1               	movwf	lcd_string@num
  2073  04FA  301A               	movlw	(low ((STR_18-__stringbase)| (0+32768)))& (0+255)
  2074  04FB  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  2075                           
  2076                           ;D_Clock.c: 633: lcd_command (0x89) ;
  2077  0500  3089               	movlw	137
  2078  0501  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  2079                           
  2080                           ;D_Clock.c: 634: bcd_val_year = decimal_to_bcd (decimal_val_year);
  2081  0506  1283               	bcf	3,5	;RP0=0, select bank0
  2082  0507  1303               	bcf	3,6	;RP1=0, select bank0
  2083  0508  0845               	movf	set_timing@decimal_val_year,w
  2084  0509  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2085  050E  1283               	bcf	3,5	;RP0=0, select bank0
  2086  050F  1303               	bcf	3,6	;RP1=0, select bank0
  2087  0510  00B5               	movwf	??_set_timing
  2088  0511  0835               	movf	??_set_timing,w
  2089  0512  00BF               	movwf	set_timing@bcd_val_year
  2090                           
  2091                           ;D_Clock.c: 635: bcd_to_ascii (bcd_val_year) ;
  2092  0513  083F               	movf	set_timing@bcd_val_year,w
  2093  0514  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  2094  0519  287A               	goto	l2164
  2095  051A                     l2168:	
  2096                           
  2097                           ;D_Clock.c: 637: };D_Clock.c: 638: };D_Clock.c: 642: };D_Clock.c: 644: lcd_init ();
  2098  051A  120A  158A  26DB  120A  118A  	fcall	_lcd_init
  2099                           
  2100                           ;D_Clock.c: 645: lcd_command (0x80);
  2101  051F  3080               	movlw	128
  2102  0520  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  2103                           
  2104                           ;D_Clock.c: 646: lcd_string ("CLOCK:",6);
  2105  0525  3006               	movlw	6
  2106  0526  1283               	bcf	3,5	;RP0=0, select bank0
  2107  0527  1303               	bcf	3,6	;RP1=0, select bank0
  2108  0528  00B5               	movwf	??_set_timing
  2109  0529  0835               	movf	??_set_timing,w
  2110  052A  00A1               	movwf	lcd_string@num
  2111  052B  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  2112  052C  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  2113                           
  2114                           ;D_Clock.c: 647: lcd_command (0xc0) ;
  2115  0531  30C0               	movlw	192
  2116  0532  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  2117                           
  2118                           ;D_Clock.c: 648: lcd_string ("DATE:", 5) ;
  2119  0537  3005               	movlw	5
  2120  0538  1283               	bcf	3,5	;RP0=0, select bank0
  2121  0539  1303               	bcf	3,6	;RP1=0, select bank0
  2122  053A  00B5               	movwf	??_set_timing
  2123  053B  0835               	movf	??_set_timing,w
  2124  053C  00A1               	movwf	lcd_string@num
  2125  053D  3020               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
  2126  053E  120A  118A  27D2  120A  118A  	fcall	_lcd_string
  2127                           
  2128                           ;D_Clock.c: 649: lcd_command (0xc7) ;
  2129  0543  30C7               	movlw	199
  2130  0544  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  2131                           
  2132                           ;D_Clock.c: 650: timing_flag = 0 ;
  2133  0549  1283               	bcf	3,5	;RP0=0, select bank0
  2134  054A  1303               	bcf	3,6	;RP1=0, select bank0
  2135  054B  01C9               	clrf	_timing_flag
  2136                           
  2137                           ;D_Clock.c: 651: _delay((unsigned long)((300)*(20000000/4000.0))) ;
  2138  054C  3008               	movlw	8
  2139  054D  1283               	bcf	3,5	;RP0=0, select bank0
  2140  054E  1303               	bcf	3,6	;RP1=0, select bank0
  2141  054F  00B7               	movwf	??_set_timing+2
  2142  0550  309D               	movlw	157
  2143  0551  00B6               	movwf	??_set_timing+1
  2144  0552  3005               	movlw	5
  2145  0553  00B5               	movwf	??_set_timing
  2146  0554                     u2457:	
  2147  0554  0BB5               	decfsz	??_set_timing,f
  2148  0555  2D54               	goto	u2457
  2149  0556  0BB6               	decfsz	??_set_timing+1,f
  2150  0557  2D54               	goto	u2457
  2151  0558  0BB7               	decfsz	??_set_timing+2,f
  2152  0559  2D54               	goto	u2457
  2153                           
  2154                           ;D_Clock.c: 652: DS1307_write (decimal_val_second, decimal_val_minute, decimal_val_hour,
      +                          1, decimal_val_date, decimal_val_month, decimal_val_year);
  2155  055A  1283               	bcf	3,5	;RP0=0, select bank0
  2156  055B  1303               	bcf	3,6	;RP1=0, select bank0
  2157  055C  0841               	movf	set_timing@decimal_val_minute,w
  2158  055D  00B5               	movwf	??_set_timing
  2159  055E  0835               	movf	??_set_timing,w
  2160  055F  00AF               	movwf	DS1307_write@_minute
  2161  0560  0842               	movf	set_timing@decimal_val_hour,w
  2162  0561  00B6               	movwf	??_set_timing+1
  2163  0562  0836               	movf	??_set_timing+1,w
  2164  0563  00B0               	movwf	DS1307_write@_hour
  2165  0564  01B1               	clrf	DS1307_write@_day
  2166  0565  0AB1               	incf	DS1307_write@_day,f
  2167  0566  0843               	movf	set_timing@decimal_val_date,w
  2168  0567  00B7               	movwf	??_set_timing+2
  2169  0568  0837               	movf	??_set_timing+2,w
  2170  0569  00B2               	movwf	DS1307_write@_date
  2171  056A  0844               	movf	set_timing@decimal_val_month,w
  2172  056B  00B8               	movwf	??_set_timing+3
  2173  056C  0838               	movf	??_set_timing+3,w
  2174  056D  00B3               	movwf	DS1307_write@_month
  2175  056E  0845               	movf	set_timing@decimal_val_year,w
  2176  056F  00B9               	movwf	??_set_timing+4
  2177  0570  0839               	movf	??_set_timing+4,w
  2178  0571  00B4               	movwf	DS1307_write@_year
  2179  0572  0840               	movf	set_timing@decimal_val_second,w
  2180  0573  120A  118A  2680   	fcall	_DS1307_write
  2181  0576  0008               	return
  2182  0577                     __end_of_set_timing:	
  2183                           
  2184                           	psect	text2
  2185  07D2                     __ptext2:	
  2186 ;; *************** function _lcd_string *****************
  2187 ;; Defined at:
  2188 ;;		line 113 in file "D_Clock.c"
  2189 ;; Parameters:    Size  Location     Type
  2190 ;;  str             1    wreg     PTR const unsigned char 
  2191 ;;		 -> STR_22(6), STR_21(7), STR_20(6), STR_19(6), 
  2192 ;;		 -> STR_18(6), STR_17(6), STR_16(6), STR_15(6), 
  2193 ;;		 -> STR_14(6), STR_13(6), STR_12(6), STR_11(6), 
  2194 ;;		 -> STR_10(6), STR_9(6), STR_8(6), STR_7(6), 
  2195 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
  2196 ;;		 -> STR_2(6), STR_1(7), 
  2197 ;;  num             1    1[BANK0 ] unsigned char 
  2198 ;; Auto vars:     Size  Location     Type
  2199 ;;  str             1    4[BANK0 ] PTR const unsigned char 
  2200 ;;		 -> STR_22(6), STR_21(7), STR_20(6), STR_19(6), 
  2201 ;;		 -> STR_18(6), STR_17(6), STR_16(6), STR_15(6), 
  2202 ;;		 -> STR_14(6), STR_13(6), STR_12(6), STR_11(6), 
  2203 ;;		 -> STR_10(6), STR_9(6), STR_8(6), STR_7(6), 
  2204 ;;		 -> STR_6(6), STR_5(6), STR_4(6), STR_3(6), 
  2205 ;;		 -> STR_2(6), STR_1(7), 
  2206 ;;  i               1    3[BANK0 ] unsigned char 
  2207 ;; Return value:  Size  Location     Type
  2208 ;;                  1    wreg      void 
  2209 ;; Registers used:
  2210 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  2211 ;; Tracked objects:
  2212 ;;		On entry : 0/0
  2213 ;;		On exit  : 0/0
  2214 ;;		Unchanged: 0/0
  2215 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2216 ;;      Params:         0       1       0       0       0
  2217 ;;      Locals:         0       2       0       0       0
  2218 ;;      Temps:          0       1       0       0       0
  2219 ;;      Totals:         0       4       0       0       0
  2220 ;;Total ram usage:        4 bytes
  2221 ;; Hardware stack levels used:    1
  2222 ;; Hardware stack levels required when called:    4
  2223 ;; This function calls:
  2224 ;;		_lcd_data
  2225 ;; This function is called by:
  2226 ;;		_main
  2227 ;;		_set_timing
  2228 ;; This function uses a non-reentrant model
  2229 ;;
  2230                           
  2231                           
  2232                           ;psect for function _lcd_string
  2233  07D2                     _lcd_string:	
  2234                           
  2235                           ;incstack = 0
  2236                           ; Regs used in _lcd_string: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  2237                           ;lcd_string@str stored from wreg
  2238  07D2  1283               	bcf	3,5	;RP0=0, select bank0
  2239  07D3  1303               	bcf	3,6	;RP1=0, select bank0
  2240  07D4  00A4               	movwf	lcd_string@str
  2241                           
  2242                           ;D_Clock.c: 114: unsigned char i ;;D_Clock.c: 115: for (i=0; i<num; i++)
  2243  07D5  01A3               	clrf	lcd_string@i
  2244  07D6                     l1702:	
  2245  07D6  0821               	movf	lcd_string@num,w
  2246  07D7  0223               	subwf	lcd_string@i,w
  2247  07D8  1803               	btfsc	3,0
  2248  07D9  0008               	return
  2249                           
  2250                           ;D_Clock.c: 116: {;D_Clock.c: 117: lcd_data(str[i]);
  2251  07DA  0823               	movf	lcd_string@i,w
  2252  07DB  0724               	addwf	lcd_string@str,w
  2253  07DC  0084               	movwf	4
  2254  07DD  120A  158A  2000  120A  118A  	fcall	stringdir
  2255  07E2  120A  158A  269A  120A  118A  	fcall	_lcd_data
  2256  07E7  3001               	movlw	1
  2257  07E8  1283               	bcf	3,5	;RP0=0, select bank0
  2258  07E9  1303               	bcf	3,6	;RP1=0, select bank0
  2259  07EA  00A2               	movwf	??_lcd_string
  2260  07EB  0822               	movf	??_lcd_string,w
  2261  07EC  07A3               	addwf	lcd_string@i,f
  2262  07ED  2FD6               	goto	l1702
  2263  07EE                     __end_of_lcd_string:	
  2264                           
  2265                           	psect	text3
  2266  0EDB                     __ptext3:	
  2267 ;; *************** function _lcd_init *****************
  2268 ;; Defined at:
  2269 ;;		line 88 in file "D_Clock.c"
  2270 ;; Parameters:    Size  Location     Type
  2271 ;;		None
  2272 ;; Auto vars:     Size  Location     Type
  2273 ;;		None
  2274 ;; Return value:  Size  Location     Type
  2275 ;;                  1    wreg      void 
  2276 ;; Registers used:
  2277 ;;		wreg, status,2, status,0, pclath, cstack
  2278 ;; Tracked objects:
  2279 ;;		On entry : 0/0
  2280 ;;		On exit  : 0/0
  2281 ;;		Unchanged: 0/0
  2282 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2283 ;;      Params:         0       0       0       0       0
  2284 ;;      Locals:         0       0       0       0       0
  2285 ;;      Temps:          0       0       0       0       0
  2286 ;;      Totals:         0       0       0       0       0
  2287 ;;Total ram usage:        0 bytes
  2288 ;; Hardware stack levels used:    1
  2289 ;; Hardware stack levels required when called:    4
  2290 ;; This function calls:
  2291 ;;		_lcd_command
  2292 ;; This function is called by:
  2293 ;;		_main
  2294 ;;		_set_timing
  2295 ;; This function uses a non-reentrant model
  2296 ;;
  2297                           
  2298                           
  2299                           ;psect for function _lcd_init
  2300  0EDB                     _lcd_init:	
  2301                           
  2302                           ;D_Clock.c: 89: lcd_command (0x38);
  2303                           
  2304                           ;incstack = 0
  2305                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  2306  0EDB  3038               	movlw	56
  2307  0EDC  120A  158A  26AF  120A  158A  	fcall	_lcd_command
  2308                           
  2309                           ;D_Clock.c: 90: lcd_command (0x06);
  2310  0EE1  3006               	movlw	6
  2311  0EE2  120A  158A  26AF  120A  158A  	fcall	_lcd_command
  2312                           
  2313                           ;D_Clock.c: 91: lcd_command (0x0c);
  2314  0EE7  300C               	movlw	12
  2315  0EE8  120A  158A  26AF  120A  158A  	fcall	_lcd_command
  2316                           
  2317                           ;D_Clock.c: 92: lcd_command (0x01);
  2318  0EED  3001               	movlw	1
  2319  0EEE  120A  158A  26AF   	fcall	_lcd_command
  2320  0EF1  0008               	return
  2321  0EF2                     __end_of_lcd_init:	
  2322                           
  2323                           	psect	text4
  2324  0F0E                     __ptext4:	
  2325 ;; *************** function _bcd_to_decimal *****************
  2326 ;; Defined at:
  2327 ;;		line 331 in file "D_Clock.c"
  2328 ;; Parameters:    Size  Location     Type
  2329 ;;  value           1    wreg     unsigned char 
  2330 ;; Auto vars:     Size  Location     Type
  2331 ;;  value           1    4[BANK0 ] unsigned char 
  2332 ;;  dec             1    5[BANK0 ] unsigned char 
  2333 ;; Return value:  Size  Location     Type
  2334 ;;                  1    wreg      unsigned char 
  2335 ;; Registers used:
  2336 ;;		wreg, status,2, status,0, pclath, cstack
  2337 ;; Tracked objects:
  2338 ;;		On entry : 0/0
  2339 ;;		On exit  : 0/0
  2340 ;;		Unchanged: 0/0
  2341 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2342 ;;      Params:         0       0       0       0       0
  2343 ;;      Locals:         0       2       0       0       0
  2344 ;;      Temps:          0       2       0       0       0
  2345 ;;      Totals:         0       4       0       0       0
  2346 ;;Total ram usage:        4 bytes
  2347 ;; Hardware stack levels used:    1
  2348 ;; Hardware stack levels required when called:    4
  2349 ;; This function calls:
  2350 ;;		___bmul
  2351 ;; This function is called by:
  2352 ;;		_set_timing
  2353 ;; This function uses a non-reentrant model
  2354 ;;
  2355                           
  2356                           
  2357                           ;psect for function _bcd_to_decimal
  2358  0F0E                     _bcd_to_decimal:	
  2359                           
  2360                           ;incstack = 0
  2361                           ; Regs used in _bcd_to_decimal: [wreg+status,2+status,0+pclath+cstack]
  2362                           ;bcd_to_decimal@value stored from wreg
  2363  0F0E  1283               	bcf	3,5	;RP0=0, select bank0
  2364  0F0F  1303               	bcf	3,6	;RP1=0, select bank0
  2365  0F10  00A4               	movwf	bcd_to_decimal@value
  2366                           
  2367                           ;D_Clock.c: 333: unsigned char dec ;;D_Clock.c: 334: dec = value ;
  2368  0F11  0824               	movf	bcd_to_decimal@value,w
  2369  0F12  00A2               	movwf	??_bcd_to_decimal
  2370  0F13  0822               	movf	??_bcd_to_decimal,w
  2371  0F14  00A5               	movwf	bcd_to_decimal@dec
  2372                           
  2373                           ;D_Clock.c: 335: dec = dec & 0xf0 ;
  2374  0F15  0825               	movf	bcd_to_decimal@dec,w
  2375  0F16  39F0               	andlw	240
  2376  0F17  00A2               	movwf	??_bcd_to_decimal
  2377  0F18  0822               	movf	??_bcd_to_decimal,w
  2378  0F19  00A5               	movwf	bcd_to_decimal@dec
  2379                           
  2380                           ;D_Clock.c: 336: dec = dec >> 4 ;
  2381  0F1A  0825               	movf	bcd_to_decimal@dec,w
  2382  0F1B  00A2               	movwf	??_bcd_to_decimal
  2383  0F1C  3004               	movlw	4
  2384  0F1D                     u1565:	
  2385  0F1D  1003               	clrc
  2386  0F1E  0CA2               	rrf	??_bcd_to_decimal,f
  2387  0F1F  3EFF               	addlw	-1
  2388  0F20  1D03               	skipz
  2389  0F21  2F1D               	goto	u1565
  2390  0F22  0822               	movf	??_bcd_to_decimal,w
  2391  0F23  00A3               	movwf	??_bcd_to_decimal+1
  2392  0F24  0823               	movf	??_bcd_to_decimal+1,w
  2393  0F25  00A5               	movwf	bcd_to_decimal@dec
  2394                           
  2395                           ;D_Clock.c: 337: dec = dec * 10 ;
  2396  0F26  300A               	movlw	10
  2397  0F27  00A2               	movwf	??_bcd_to_decimal
  2398  0F28  0822               	movf	??_bcd_to_decimal,w
  2399  0F29  00F6               	movwf	___bmul@multiplicand
  2400  0F2A  0825               	movf	bcd_to_decimal@dec,w
  2401  0F2B  120A  158A  2672   	fcall	___bmul
  2402  0F2E  1283               	bcf	3,5	;RP0=0, select bank0
  2403  0F2F  1303               	bcf	3,6	;RP1=0, select bank0
  2404  0F30  00A3               	movwf	??_bcd_to_decimal+1
  2405  0F31  0823               	movf	??_bcd_to_decimal+1,w
  2406  0F32  00A5               	movwf	bcd_to_decimal@dec
  2407                           
  2408                           ;D_Clock.c: 338: dec = dec + (value & 0x0f) ;
  2409  0F33  300F               	movlw	15
  2410  0F34  0524               	andwf	bcd_to_decimal@value,w
  2411  0F35  00A2               	movwf	??_bcd_to_decimal
  2412  0F36  0825               	movf	bcd_to_decimal@dec,w
  2413  0F37  0722               	addwf	??_bcd_to_decimal,w
  2414  0F38  00A3               	movwf	??_bcd_to_decimal+1
  2415  0F39  0823               	movf	??_bcd_to_decimal+1,w
  2416  0F3A  00A5               	movwf	bcd_to_decimal@dec
  2417                           
  2418                           ;D_Clock.c: 339: return (dec) ;
  2419  0F3B  0825               	movf	bcd_to_decimal@dec,w
  2420  0F3C  0008               	return
  2421  0F3D                     __end_of_bcd_to_decimal:	
  2422                           
  2423                           	psect	text5
  2424  0E72                     __ptext5:	
  2425 ;; *************** function ___bmul *****************
  2426 ;; Defined at:
  2427 ;;		line 4 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\Umul8.c"
  2428 ;; Parameters:    Size  Location     Type
  2429 ;;  multiplier      1    wreg     unsigned char 
  2430 ;;  multiplicand    1    6[COMMON] unsigned char 
  2431 ;; Auto vars:     Size  Location     Type
  2432 ;;  multiplier      1    1[BANK0 ] unsigned char 
  2433 ;;  product         1    0[BANK0 ] unsigned char 
  2434 ;; Return value:  Size  Location     Type
  2435 ;;                  1    wreg      unsigned char 
  2436 ;; Registers used:
  2437 ;;		wreg, status,2, status,0
  2438 ;; Tracked objects:
  2439 ;;		On entry : 0/0
  2440 ;;		On exit  : 0/0
  2441 ;;		Unchanged: 0/0
  2442 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2443 ;;      Params:         1       0       0       0       0
  2444 ;;      Locals:         0       2       0       0       0
  2445 ;;      Temps:          1       0       0       0       0
  2446 ;;      Totals:         2       2       0       0       0
  2447 ;;Total ram usage:        4 bytes
  2448 ;; Hardware stack levels used:    1
  2449 ;; Hardware stack levels required when called:    3
  2450 ;; This function calls:
  2451 ;;		Nothing
  2452 ;; This function is called by:
  2453 ;;		_bcd_to_decimal
  2454 ;; This function uses a non-reentrant model
  2455 ;;
  2456                           
  2457                           
  2458                           ;psect for function ___bmul
  2459  0E72                     ___bmul:	
  2460                           
  2461                           ;incstack = 0
  2462                           ; Regs used in ___bmul: [wreg+status,2+status,0]
  2463                           ;___bmul@multiplier stored from wreg
  2464  0E72  1283               	bcf	3,5	;RP0=0, select bank0
  2465  0E73  1303               	bcf	3,6	;RP1=0, select bank0
  2466  0E74  00A1               	movwf	___bmul@multiplier
  2467  0E75  01A0               	clrf	___bmul@product
  2468  0E76                     l1682:	
  2469  0E76  1C21               	btfss	___bmul@multiplier,0
  2470  0E77  2E7C               	goto	l1686
  2471  0E78  0876               	movf	___bmul@multiplicand,w
  2472  0E79  00F7               	movwf	??___bmul
  2473  0E7A  0877               	movf	??___bmul,w
  2474  0E7B  07A0               	addwf	___bmul@product,f
  2475  0E7C                     l1686:	
  2476  0E7C  1003               	clrc
  2477  0E7D  0DF6               	rlf	___bmul@multiplicand,f
  2478  0E7E  1003               	clrc
  2479  0E7F  0CA1               	rrf	___bmul@multiplier,f
  2480  0E80  0821               	movf	___bmul@multiplier,w
  2481  0E81  1D03               	btfss	3,2
  2482  0E82  2E76               	goto	l1682
  2483  0E83  0820               	movf	___bmul@product,w
  2484  0E84  0008               	return
  2485  0E85                     __end_of___bmul:	
  2486                           
  2487                           	psect	text6
  2488  0680                     __ptext6:	
  2489 ;; *************** function _DS1307_write *****************
  2490 ;; Defined at:
  2491 ;;		line 121 in file "D_Clock.c"
  2492 ;; Parameters:    Size  Location     Type
  2493 ;;  _second         1    wreg     unsigned char 
  2494 ;;  _minute         1   15[BANK0 ] unsigned char 
  2495 ;;  _hour           1   16[BANK0 ] unsigned char 
  2496 ;;  _day            1   17[BANK0 ] unsigned char 
  2497 ;;  _date           1   18[BANK0 ] unsigned char 
  2498 ;;  _month          1   19[BANK0 ] unsigned char 
  2499 ;;  _year           1   20[BANK0 ] unsigned char 
  2500 ;; Auto vars:     Size  Location     Type
  2501 ;;  _second         1    7[COMMON] unsigned char 
  2502 ;; Return value:  Size  Location     Type
  2503 ;;                  1    wreg      void 
  2504 ;; Registers used:
  2505 ;;		wreg, status,2, status,0, pclath, cstack
  2506 ;; Tracked objects:
  2507 ;;		On entry : 0/0
  2508 ;;		On exit  : 0/0
  2509 ;;		Unchanged: 0/0
  2510 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2511 ;;      Params:         0       6       0       0       0
  2512 ;;      Locals:         1       0       0       0       0
  2513 ;;      Temps:          0       0       0       0       0
  2514 ;;      Totals:         1       6       0       0       0
  2515 ;;Total ram usage:        7 bytes
  2516 ;; Hardware stack levels used:    1
  2517 ;; Hardware stack levels required when called:    5
  2518 ;; This function calls:
  2519 ;;		_decimal_to_bcd
  2520 ;; This function is called by:
  2521 ;;		_set_timing
  2522 ;; This function uses a non-reentrant model
  2523 ;;
  2524                           
  2525                           
  2526                           ;psect for function _DS1307_write
  2527  0680                     _DS1307_write:	
  2528                           
  2529                           ;incstack = 0
  2530                           ; Regs used in _DS1307_write: [wreg+status,2+status,0+pclath+cstack]
  2531                           ;DS1307_write@_second stored from wreg
  2532  0680  00F7               	movwf	DS1307_write@_second
  2533                           
  2534                           ;D_Clock.c: 124: SSPCON2bits.SEN = 1;
  2535  0681  1683               	bsf	3,5	;RP0=1, select bank1
  2536  0682  1303               	bcf	3,6	;RP1=0, select bank1
  2537  0683  1411               	bsf	17,0	;volatile
  2538  0684                     l97:	
  2539                           ;D_Clock.c: 125: while (SEN);
  2540                           
  2541  0684  1811               	btfsc	17,0	;volatile
  2542  0685  2E84               	goto	l97
  2543                           
  2544                           ;D_Clock.c: 126: PIR1bits.SSPIF =0 ;
  2545  0686  1283               	bcf	3,5	;RP0=0, select bank0
  2546  0687  1303               	bcf	3,6	;RP1=0, select bank0
  2547  0688  118C               	bcf	12,3	;volatile
  2548                           
  2549                           ;D_Clock.c: 129: SSPBUF = 0xd0 ;
  2550  0689  30D0               	movlw	208
  2551  068A  0093               	movwf	19	;volatile
  2552  068B                     l100:	
  2553                           ;D_Clock.c: 130: while (!SSPIF) ;
  2554                           
  2555  068B  1D8C               	btfss	12,3	;volatile
  2556  068C  2E8B               	goto	l100
  2557                           
  2558                           ;D_Clock.c: 131: PIR1bits.SSPIF = 0 ;
  2559  068D  118C               	bcf	12,3	;volatile
  2560                           
  2561                           ;D_Clock.c: 132: if (SSPCON2bits.ACKSTAT)
  2562  068E  1683               	bsf	3,5	;RP0=1, select bank1
  2563  068F  1303               	bcf	3,6	;RP1=0, select bank1
  2564  0690  1F11               	btfss	17,6	;volatile
  2565  0691  2E96               	goto	l1710
  2566                           
  2567                           ;D_Clock.c: 133: {;D_Clock.c: 134: SSPCON2bits.PEN = 1;
  2568  0692  1511               	bsf	17,2	;volatile
  2569  0693                     l104:	
  2570                           ;D_Clock.c: 135: while (PEN);
  2571                           
  2572  0693  1D11               	btfss	17,2	;volatile
  2573  0694  0008               	return
  2574  0695  2E93               	goto	l104
  2575  0696                     l1710:	
  2576                           
  2577                           ;D_Clock.c: 137: };D_Clock.c: 140: SSPBUF = 0x00 ;
  2578  0696  1283               	bcf	3,5	;RP0=0, select bank0
  2579  0697  1303               	bcf	3,6	;RP1=0, select bank0
  2580  0698  0193               	clrf	19	;volatile
  2581  0699                     l108:	
  2582                           ;D_Clock.c: 141: while (!SSPIF);
  2583                           
  2584  0699  1D8C               	btfss	12,3	;volatile
  2585  069A  2E99               	goto	l108
  2586                           
  2587                           ;D_Clock.c: 142: PIR1bits.SSPIF = 0 ;
  2588  069B  118C               	bcf	12,3	;volatile
  2589                           
  2590                           ;D_Clock.c: 143: if (SSPCON2bits.ACKSTAT)
  2591  069C  1683               	bsf	3,5	;RP0=1, select bank1
  2592  069D  1303               	bcf	3,6	;RP1=0, select bank1
  2593  069E  1F11               	btfss	17,6	;volatile
  2594  069F  2EA4               	goto	l1714
  2595                           
  2596                           ;D_Clock.c: 144: {;D_Clock.c: 145: SSPCON2bits.PEN = 1;
  2597  06A0  1511               	bsf	17,2	;volatile
  2598  06A1                     l112:	
  2599                           ;D_Clock.c: 146: while (PEN);
  2600                           
  2601  06A1  1D11               	btfss	17,2	;volatile
  2602  06A2  0008               	return
  2603  06A3  2EA1               	goto	l112
  2604  06A4                     l1714:	
  2605                           
  2606                           ;D_Clock.c: 148: };D_Clock.c: 150: SSPBUF = decimal_to_bcd (_second) ;
  2607  06A4  0877               	movf	DS1307_write@_second,w
  2608  06A5  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2609  06AA  1283               	bcf	3,5	;RP0=0, select bank0
  2610  06AB  1303               	bcf	3,6	;RP1=0, select bank0
  2611  06AC  0093               	movwf	19	;volatile
  2612  06AD                     l115:	
  2613                           ;D_Clock.c: 151: while(!SSPIF);
  2614                           
  2615  06AD  1D8C               	btfss	12,3	;volatile
  2616  06AE  2EAD               	goto	l115
  2617                           
  2618                           ;D_Clock.c: 152: PIR1bits.SSPIF = 0 ;
  2619  06AF  118C               	bcf	12,3	;volatile
  2620                           
  2621                           ;D_Clock.c: 154: SSPBUF = decimal_to_bcd (_minute) ;
  2622  06B0  082F               	movf	DS1307_write@_minute,w
  2623  06B1  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2624  06B6  1283               	bcf	3,5	;RP0=0, select bank0
  2625  06B7  1303               	bcf	3,6	;RP1=0, select bank0
  2626  06B8  0093               	movwf	19	;volatile
  2627  06B9                     l118:	
  2628                           ;D_Clock.c: 155: while(!SSPIF);
  2629                           
  2630  06B9  1D8C               	btfss	12,3	;volatile
  2631  06BA  2EB9               	goto	l118
  2632                           
  2633                           ;D_Clock.c: 156: PIR1bits.SSPIF = 0 ;
  2634  06BB  118C               	bcf	12,3	;volatile
  2635                           
  2636                           ;D_Clock.c: 158: SSPBUF = decimal_to_bcd (_hour) ;
  2637  06BC  0830               	movf	DS1307_write@_hour,w
  2638  06BD  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2639  06C2  1283               	bcf	3,5	;RP0=0, select bank0
  2640  06C3  1303               	bcf	3,6	;RP1=0, select bank0
  2641  06C4  0093               	movwf	19	;volatile
  2642  06C5                     l121:	
  2643                           ;D_Clock.c: 159: while(!SSPIF);
  2644                           
  2645  06C5  1D8C               	btfss	12,3	;volatile
  2646  06C6  2EC5               	goto	l121
  2647                           
  2648                           ;D_Clock.c: 160: PIR1bits.SSPIF = 0 ;
  2649  06C7  118C               	bcf	12,3	;volatile
  2650                           
  2651                           ;D_Clock.c: 162: SSPBUF = decimal_to_bcd (_day) ;
  2652  06C8  0831               	movf	DS1307_write@_day,w
  2653  06C9  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2654  06CE  1283               	bcf	3,5	;RP0=0, select bank0
  2655  06CF  1303               	bcf	3,6	;RP1=0, select bank0
  2656  06D0  0093               	movwf	19	;volatile
  2657  06D1                     l124:	
  2658                           ;D_Clock.c: 163: while(!SSPIF);
  2659                           
  2660  06D1  1D8C               	btfss	12,3	;volatile
  2661  06D2  2ED1               	goto	l124
  2662                           
  2663                           ;D_Clock.c: 164: PIR1bits.SSPIF = 0 ;
  2664  06D3  118C               	bcf	12,3	;volatile
  2665                           
  2666                           ;D_Clock.c: 166: SSPBUF = decimal_to_bcd (_date) ;
  2667  06D4  0832               	movf	DS1307_write@_date,w
  2668  06D5  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2669  06DA  1283               	bcf	3,5	;RP0=0, select bank0
  2670  06DB  1303               	bcf	3,6	;RP1=0, select bank0
  2671  06DC  0093               	movwf	19	;volatile
  2672  06DD                     l127:	
  2673                           ;D_Clock.c: 167: while(!SSPIF);
  2674                           
  2675  06DD  1D8C               	btfss	12,3	;volatile
  2676  06DE  2EDD               	goto	l127
  2677                           
  2678                           ;D_Clock.c: 168: PIR1bits.SSPIF = 0 ;
  2679  06DF  118C               	bcf	12,3	;volatile
  2680                           
  2681                           ;D_Clock.c: 170: SSPBUF = decimal_to_bcd (_month) ;
  2682  06E0  0833               	movf	DS1307_write@_month,w
  2683  06E1  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2684  06E6  1283               	bcf	3,5	;RP0=0, select bank0
  2685  06E7  1303               	bcf	3,6	;RP1=0, select bank0
  2686  06E8  0093               	movwf	19	;volatile
  2687  06E9                     l130:	
  2688                           ;D_Clock.c: 171: while(!SSPIF);
  2689                           
  2690  06E9  1D8C               	btfss	12,3	;volatile
  2691  06EA  2EE9               	goto	l130
  2692                           
  2693                           ;D_Clock.c: 172: PIR1bits.SSPIF = 0 ;
  2694  06EB  118C               	bcf	12,3	;volatile
  2695                           
  2696                           ;D_Clock.c: 174: SSPBUF = decimal_to_bcd (_year) ;
  2697  06EC  0834               	movf	DS1307_write@_year,w
  2698  06ED  120A  158A  2775  120A  118A  	fcall	_decimal_to_bcd
  2699  06F2  1283               	bcf	3,5	;RP0=0, select bank0
  2700  06F3  1303               	bcf	3,6	;RP1=0, select bank0
  2701  06F4  0093               	movwf	19	;volatile
  2702  06F5                     l133:	
  2703                           ;D_Clock.c: 175: while(!SSPIF);
  2704                           
  2705  06F5  1D8C               	btfss	12,3	;volatile
  2706  06F6  2EF5               	goto	l133
  2707                           
  2708                           ;D_Clock.c: 176: PIR1bits.SSPIF = 0 ;
  2709  06F7  118C               	bcf	12,3	;volatile
  2710                           
  2711                           ;D_Clock.c: 178: SSPBUF = 0x00 ;
  2712  06F8  0193               	clrf	19	;volatile
  2713  06F9                     l136:	
  2714                           ;D_Clock.c: 179: while(!SSPIF);
  2715                           
  2716  06F9  1D8C               	btfss	12,3	;volatile
  2717  06FA  2EF9               	goto	l136
  2718                           
  2719                           ;D_Clock.c: 180: PIR1bits.SSPIF = 0 ;
  2720  06FB  118C               	bcf	12,3	;volatile
  2721                           
  2722                           ;D_Clock.c: 183: SSPCON2bits.PEN = 1 ;
  2723  06FC  1683               	bsf	3,5	;RP0=1, select bank1
  2724  06FD  1303               	bcf	3,6	;RP1=0, select bank1
  2725  06FE  1511               	bsf	17,2	;volatile
  2726  06FF                     l139:	
  2727                           ;D_Clock.c: 184: while(PEN) ;
  2728                           
  2729  06FF  1911               	btfsc	17,2	;volatile
  2730  0700  2EFF               	goto	l139
  2731                           
  2732                           ;D_Clock.c: 185: PIR1bits.SSPIF = 0 ;
  2733  0701  1283               	bcf	3,5	;RP0=0, select bank0
  2734  0702  1303               	bcf	3,6	;RP1=0, select bank0
  2735  0703  118C               	bcf	12,3	;volatile
  2736  0704  0008               	return
  2737  0705                     __end_of_DS1307_write:	
  2738                           
  2739                           	psect	text7
  2740  0F75                     __ptext7:	
  2741 ;; *************** function _decimal_to_bcd *****************
  2742 ;; Defined at:
  2743 ;;		line 342 in file "D_Clock.c"
  2744 ;; Parameters:    Size  Location     Type
  2745 ;;  value           1    wreg     unsigned char 
  2746 ;; Auto vars:     Size  Location     Type
  2747 ;;  value           1   14[BANK0 ] unsigned char 
  2748 ;;  hex             1   13[BANK0 ] unsigned char 
  2749 ;;  lsb             1   12[BANK0 ] unsigned char 
  2750 ;;  msb             1   11[BANK0 ] unsigned char 
  2751 ;; Return value:  Size  Location     Type
  2752 ;;                  1    wreg      unsigned char 
  2753 ;; Registers used:
  2754 ;;		wreg, status,2, status,0, pclath, cstack
  2755 ;; Tracked objects:
  2756 ;;		On entry : 0/0
  2757 ;;		On exit  : 0/0
  2758 ;;		Unchanged: 0/0
  2759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2760 ;;      Params:         0       0       0       0       0
  2761 ;;      Locals:         0       4       0       0       0
  2762 ;;      Temps:          0       3       0       0       0
  2763 ;;      Totals:         0       7       0       0       0
  2764 ;;Total ram usage:        7 bytes
  2765 ;; Hardware stack levels used:    1
  2766 ;; Hardware stack levels required when called:    4
  2767 ;; This function calls:
  2768 ;;		___awdiv
  2769 ;;		___awmod
  2770 ;; This function is called by:
  2771 ;;		_DS1307_write
  2772 ;;		_set_timing
  2773 ;; This function uses a non-reentrant model
  2774 ;;
  2775                           
  2776                           
  2777                           ;psect for function _decimal_to_bcd
  2778  0F75                     _decimal_to_bcd:	
  2779                           
  2780                           ;incstack = 0
  2781                           ; Regs used in _decimal_to_bcd: [wreg+status,2+status,0+pclath+cstack]
  2782                           ;decimal_to_bcd@value stored from wreg
  2783  0F75  1283               	bcf	3,5	;RP0=0, select bank0
  2784  0F76  1303               	bcf	3,6	;RP1=0, select bank0
  2785  0F77  00AE               	movwf	decimal_to_bcd@value
  2786                           
  2787                           ;D_Clock.c: 344: unsigned char msb ;;D_Clock.c: 345: unsigned char lsb ;;D_Clock.c: 346:
      +                           unsigned char hex ;;D_Clock.c: 348: msb = value / 10 ;
  2788  0F78  300A               	movlw	10
  2789  0F79  00A0               	movwf	___awdiv@divisor
  2790  0F7A  3000               	movlw	0
  2791  0F7B  00A1               	movwf	___awdiv@divisor+1
  2792  0F7C  082E               	movf	decimal_to_bcd@value,w
  2793  0F7D  00A8               	movwf	??_decimal_to_bcd
  2794  0F7E  01A9               	clrf	??_decimal_to_bcd+1
  2795  0F7F  0828               	movf	??_decimal_to_bcd,w
  2796  0F80  00A2               	movwf	___awdiv@dividend
  2797  0F81  0829               	movf	??_decimal_to_bcd+1,w
  2798  0F82  00A3               	movwf	___awdiv@dividend+1
  2799  0F83  120A  118A  2777  120A  158A  	fcall	___awdiv
  2800  0F88  1283               	bcf	3,5	;RP0=0, select bank0
  2801  0F89  1303               	bcf	3,6	;RP1=0, select bank0
  2802  0F8A  0820               	movf	?___awdiv,w
  2803  0F8B  00AA               	movwf	??_decimal_to_bcd+2
  2804  0F8C  082A               	movf	??_decimal_to_bcd+2,w
  2805  0F8D  00AB               	movwf	decimal_to_bcd@msb
  2806                           
  2807                           ;D_Clock.c: 349: lsb = value % 10 ;
  2808  0F8E  300A               	movlw	10
  2809  0F8F  00A0               	movwf	___awmod@divisor
  2810  0F90  3000               	movlw	0
  2811  0F91  00A1               	movwf	___awmod@divisor+1
  2812  0F92  082E               	movf	decimal_to_bcd@value,w
  2813  0F93  00A8               	movwf	??_decimal_to_bcd
  2814  0F94  01A9               	clrf	??_decimal_to_bcd+1
  2815  0F95  0828               	movf	??_decimal_to_bcd,w
  2816  0F96  00A2               	movwf	___awmod@dividend
  2817  0F97  0829               	movf	??_decimal_to_bcd+1,w
  2818  0F98  00A3               	movwf	___awmod@dividend+1
  2819  0F99  120A  158A  27B3  120A  158A  	fcall	___awmod
  2820  0F9E  1283               	bcf	3,5	;RP0=0, select bank0
  2821  0F9F  1303               	bcf	3,6	;RP1=0, select bank0
  2822  0FA0  0820               	movf	?___awmod,w
  2823  0FA1  00AA               	movwf	??_decimal_to_bcd+2
  2824  0FA2  082A               	movf	??_decimal_to_bcd+2,w
  2825  0FA3  00AC               	movwf	decimal_to_bcd@lsb
  2826                           
  2827                           ;D_Clock.c: 350: hex = ((msb<< 4) + lsb ) ;
  2828  0FA4  082B               	movf	decimal_to_bcd@msb,w
  2829  0FA5  00A8               	movwf	??_decimal_to_bcd
  2830  0FA6  3004               	movlw	4
  2831  0FA7                     u1355:	
  2832  0FA7  1003               	clrc
  2833  0FA8  0DA8               	rlf	??_decimal_to_bcd,f
  2834  0FA9  3EFF               	addlw	-1
  2835  0FAA  1D03               	skipz
  2836  0FAB  2FA7               	goto	u1355
  2837  0FAC  082C               	movf	decimal_to_bcd@lsb,w
  2838  0FAD  0728               	addwf	??_decimal_to_bcd,w
  2839  0FAE  00A9               	movwf	??_decimal_to_bcd+1
  2840  0FAF  0829               	movf	??_decimal_to_bcd+1,w
  2841  0FB0  00AD               	movwf	decimal_to_bcd@hex
  2842                           
  2843                           ;D_Clock.c: 351: return (hex) ;
  2844  0FB1  082D               	movf	decimal_to_bcd@hex,w
  2845  0FB2  0008               	return
  2846  0FB3                     __end_of_decimal_to_bcd:	
  2847                           
  2848                           	psect	text8
  2849  0FB3                     __ptext8:	
  2850 ;; *************** function ___awmod *****************
  2851 ;; Defined at:
  2852 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awmod.c"
  2853 ;; Parameters:    Size  Location     Type
  2854 ;;  divisor         2    0[BANK0 ] int 
  2855 ;;  dividend        2    2[BANK0 ] int 
  2856 ;; Auto vars:     Size  Location     Type
  2857 ;;  sign            1    5[BANK0 ] unsigned char 
  2858 ;;  counter         1    4[BANK0 ] unsigned char 
  2859 ;; Return value:  Size  Location     Type
  2860 ;;                  2    0[BANK0 ] int 
  2861 ;; Registers used:
  2862 ;;		wreg, status,2, status,0
  2863 ;; Tracked objects:
  2864 ;;		On entry : 0/0
  2865 ;;		On exit  : 0/0
  2866 ;;		Unchanged: 0/0
  2867 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2868 ;;      Params:         0       4       0       0       0
  2869 ;;      Locals:         0       2       0       0       0
  2870 ;;      Temps:          1       0       0       0       0
  2871 ;;      Totals:         1       6       0       0       0
  2872 ;;Total ram usage:        7 bytes
  2873 ;; Hardware stack levels used:    1
  2874 ;; Hardware stack levels required when called:    3
  2875 ;; This function calls:
  2876 ;;		Nothing
  2877 ;; This function is called by:
  2878 ;;		_decimal_to_bcd
  2879 ;; This function uses a non-reentrant model
  2880 ;;
  2881                           
  2882                           
  2883                           ;psect for function ___awmod
  2884  0FB3                     ___awmod:	
  2885                           
  2886                           ;incstack = 0
  2887                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2888  0FB3  1283               	bcf	3,5	;RP0=0, select bank0
  2889  0FB4  1303               	bcf	3,6	;RP1=0, select bank0
  2890  0FB5  01A5               	clrf	___awmod@sign
  2891  0FB6  1FA3               	btfss	___awmod@dividend+1,7
  2892  0FB7  2FBF               	goto	l1622
  2893  0FB8  09A2               	comf	___awmod@dividend,f
  2894  0FB9  09A3               	comf	___awmod@dividend+1,f
  2895  0FBA  0AA2               	incf	___awmod@dividend,f
  2896  0FBB  1903               	skipnz
  2897  0FBC  0AA3               	incf	___awmod@dividend+1,f
  2898  0FBD  01A5               	clrf	___awmod@sign
  2899  0FBE  0AA5               	incf	___awmod@sign,f
  2900  0FBF                     l1622:	
  2901  0FBF  1FA1               	btfss	___awmod@divisor+1,7
  2902  0FC0  2FC6               	goto	l1626
  2903  0FC1  09A0               	comf	___awmod@divisor,f
  2904  0FC2  09A1               	comf	___awmod@divisor+1,f
  2905  0FC3  0AA0               	incf	___awmod@divisor,f
  2906  0FC4  1903               	skipnz
  2907  0FC5  0AA1               	incf	___awmod@divisor+1,f
  2908  0FC6                     l1626:	
  2909  0FC6  0820               	movf	___awmod@divisor,w
  2910  0FC7  0421               	iorwf	___awmod@divisor+1,w
  2911  0FC8  1903               	btfsc	3,2
  2912  0FC9  2FF3               	goto	l1644
  2913  0FCA  01A4               	clrf	___awmod@counter
  2914  0FCB  0AA4               	incf	___awmod@counter,f
  2915  0FCC                     l1634:	
  2916  0FCC  1BA1               	btfsc	___awmod@divisor+1,7
  2917  0FCD  2FDA               	goto	l1636
  2918  0FCE  3001               	movlw	1
  2919  0FCF                     u1295:	
  2920  0FCF  1003               	clrc
  2921  0FD0  0DA0               	rlf	___awmod@divisor,f
  2922  0FD1  0DA1               	rlf	___awmod@divisor+1,f
  2923  0FD2  3EFF               	addlw	-1
  2924  0FD3  1D03               	skipz
  2925  0FD4  2FCF               	goto	u1295
  2926  0FD5  3001               	movlw	1
  2927  0FD6  00F6               	movwf	??___awmod
  2928  0FD7  0876               	movf	??___awmod,w
  2929  0FD8  07A4               	addwf	___awmod@counter,f
  2930  0FD9  2FCC               	goto	l1634
  2931  0FDA                     l1636:	
  2932  0FDA  0821               	movf	___awmod@divisor+1,w
  2933  0FDB  0223               	subwf	___awmod@dividend+1,w
  2934  0FDC  1D03               	skipz
  2935  0FDD  2FE0               	goto	u1315
  2936  0FDE  0820               	movf	___awmod@divisor,w
  2937  0FDF  0222               	subwf	___awmod@dividend,w
  2938  0FE0                     u1315:	
  2939  0FE0  1C03               	skipc
  2940  0FE1  2FE8               	goto	l1640
  2941  0FE2  0820               	movf	___awmod@divisor,w
  2942  0FE3  02A2               	subwf	___awmod@dividend,f
  2943  0FE4  0821               	movf	___awmod@divisor+1,w
  2944  0FE5  1C03               	skipc
  2945  0FE6  03A3               	decf	___awmod@dividend+1,f
  2946  0FE7  02A3               	subwf	___awmod@dividend+1,f
  2947  0FE8                     l1640:	
  2948  0FE8  3001               	movlw	1
  2949  0FE9                     u1325:	
  2950  0FE9  1003               	clrc
  2951  0FEA  0CA1               	rrf	___awmod@divisor+1,f
  2952  0FEB  0CA0               	rrf	___awmod@divisor,f
  2953  0FEC  3EFF               	addlw	-1
  2954  0FED  1D03               	skipz
  2955  0FEE  2FE9               	goto	u1325
  2956  0FEF  3001               	movlw	1
  2957  0FF0  02A4               	subwf	___awmod@counter,f
  2958  0FF1  1D03               	btfss	3,2
  2959  0FF2  2FDA               	goto	l1636
  2960  0FF3                     l1644:	
  2961  0FF3  0825               	movf	___awmod@sign,w
  2962  0FF4  1903               	btfsc	3,2
  2963  0FF5  2FFB               	goto	l1648
  2964  0FF6  09A2               	comf	___awmod@dividend,f
  2965  0FF7  09A3               	comf	___awmod@dividend+1,f
  2966  0FF8  0AA2               	incf	___awmod@dividend,f
  2967  0FF9  1903               	skipnz
  2968  0FFA  0AA3               	incf	___awmod@dividend+1,f
  2969  0FFB                     l1648:	
  2970  0FFB  0823               	movf	___awmod@dividend+1,w
  2971  0FFC  00A1               	movwf	?___awmod+1
  2972  0FFD  0822               	movf	___awmod@dividend,w
  2973  0FFE  00A0               	movwf	?___awmod
  2974  0FFF  0008               	return
  2975  1000                     __end_of___awmod:	
  2976                           
  2977                           	psect	text9
  2978  0777                     __ptext9:	
  2979 ;; *************** function ___awdiv *****************
  2980 ;; Defined at:
  2981 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.05\pic\sources\c90\common\awdiv.c"
  2982 ;; Parameters:    Size  Location     Type
  2983 ;;  divisor         2    0[BANK0 ] int 
  2984 ;;  dividend        2    2[BANK0 ] int 
  2985 ;; Auto vars:     Size  Location     Type
  2986 ;;  quotient        2    6[BANK0 ] int 
  2987 ;;  sign            1    5[BANK0 ] unsigned char 
  2988 ;;  counter         1    4[BANK0 ] unsigned char 
  2989 ;; Return value:  Size  Location     Type
  2990 ;;                  2    0[BANK0 ] int 
  2991 ;; Registers used:
  2992 ;;		wreg, status,2, status,0
  2993 ;; Tracked objects:
  2994 ;;		On entry : 0/0
  2995 ;;		On exit  : 0/0
  2996 ;;		Unchanged: 0/0
  2997 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2998 ;;      Params:         0       4       0       0       0
  2999 ;;      Locals:         0       4       0       0       0
  3000 ;;      Temps:          1       0       0       0       0
  3001 ;;      Totals:         1       8       0       0       0
  3002 ;;Total ram usage:        9 bytes
  3003 ;; Hardware stack levels used:    1
  3004 ;; Hardware stack levels required when called:    3
  3005 ;; This function calls:
  3006 ;;		Nothing
  3007 ;; This function is called by:
  3008 ;;		_decimal_to_bcd
  3009 ;; This function uses a non-reentrant model
  3010 ;;
  3011                           
  3012                           
  3013                           ;psect for function ___awdiv
  3014  0777                     ___awdiv:	
  3015                           
  3016                           ;incstack = 0
  3017                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  3018  0777  1283               	bcf	3,5	;RP0=0, select bank0
  3019  0778  1303               	bcf	3,6	;RP1=0, select bank0
  3020  0779  01A5               	clrf	___awdiv@sign
  3021  077A  1FA1               	btfss	___awdiv@divisor+1,7
  3022  077B  2F83               	goto	l1578
  3023  077C  09A0               	comf	___awdiv@divisor,f
  3024  077D  09A1               	comf	___awdiv@divisor+1,f
  3025  077E  0AA0               	incf	___awdiv@divisor,f
  3026  077F  1903               	skipnz
  3027  0780  0AA1               	incf	___awdiv@divisor+1,f
  3028  0781  01A5               	clrf	___awdiv@sign
  3029  0782  0AA5               	incf	___awdiv@sign,f
  3030  0783                     l1578:	
  3031  0783  1FA3               	btfss	___awdiv@dividend+1,7
  3032  0784  2F8E               	goto	l1584
  3033  0785  09A2               	comf	___awdiv@dividend,f
  3034  0786  09A3               	comf	___awdiv@dividend+1,f
  3035  0787  0AA2               	incf	___awdiv@dividend,f
  3036  0788  1903               	skipnz
  3037  0789  0AA3               	incf	___awdiv@dividend+1,f
  3038  078A  3001               	movlw	1
  3039  078B  00F6               	movwf	??___awdiv
  3040  078C  0876               	movf	??___awdiv,w
  3041  078D  06A5               	xorwf	___awdiv@sign,f
  3042  078E                     l1584:	
  3043  078E  01A6               	clrf	___awdiv@quotient
  3044  078F  01A7               	clrf	___awdiv@quotient+1
  3045  0790  0820               	movf	___awdiv@divisor,w
  3046  0791  0421               	iorwf	___awdiv@divisor+1,w
  3047  0792  1903               	btfsc	3,2
  3048  0793  2FC5               	goto	l1606
  3049  0794  01A4               	clrf	___awdiv@counter
  3050  0795  0AA4               	incf	___awdiv@counter,f
  3051  0796                     l1594:	
  3052  0796  1BA1               	btfsc	___awdiv@divisor+1,7
  3053  0797  2FA4               	goto	l1596
  3054  0798  3001               	movlw	1
  3055  0799                     u1195:	
  3056  0799  1003               	clrc
  3057  079A  0DA0               	rlf	___awdiv@divisor,f
  3058  079B  0DA1               	rlf	___awdiv@divisor+1,f
  3059  079C  3EFF               	addlw	-1
  3060  079D  1D03               	skipz
  3061  079E  2F99               	goto	u1195
  3062  079F  3001               	movlw	1
  3063  07A0  00F6               	movwf	??___awdiv
  3064  07A1  0876               	movf	??___awdiv,w
  3065  07A2  07A4               	addwf	___awdiv@counter,f
  3066  07A3  2F96               	goto	l1594
  3067  07A4                     l1596:	
  3068  07A4  3001               	movlw	1
  3069  07A5                     u1215:	
  3070  07A5  1003               	clrc
  3071  07A6  0DA6               	rlf	___awdiv@quotient,f
  3072  07A7  0DA7               	rlf	___awdiv@quotient+1,f
  3073  07A8  3EFF               	addlw	-1
  3074  07A9  1D03               	skipz
  3075  07AA  2FA5               	goto	u1215
  3076  07AB  0821               	movf	___awdiv@divisor+1,w
  3077  07AC  0223               	subwf	___awdiv@dividend+1,w
  3078  07AD  1D03               	skipz
  3079  07AE  2FB1               	goto	u1225
  3080  07AF  0820               	movf	___awdiv@divisor,w
  3081  07B0  0222               	subwf	___awdiv@dividend,w
  3082  07B1                     u1225:	
  3083  07B1  1C03               	skipc
  3084  07B2  2FBA               	goto	l1602
  3085  07B3  0820               	movf	___awdiv@divisor,w
  3086  07B4  02A2               	subwf	___awdiv@dividend,f
  3087  07B5  0821               	movf	___awdiv@divisor+1,w
  3088  07B6  1C03               	skipc
  3089  07B7  03A3               	decf	___awdiv@dividend+1,f
  3090  07B8  02A3               	subwf	___awdiv@dividend+1,f
  3091  07B9  1426               	bsf	___awdiv@quotient,0
  3092  07BA                     l1602:	
  3093  07BA  3001               	movlw	1
  3094  07BB                     u1235:	
  3095  07BB  1003               	clrc
  3096  07BC  0CA1               	rrf	___awdiv@divisor+1,f
  3097  07BD  0CA0               	rrf	___awdiv@divisor,f
  3098  07BE  3EFF               	addlw	-1
  3099  07BF  1D03               	skipz
  3100  07C0  2FBB               	goto	u1235
  3101  07C1  3001               	movlw	1
  3102  07C2  02A4               	subwf	___awdiv@counter,f
  3103  07C3  1D03               	btfss	3,2
  3104  07C4  2FA4               	goto	l1596
  3105  07C5                     l1606:	
  3106  07C5  0825               	movf	___awdiv@sign,w
  3107  07C6  1903               	btfsc	3,2
  3108  07C7  2FCD               	goto	l1610
  3109  07C8  09A6               	comf	___awdiv@quotient,f
  3110  07C9  09A7               	comf	___awdiv@quotient+1,f
  3111  07CA  0AA6               	incf	___awdiv@quotient,f
  3112  07CB  1903               	skipnz
  3113  07CC  0AA7               	incf	___awdiv@quotient+1,f
  3114  07CD                     l1610:	
  3115  07CD  0827               	movf	___awdiv@quotient+1,w
  3116  07CE  00A1               	movwf	?___awdiv+1
  3117  07CF  0826               	movf	___awdiv@quotient,w
  3118  07D0  00A0               	movwf	?___awdiv
  3119  07D1  0008               	return
  3120  07D2                     __end_of___awdiv:	
  3121                           
  3122                           	psect	text10
  3123  0577                     __ptext10:	
  3124 ;; *************** function _DS1307_read *****************
  3125 ;; Defined at:
  3126 ;;		line 188 in file "D_Clock.c"
  3127 ;; Parameters:    Size  Location     Type
  3128 ;;  slave_addres    1    wreg     unsigned char 
  3129 ;;  register_add    1    5[BANK0 ] unsigned char 
  3130 ;; Auto vars:     Size  Location     Type
  3131 ;;  slave_addres    1    7[BANK0 ] unsigned char 
  3132 ;; Return value:  Size  Location     Type
  3133 ;;                  1    wreg      void 
  3134 ;; Registers used:
  3135 ;;		wreg, status,2, status,0, pclath, cstack
  3136 ;; Tracked objects:
  3137 ;;		On entry : 0/0
  3138 ;;		On exit  : 0/0
  3139 ;;		Unchanged: 0/0
  3140 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3141 ;;      Params:         0       1       0       0       0
  3142 ;;      Locals:         0       1       0       0       0
  3143 ;;      Temps:          0       1       0       0       0
  3144 ;;      Totals:         0       3       0       0       0
  3145 ;;Total ram usage:        3 bytes
  3146 ;; Hardware stack levels used:    1
  3147 ;; Hardware stack levels required when called:    5
  3148 ;; This function calls:
  3149 ;;		_bcd_to_ascii
  3150 ;;		_lcd_command
  3151 ;;		_lcd_data
  3152 ;; This function is called by:
  3153 ;;		_main
  3154 ;; This function uses a non-reentrant model
  3155 ;;
  3156                           
  3157                           
  3158                           ;psect for function _DS1307_read
  3159  0577                     _DS1307_read:	
  3160                           
  3161                           ;incstack = 0
  3162                           ; Regs used in _DS1307_read: [wreg+status,2+status,0+pclath+cstack]
  3163                           ;DS1307_read@slave_address stored from wreg
  3164  0577  1283               	bcf	3,5	;RP0=0, select bank0
  3165  0578  1303               	bcf	3,6	;RP1=0, select bank0
  3166  0579  00A7               	movwf	DS1307_read@slave_address
  3167                           
  3168                           ;D_Clock.c: 191: SSPCON2bits.SEN = 1;
  3169  057A  1683               	bsf	3,5	;RP0=1, select bank1
  3170  057B  1303               	bcf	3,6	;RP1=0, select bank1
  3171  057C  1411               	bsf	17,0	;volatile
  3172  057D                     l144:	
  3173                           ;D_Clock.c: 192: while (SEN);
  3174                           
  3175  057D  1811               	btfsc	17,0	;volatile
  3176  057E  2D7D               	goto	l144
  3177                           
  3178                           ;D_Clock.c: 193: PIR1bits.SSPIF =0 ;
  3179  057F  1283               	bcf	3,5	;RP0=0, select bank0
  3180  0580  1303               	bcf	3,6	;RP1=0, select bank0
  3181  0581  118C               	bcf	12,3	;volatile
  3182                           
  3183                           ;D_Clock.c: 196: SSPBUF = slave_address ;
  3184  0582  0827               	movf	DS1307_read@slave_address,w
  3185  0583  0093               	movwf	19	;volatile
  3186  0584                     l147:	
  3187                           ;D_Clock.c: 197: while (!SSPIF) ;
  3188                           
  3189  0584  1D8C               	btfss	12,3	;volatile
  3190  0585  2D84               	goto	l147
  3191                           
  3192                           ;D_Clock.c: 198: PIR1bits.SSPIF = 0 ;
  3193  0586  118C               	bcf	12,3	;volatile
  3194                           
  3195                           ;D_Clock.c: 199: if (SSPCON2bits.ACKSTAT)
  3196  0587  1683               	bsf	3,5	;RP0=1, select bank1
  3197  0588  1303               	bcf	3,6	;RP1=0, select bank1
  3198  0589  1F11               	btfss	17,6	;volatile
  3199  058A  2D8F               	goto	l1778
  3200                           
  3201                           ;D_Clock.c: 200: {;D_Clock.c: 201: SSPCON2bits.PEN = 1;
  3202  058B  1511               	bsf	17,2	;volatile
  3203  058C                     l151:	
  3204                           ;D_Clock.c: 202: while (PEN);
  3205                           
  3206  058C  1D11               	btfss	17,2	;volatile
  3207  058D  0008               	return
  3208  058E  2D8C               	goto	l151
  3209  058F                     l1778:	
  3210                           
  3211                           ;D_Clock.c: 204: };D_Clock.c: 207: SSPBUF = register_address ;
  3212  058F  1283               	bcf	3,5	;RP0=0, select bank0
  3213  0590  1303               	bcf	3,6	;RP1=0, select bank0
  3214  0591  0825               	movf	DS1307_read@register_address,w
  3215  0592  0093               	movwf	19	;volatile
  3216  0593                     l155:	
  3217                           ;D_Clock.c: 208: while (!SSPIF) ;
  3218                           
  3219  0593  1D8C               	btfss	12,3	;volatile
  3220  0594  2D93               	goto	l155
  3221                           
  3222                           ;D_Clock.c: 209: PIR1bits.SSPIF = 0 ;
  3223  0595  118C               	bcf	12,3	;volatile
  3224                           
  3225                           ;D_Clock.c: 210: if (SSPCON2bits.ACKSTAT)
  3226  0596  1683               	bsf	3,5	;RP0=1, select bank1
  3227  0597  1303               	bcf	3,6	;RP1=0, select bank1
  3228  0598  1F11               	btfss	17,6	;volatile
  3229  0599  2D9E               	goto	l158
  3230                           
  3231                           ;D_Clock.c: 211: {;D_Clock.c: 212: SSPCON2bits.PEN = 1;
  3232  059A  1511               	bsf	17,2	;volatile
  3233  059B                     l159:	
  3234                           ;D_Clock.c: 213: while (PEN);
  3235                           
  3236  059B  1D11               	btfss	17,2	;volatile
  3237  059C  0008               	return
  3238  059D  2D9B               	goto	l159
  3239  059E                     l158:	
  3240                           
  3241                           ;D_Clock.c: 215: };D_Clock.c: 218: SSPCON2bits.RSEN = 1;
  3242  059E  1491               	bsf	17,1	;volatile
  3243  059F                     l162:	
  3244                           ;D_Clock.c: 219: while (RSEN);
  3245                           
  3246  059F  1891               	btfsc	17,1	;volatile
  3247  05A0  2D9F               	goto	l162
  3248                           
  3249                           ;D_Clock.c: 220: PIR1bits.SSPIF =0 ;
  3250  05A1  1283               	bcf	3,5	;RP0=0, select bank0
  3251  05A2  1303               	bcf	3,6	;RP1=0, select bank0
  3252  05A3  118C               	bcf	12,3	;volatile
  3253                           
  3254                           ;D_Clock.c: 223: SSPBUF = (slave_address + 1) ;
  3255  05A4  0827               	movf	DS1307_read@slave_address,w
  3256  05A5  3E01               	addlw	1
  3257  05A6  0093               	movwf	19	;volatile
  3258  05A7                     l165:	
  3259                           ;D_Clock.c: 224: while (!SSPIF) ;
  3260                           
  3261  05A7  1D8C               	btfss	12,3	;volatile
  3262  05A8  2DA7               	goto	l165
  3263                           
  3264                           ;D_Clock.c: 225: PIR1bits.SSPIF = 0 ;
  3265  05A9  118C               	bcf	12,3	;volatile
  3266                           
  3267                           ;D_Clock.c: 226: if (SSPCON2bits.ACKSTAT)
  3268  05AA  1683               	bsf	3,5	;RP0=1, select bank1
  3269  05AB  1303               	bcf	3,6	;RP1=0, select bank1
  3270  05AC  1F11               	btfss	17,6	;volatile
  3271  05AD  2DB2               	goto	l168
  3272                           
  3273                           ;D_Clock.c: 227: {;D_Clock.c: 228: SSPCON2bits.PEN = 1;
  3274  05AE  1511               	bsf	17,2	;volatile
  3275  05AF                     l169:	
  3276                           ;D_Clock.c: 229: while (PEN);
  3277                           
  3278  05AF  1D11               	btfss	17,2	;volatile
  3279  05B0  0008               	return
  3280  05B1  2DAF               	goto	l169
  3281  05B2                     l168:	
  3282                           
  3283                           ;D_Clock.c: 231: };D_Clock.c: 233: SSPCON2bits.RCEN = 1 ;
  3284  05B2  1591               	bsf	17,3	;volatile
  3285  05B3                     l172:	
  3286                           ;D_Clock.c: 234: while (!SSPSTATbits.BF);
  3287                           
  3288  05B3  1C14               	btfss	20,0	;volatile
  3289  05B4  2DB3               	goto	l172
  3290                           
  3291                           ;D_Clock.c: 235: __second = SSPBUF ;
  3292  05B5  1283               	bcf	3,5	;RP0=0, select bank0
  3293  05B6  1303               	bcf	3,6	;RP1=0, select bank0
  3294  05B7  0813               	movf	19,w	;volatile
  3295  05B8  00A6               	movwf	??_DS1307_read
  3296  05B9  0826               	movf	??_DS1307_read,w
  3297  05BA  00D1               	movwf	___second
  3298                           
  3299                           ;D_Clock.c: 237: SSPCON2bits.ACKDT = 0 ;
  3300  05BB  1683               	bsf	3,5	;RP0=1, select bank1
  3301  05BC  1303               	bcf	3,6	;RP1=0, select bank1
  3302  05BD  1291               	bcf	17,5	;volatile
  3303                           
  3304                           ;D_Clock.c: 238: SSPCON2bits.ACKEN = 1 ;
  3305  05BE  1611               	bsf	17,4	;volatile
  3306  05BF                     l175:	
  3307                           ;D_Clock.c: 239: while (ACKEN) ;
  3308                           
  3309  05BF  1A11               	btfsc	17,4	;volatile
  3310  05C0  2DBF               	goto	l175
  3311                           
  3312                           ;D_Clock.c: 241: SSPCON2bits.RCEN = 1 ;
  3313  05C1  1591               	bsf	17,3	;volatile
  3314  05C2                     l178:	
  3315                           ;D_Clock.c: 242: while (!SSPSTATbits.BF);
  3316                           
  3317  05C2  1C14               	btfss	20,0	;volatile
  3318  05C3  2DC2               	goto	l178
  3319                           
  3320                           ;D_Clock.c: 243: __minute = SSPBUF ;
  3321  05C4  1283               	bcf	3,5	;RP0=0, select bank0
  3322  05C5  1303               	bcf	3,6	;RP1=0, select bank0
  3323  05C6  0813               	movf	19,w	;volatile
  3324  05C7  00A6               	movwf	??_DS1307_read
  3325  05C8  0826               	movf	??_DS1307_read,w
  3326  05C9  00D0               	movwf	___minute
  3327                           
  3328                           ;D_Clock.c: 245: SSPCON2bits.ACKDT = 0 ;
  3329  05CA  1683               	bsf	3,5	;RP0=1, select bank1
  3330  05CB  1303               	bcf	3,6	;RP1=0, select bank1
  3331  05CC  1291               	bcf	17,5	;volatile
  3332                           
  3333                           ;D_Clock.c: 246: SSPCON2bits.ACKEN = 1 ;
  3334  05CD  1611               	bsf	17,4	;volatile
  3335  05CE                     l181:	
  3336                           ;D_Clock.c: 247: while (ACKEN) ;
  3337                           
  3338  05CE  1A11               	btfsc	17,4	;volatile
  3339  05CF  2DCE               	goto	l181
  3340                           
  3341                           ;D_Clock.c: 249: SSPCON2bits.RCEN = 1 ;
  3342  05D0  1591               	bsf	17,3	;volatile
  3343  05D1                     l184:	
  3344                           ;D_Clock.c: 250: while (!SSPSTATbits.BF);
  3345                           
  3346  05D1  1C14               	btfss	20,0	;volatile
  3347  05D2  2DD1               	goto	l184
  3348                           
  3349                           ;D_Clock.c: 251: __hour = SSPBUF ;
  3350  05D3  1283               	bcf	3,5	;RP0=0, select bank0
  3351  05D4  1303               	bcf	3,6	;RP1=0, select bank0
  3352  05D5  0813               	movf	19,w	;volatile
  3353  05D6  00A6               	movwf	??_DS1307_read
  3354  05D7  0826               	movf	??_DS1307_read,w
  3355  05D8  00CF               	movwf	___hour
  3356                           
  3357                           ;D_Clock.c: 253: SSPCON2bits.ACKDT = 0 ;
  3358  05D9  1683               	bsf	3,5	;RP0=1, select bank1
  3359  05DA  1303               	bcf	3,6	;RP1=0, select bank1
  3360  05DB  1291               	bcf	17,5	;volatile
  3361                           
  3362                           ;D_Clock.c: 254: SSPCON2bits.ACKEN = 1 ;
  3363  05DC  1611               	bsf	17,4	;volatile
  3364  05DD                     l187:	
  3365                           ;D_Clock.c: 255: while (ACKEN) ;
  3366                           
  3367  05DD  1A11               	btfsc	17,4	;volatile
  3368  05DE  2DDD               	goto	l187
  3369                           
  3370                           ;D_Clock.c: 257: SSPCON2bits.RCEN = 1 ;
  3371  05DF  1591               	bsf	17,3	;volatile
  3372  05E0                     l190:	
  3373                           ;D_Clock.c: 258: while (!SSPSTATbits.BF);
  3374                           
  3375  05E0  1C14               	btfss	20,0	;volatile
  3376  05E1  2DE0               	goto	l190
  3377                           
  3378                           ;D_Clock.c: 259: __day = SSPBUF ;
  3379  05E2  1283               	bcf	3,5	;RP0=0, select bank0
  3380  05E3  1303               	bcf	3,6	;RP1=0, select bank0
  3381  05E4  0813               	movf	19,w	;volatile
  3382  05E5  00A6               	movwf	??_DS1307_read
  3383  05E6  0826               	movf	??_DS1307_read,w
  3384  05E7  00CE               	movwf	___day
  3385                           
  3386                           ;D_Clock.c: 261: SSPCON2bits.ACKDT = 0 ;
  3387  05E8  1683               	bsf	3,5	;RP0=1, select bank1
  3388  05E9  1303               	bcf	3,6	;RP1=0, select bank1
  3389  05EA  1291               	bcf	17,5	;volatile
  3390                           
  3391                           ;D_Clock.c: 262: SSPCON2bits.ACKEN = 1 ;
  3392  05EB  1611               	bsf	17,4	;volatile
  3393  05EC                     l193:	
  3394                           ;D_Clock.c: 263: while (ACKEN) ;
  3395                           
  3396  05EC  1A11               	btfsc	17,4	;volatile
  3397  05ED  2DEC               	goto	l193
  3398                           
  3399                           ;D_Clock.c: 265: SSPCON2bits.RCEN = 1 ;
  3400  05EE  1591               	bsf	17,3	;volatile
  3401  05EF                     l196:	
  3402                           ;D_Clock.c: 266: while (!SSPSTATbits.BF);
  3403                           
  3404  05EF  1C14               	btfss	20,0	;volatile
  3405  05F0  2DEF               	goto	l196
  3406                           
  3407                           ;D_Clock.c: 267: __date = SSPBUF ;
  3408  05F1  1283               	bcf	3,5	;RP0=0, select bank0
  3409  05F2  1303               	bcf	3,6	;RP1=0, select bank0
  3410  05F3  0813               	movf	19,w	;volatile
  3411  05F4  00A6               	movwf	??_DS1307_read
  3412  05F5  0826               	movf	??_DS1307_read,w
  3413  05F6  00CD               	movwf	___date
  3414                           
  3415                           ;D_Clock.c: 269: SSPCON2bits.ACKDT = 0 ;
  3416  05F7  1683               	bsf	3,5	;RP0=1, select bank1
  3417  05F8  1303               	bcf	3,6	;RP1=0, select bank1
  3418  05F9  1291               	bcf	17,5	;volatile
  3419                           
  3420                           ;D_Clock.c: 270: SSPCON2bits.ACKEN = 1 ;
  3421  05FA  1611               	bsf	17,4	;volatile
  3422  05FB                     l199:	
  3423                           ;D_Clock.c: 271: while (ACKEN) ;
  3424                           
  3425  05FB  1A11               	btfsc	17,4	;volatile
  3426  05FC  2DFB               	goto	l199
  3427                           
  3428                           ;D_Clock.c: 273: SSPCON2bits.RCEN = 1 ;
  3429  05FD  1591               	bsf	17,3	;volatile
  3430  05FE                     l202:	
  3431                           ;D_Clock.c: 274: while (!SSPSTATbits.BF);
  3432                           
  3433  05FE  1C14               	btfss	20,0	;volatile
  3434  05FF  2DFE               	goto	l202
  3435                           
  3436                           ;D_Clock.c: 275: __month = SSPBUF ;
  3437  0600  1283               	bcf	3,5	;RP0=0, select bank0
  3438  0601  1303               	bcf	3,6	;RP1=0, select bank0
  3439  0602  0813               	movf	19,w	;volatile
  3440  0603  00A6               	movwf	??_DS1307_read
  3441  0604  0826               	movf	??_DS1307_read,w
  3442  0605  00CC               	movwf	___month
  3443                           
  3444                           ;D_Clock.c: 277: SSPCON2bits.ACKDT = 0 ;
  3445  0606  1683               	bsf	3,5	;RP0=1, select bank1
  3446  0607  1303               	bcf	3,6	;RP1=0, select bank1
  3447  0608  1291               	bcf	17,5	;volatile
  3448                           
  3449                           ;D_Clock.c: 278: SSPCON2bits.ACKEN = 1 ;
  3450  0609  1611               	bsf	17,4	;volatile
  3451  060A                     l205:	
  3452                           ;D_Clock.c: 279: while (ACKEN) ;
  3453                           
  3454  060A  1A11               	btfsc	17,4	;volatile
  3455  060B  2E0A               	goto	l205
  3456                           
  3457                           ;D_Clock.c: 281: SSPCON2bits.RCEN = 1 ;
  3458  060C  1591               	bsf	17,3	;volatile
  3459  060D                     l208:	
  3460                           ;D_Clock.c: 282: while (!SSPSTATbits.BF);
  3461                           
  3462  060D  1C14               	btfss	20,0	;volatile
  3463  060E  2E0D               	goto	l208
  3464                           
  3465                           ;D_Clock.c: 283: __year = SSPBUF ;
  3466  060F  1283               	bcf	3,5	;RP0=0, select bank0
  3467  0610  1303               	bcf	3,6	;RP1=0, select bank0
  3468  0611  0813               	movf	19,w	;volatile
  3469  0612  00A6               	movwf	??_DS1307_read
  3470  0613  0826               	movf	??_DS1307_read,w
  3471  0614  00CB               	movwf	___year
  3472                           
  3473                           ;D_Clock.c: 285: SSPCON2bits.ACKDT = 0 ;
  3474  0615  1683               	bsf	3,5	;RP0=1, select bank1
  3475  0616  1303               	bcf	3,6	;RP1=0, select bank1
  3476  0617  1291               	bcf	17,5	;volatile
  3477                           
  3478                           ;D_Clock.c: 286: SSPCON2bits.ACKEN = 1 ;
  3479  0618  1611               	bsf	17,4	;volatile
  3480  0619                     l211:	
  3481                           ;D_Clock.c: 287: while (ACKEN) ;
  3482                           
  3483  0619  1A11               	btfsc	17,4	;volatile
  3484  061A  2E19               	goto	l211
  3485                           
  3486                           ;D_Clock.c: 289: SSPCON2bits.RCEN = 1 ;
  3487  061B  1591               	bsf	17,3	;volatile
  3488  061C                     l214:	
  3489                           ;D_Clock.c: 290: while (!SSPSTATbits.BF);
  3490                           
  3491  061C  1C14               	btfss	20,0	;volatile
  3492  061D  2E1C               	goto	l214
  3493                           
  3494                           ;D_Clock.c: 291: __con = SSPBUF ;
  3495  061E  1283               	bcf	3,5	;RP0=0, select bank0
  3496  061F  1303               	bcf	3,6	;RP1=0, select bank0
  3497  0620  0813               	movf	19,w	;volatile
  3498  0621  00A6               	movwf	??_DS1307_read
  3499  0622  0826               	movf	??_DS1307_read,w
  3500  0623  00CA               	movwf	___con
  3501                           
  3502                           ;D_Clock.c: 293: SSPCON2bits.ACKDT = 1 ;
  3503  0624  1683               	bsf	3,5	;RP0=1, select bank1
  3504  0625  1303               	bcf	3,6	;RP1=0, select bank1
  3505  0626  1691               	bsf	17,5	;volatile
  3506                           
  3507                           ;D_Clock.c: 294: SSPCON2bits.ACKEN = 1 ;
  3508  0627  1611               	bsf	17,4	;volatile
  3509  0628                     l217:	
  3510                           ;D_Clock.c: 295: while (ACKEN) ;
  3511                           
  3512  0628  1A11               	btfsc	17,4	;volatile
  3513  0629  2E28               	goto	l217
  3514                           
  3515                           ;D_Clock.c: 298: SSPCON2bits.PEN = 1 ;
  3516  062A  1511               	bsf	17,2	;volatile
  3517  062B                     l220:	
  3518                           ;D_Clock.c: 299: while (PEN);
  3519                           
  3520  062B  1911               	btfsc	17,2	;volatile
  3521  062C  2E2B               	goto	l220
  3522                           
  3523                           ;D_Clock.c: 301: lcd_command (0x88) ;
  3524  062D  3088               	movlw	136
  3525  062E  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  3526                           
  3527                           ;D_Clock.c: 302: bcd_to_ascii (__hour) ;
  3528  0633  1283               	bcf	3,5	;RP0=0, select bank0
  3529  0634  1303               	bcf	3,6	;RP1=0, select bank0
  3530  0635  084F               	movf	___hour,w
  3531  0636  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  3532                           
  3533                           ;D_Clock.c: 303: lcd_data (':');
  3534  063B  303A               	movlw	58
  3535  063C  120A  158A  269A  120A  118A  	fcall	_lcd_data
  3536                           
  3537                           ;D_Clock.c: 304: bcd_to_ascii (__minute);
  3538  0641  1283               	bcf	3,5	;RP0=0, select bank0
  3539  0642  1303               	bcf	3,6	;RP1=0, select bank0
  3540  0643  0850               	movf	___minute,w
  3541  0644  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  3542                           
  3543                           ;D_Clock.c: 305: lcd_data (':');
  3544  0649  303A               	movlw	58
  3545  064A  120A  158A  269A  120A  118A  	fcall	_lcd_data
  3546                           
  3547                           ;D_Clock.c: 306: bcd_to_ascii (__second);
  3548  064F  1283               	bcf	3,5	;RP0=0, select bank0
  3549  0650  1303               	bcf	3,6	;RP1=0, select bank0
  3550  0651  0851               	movf	___second,w
  3551  0652  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  3552                           
  3553                           ;D_Clock.c: 308: lcd_command (0xc7) ;
  3554  0657  30C7               	movlw	199
  3555  0658  120A  158A  26AF  120A  118A  	fcall	_lcd_command
  3556                           
  3557                           ;D_Clock.c: 309: bcd_to_ascii (__date) ;
  3558  065D  1283               	bcf	3,5	;RP0=0, select bank0
  3559  065E  1303               	bcf	3,6	;RP1=0, select bank0
  3560  065F  084D               	movf	___date,w
  3561  0660  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  3562                           
  3563                           ;D_Clock.c: 310: lcd_data ('/');
  3564  0665  302F               	movlw	47
  3565  0666  120A  158A  269A  120A  118A  	fcall	_lcd_data
  3566                           
  3567                           ;D_Clock.c: 311: bcd_to_ascii (__month);
  3568  066B  1283               	bcf	3,5	;RP0=0, select bank0
  3569  066C  1303               	bcf	3,6	;RP1=0, select bank0
  3570  066D  084C               	movf	___month,w
  3571  066E  120A  158A  273D  120A  118A  	fcall	_bcd_to_ascii
  3572                           
  3573                           ;D_Clock.c: 312: lcd_data ('/');
  3574  0673  302F               	movlw	47
  3575  0674  120A  158A  269A  120A  118A  	fcall	_lcd_data
  3576                           
  3577                           ;D_Clock.c: 313: bcd_to_ascii (__year);
  3578  0679  1283               	bcf	3,5	;RP0=0, select bank0
  3579  067A  1303               	bcf	3,6	;RP1=0, select bank0
  3580  067B  084B               	movf	___year,w
  3581  067C  120A  158A  273D   	fcall	_bcd_to_ascii
  3582  067F  0008               	return
  3583  0680                     __end_of_DS1307_read:	
  3584                           
  3585                           	psect	text11
  3586  0EAF                     __ptext11:	
  3587 ;; *************** function _lcd_command *****************
  3588 ;; Defined at:
  3589 ;;		line 104 in file "D_Clock.c"
  3590 ;; Parameters:    Size  Location     Type
  3591 ;;  cmd             1    wreg     unsigned char 
  3592 ;; Auto vars:     Size  Location     Type
  3593 ;;  cmd             1    0[BANK0 ] unsigned char 
  3594 ;; Return value:  Size  Location     Type
  3595 ;;                  1    wreg      void 
  3596 ;; Registers used:
  3597 ;;		wreg
  3598 ;; Tracked objects:
  3599 ;;		On entry : 0/0
  3600 ;;		On exit  : 0/0
  3601 ;;		Unchanged: 0/0
  3602 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3603 ;;      Params:         0       0       0       0       0
  3604 ;;      Locals:         0       1       0       0       0
  3605 ;;      Temps:          2       0       0       0       0
  3606 ;;      Totals:         2       1       0       0       0
  3607 ;;Total ram usage:        3 bytes
  3608 ;; Hardware stack levels used:    1
  3609 ;; Hardware stack levels required when called:    3
  3610 ;; This function calls:
  3611 ;;		Nothing
  3612 ;; This function is called by:
  3613 ;;		_main
  3614 ;;		_lcd_init
  3615 ;;		_DS1307_read
  3616 ;;		_set_timing
  3617 ;; This function uses a non-reentrant model
  3618 ;;
  3619                           
  3620                           
  3621                           ;psect for function _lcd_command
  3622  0EAF                     _lcd_command:	
  3623                           
  3624                           ;incstack = 0
  3625                           ; Regs used in _lcd_command: [wreg]
  3626                           ;lcd_command@cmd stored from wreg
  3627  0EAF  1283               	bcf	3,5	;RP0=0, select bank0
  3628  0EB0  1303               	bcf	3,6	;RP1=0, select bank0
  3629  0EB1  00A0               	movwf	lcd_command@cmd
  3630                           
  3631                           ;D_Clock.c: 105: PORTD = cmd;
  3632  0EB2  0820               	movf	lcd_command@cmd,w
  3633  0EB3  0088               	movwf	8	;volatile
  3634                           
  3635                           ;D_Clock.c: 106: PORTBbits.RB1 = 0;
  3636  0EB4  1086               	bcf	6,1	;volatile
  3637                           
  3638                           ;D_Clock.c: 107: PORTBbits.RB2 = 0;
  3639  0EB5  1106               	bcf	6,2	;volatile
  3640                           
  3641                           ;D_Clock.c: 108: PORTBbits.RB3 =1;
  3642  0EB6  1586               	bsf	6,3	;volatile
  3643                           
  3644                           ;D_Clock.c: 109: _delay((unsigned long)((5)*(20000000/4000.0)));
  3645  0EB7  3021               	movlw	33
  3646  0EB8  00F7               	movwf	??_lcd_command+1
  3647  0EB9  3076               	movlw	118
  3648  0EBA  00F6               	movwf	??_lcd_command
  3649  0EBB                     u2467:	
  3650  0EBB  0BF6               	decfsz	??_lcd_command,f
  3651  0EBC  2EBB               	goto	u2467
  3652  0EBD  0BF7               	decfsz	??_lcd_command+1,f
  3653  0EBE  2EBB               	goto	u2467
  3654  0EBF  0000               	nop
  3655                           
  3656                           ;D_Clock.c: 110: PORTBbits.RB3 =0 ;
  3657  0EC0  1283               	bcf	3,5	;RP0=0, select bank0
  3658  0EC1  1303               	bcf	3,6	;RP1=0, select bank0
  3659  0EC2  1186               	bcf	6,3	;volatile
  3660  0EC3  0008               	return
  3661  0EC4                     __end_of_lcd_command:	
  3662                           
  3663                           	psect	text12
  3664  0F3D                     __ptext12:	
  3665 ;; *************** function _bcd_to_ascii *****************
  3666 ;; Defined at:
  3667 ;;		line 316 in file "D_Clock.c"
  3668 ;; Parameters:    Size  Location     Type
  3669 ;;  value           1    wreg     unsigned char 
  3670 ;; Auto vars:     Size  Location     Type
  3671 ;;  value           1    3[BANK0 ] unsigned char 
  3672 ;;  bcd             1    4[BANK0 ] unsigned char 
  3673 ;; Return value:  Size  Location     Type
  3674 ;;                  1    wreg      void 
  3675 ;; Registers used:
  3676 ;;		wreg, status,2, status,0, pclath, cstack
  3677 ;; Tracked objects:
  3678 ;;		On entry : 0/0
  3679 ;;		On exit  : 0/0
  3680 ;;		Unchanged: 0/0
  3681 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3682 ;;      Params:         0       0       0       0       0
  3683 ;;      Locals:         0       2       0       0       0
  3684 ;;      Temps:          0       2       0       0       0
  3685 ;;      Totals:         0       4       0       0       0
  3686 ;;Total ram usage:        4 bytes
  3687 ;; Hardware stack levels used:    1
  3688 ;; Hardware stack levels required when called:    4
  3689 ;; This function calls:
  3690 ;;		_lcd_data
  3691 ;; This function is called by:
  3692 ;;		_DS1307_read
  3693 ;;		_set_timing
  3694 ;; This function uses a non-reentrant model
  3695 ;;
  3696                           
  3697                           
  3698                           ;psect for function _bcd_to_ascii
  3699  0F3D                     _bcd_to_ascii:	
  3700                           
  3701                           ;incstack = 0
  3702                           ; Regs used in _bcd_to_ascii: [wreg+status,2+status,0+pclath+cstack]
  3703                           ;bcd_to_ascii@value stored from wreg
  3704  0F3D  1283               	bcf	3,5	;RP0=0, select bank0
  3705  0F3E  1303               	bcf	3,6	;RP1=0, select bank0
  3706  0F3F  00A3               	movwf	bcd_to_ascii@value
  3707                           
  3708                           ;D_Clock.c: 318: unsigned char bcd ;;D_Clock.c: 319: bcd = value ;
  3709  0F40  0823               	movf	bcd_to_ascii@value,w
  3710  0F41  00A1               	movwf	??_bcd_to_ascii
  3711  0F42  0821               	movf	??_bcd_to_ascii,w
  3712  0F43  00A4               	movwf	bcd_to_ascii@bcd
  3713                           
  3714                           ;D_Clock.c: 320: bcd = bcd & 0xf0 ;
  3715  0F44  0824               	movf	bcd_to_ascii@bcd,w
  3716  0F45  39F0               	andlw	240
  3717  0F46  00A1               	movwf	??_bcd_to_ascii
  3718  0F47  0821               	movf	??_bcd_to_ascii,w
  3719  0F48  00A4               	movwf	bcd_to_ascii@bcd
  3720                           
  3721                           ;D_Clock.c: 321: bcd = bcd >> 4 ;
  3722  0F49  0824               	movf	bcd_to_ascii@bcd,w
  3723  0F4A  00A1               	movwf	??_bcd_to_ascii
  3724  0F4B  3004               	movlw	4
  3725  0F4C                     u1555:	
  3726  0F4C  1003               	clrc
  3727  0F4D  0CA1               	rrf	??_bcd_to_ascii,f
  3728  0F4E  3EFF               	addlw	-1
  3729  0F4F  1D03               	skipz
  3730  0F50  2F4C               	goto	u1555
  3731  0F51  0821               	movf	??_bcd_to_ascii,w
  3732  0F52  00A2               	movwf	??_bcd_to_ascii+1
  3733  0F53  0822               	movf	??_bcd_to_ascii+1,w
  3734  0F54  00A4               	movwf	bcd_to_ascii@bcd
  3735                           
  3736                           ;D_Clock.c: 322: bcd = bcd | 0x30 ;
  3737  0F55  0824               	movf	bcd_to_ascii@bcd,w
  3738  0F56  3830               	iorlw	48
  3739  0F57  00A1               	movwf	??_bcd_to_ascii
  3740  0F58  0821               	movf	??_bcd_to_ascii,w
  3741  0F59  00A4               	movwf	bcd_to_ascii@bcd
  3742                           
  3743                           ;D_Clock.c: 323: lcd_data (bcd) ;
  3744  0F5A  0824               	movf	bcd_to_ascii@bcd,w
  3745  0F5B  120A  158A  269A  120A  158A  	fcall	_lcd_data
  3746                           
  3747                           ;D_Clock.c: 325: bcd = value ;
  3748  0F60  1283               	bcf	3,5	;RP0=0, select bank0
  3749  0F61  1303               	bcf	3,6	;RP1=0, select bank0
  3750  0F62  0823               	movf	bcd_to_ascii@value,w
  3751  0F63  00A1               	movwf	??_bcd_to_ascii
  3752  0F64  0821               	movf	??_bcd_to_ascii,w
  3753  0F65  00A4               	movwf	bcd_to_ascii@bcd
  3754                           
  3755                           ;D_Clock.c: 326: bcd = bcd & 0x0f ;
  3756  0F66  0824               	movf	bcd_to_ascii@bcd,w
  3757  0F67  390F               	andlw	15
  3758  0F68  00A1               	movwf	??_bcd_to_ascii
  3759  0F69  0821               	movf	??_bcd_to_ascii,w
  3760  0F6A  00A4               	movwf	bcd_to_ascii@bcd
  3761                           
  3762                           ;D_Clock.c: 327: bcd = bcd | 0x30 ;
  3763  0F6B  0824               	movf	bcd_to_ascii@bcd,w
  3764  0F6C  3830               	iorlw	48
  3765  0F6D  00A1               	movwf	??_bcd_to_ascii
  3766  0F6E  0821               	movf	??_bcd_to_ascii,w
  3767  0F6F  00A4               	movwf	bcd_to_ascii@bcd
  3768                           
  3769                           ;D_Clock.c: 328: lcd_data (bcd) ;
  3770  0F70  0824               	movf	bcd_to_ascii@bcd,w
  3771  0F71  120A  158A  269A   	fcall	_lcd_data
  3772  0F74  0008               	return
  3773  0F75                     __end_of_bcd_to_ascii:	
  3774                           
  3775                           	psect	text13
  3776  0E9A                     __ptext13:	
  3777 ;; *************** function _lcd_data *****************
  3778 ;; Defined at:
  3779 ;;		line 95 in file "D_Clock.c"
  3780 ;; Parameters:    Size  Location     Type
  3781 ;;  data            1    wreg     unsigned char 
  3782 ;; Auto vars:     Size  Location     Type
  3783 ;;  data            1    0[BANK0 ] unsigned char 
  3784 ;; Return value:  Size  Location     Type
  3785 ;;                  1    wreg      void 
  3786 ;; Registers used:
  3787 ;;		wreg
  3788 ;; Tracked objects:
  3789 ;;		On entry : 0/0
  3790 ;;		On exit  : 0/0
  3791 ;;		Unchanged: 0/0
  3792 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3793 ;;      Params:         0       0       0       0       0
  3794 ;;      Locals:         0       1       0       0       0
  3795 ;;      Temps:          2       0       0       0       0
  3796 ;;      Totals:         2       1       0       0       0
  3797 ;;Total ram usage:        3 bytes
  3798 ;; Hardware stack levels used:    1
  3799 ;; Hardware stack levels required when called:    3
  3800 ;; This function calls:
  3801 ;;		Nothing
  3802 ;; This function is called by:
  3803 ;;		_lcd_string
  3804 ;;		_DS1307_read
  3805 ;;		_bcd_to_ascii
  3806 ;; This function uses a non-reentrant model
  3807 ;;
  3808                           
  3809                           
  3810                           ;psect for function _lcd_data
  3811  0E9A                     _lcd_data:	
  3812                           
  3813                           ;incstack = 0
  3814                           ; Regs used in _lcd_data: [wreg]
  3815                           ;lcd_data@data stored from wreg
  3816  0E9A  1283               	bcf	3,5	;RP0=0, select bank0
  3817  0E9B  1303               	bcf	3,6	;RP1=0, select bank0
  3818  0E9C  00A0               	movwf	lcd_data@data
  3819                           
  3820                           ;D_Clock.c: 96: PORTD = data;
  3821  0E9D  0820               	movf	lcd_data@data,w
  3822  0E9E  0088               	movwf	8	;volatile
  3823                           
  3824                           ;D_Clock.c: 97: PORTBbits.RB1 = 1;
  3825  0E9F  1486               	bsf	6,1	;volatile
  3826                           
  3827                           ;D_Clock.c: 98: PORTBbits.RB2 = 0;
  3828  0EA0  1106               	bcf	6,2	;volatile
  3829                           
  3830                           ;D_Clock.c: 99: PORTBbits.RB3 =1;
  3831  0EA1  1586               	bsf	6,3	;volatile
  3832                           
  3833                           ;D_Clock.c: 100: _delay((unsigned long)((5)*(20000000/4000.0)));
  3834  0EA2  3021               	movlw	33
  3835  0EA3  00F7               	movwf	??_lcd_data+1
  3836  0EA4  3076               	movlw	118
  3837  0EA5  00F6               	movwf	??_lcd_data
  3838  0EA6                     u2477:	
  3839  0EA6  0BF6               	decfsz	??_lcd_data,f
  3840  0EA7  2EA6               	goto	u2477
  3841  0EA8  0BF7               	decfsz	??_lcd_data+1,f
  3842  0EA9  2EA6               	goto	u2477
  3843  0EAA  0000               	nop
  3844                           
  3845                           ;D_Clock.c: 101: PORTBbits.RB3 =0 ;
  3846  0EAB  1283               	bcf	3,5	;RP0=0, select bank0
  3847  0EAC  1303               	bcf	3,6	;RP1=0, select bank0
  3848  0EAD  1186               	bcf	6,3	;volatile
  3849  0EAE  0008               	return
  3850  0EAF                     __end_of_lcd_data:	
  3851                           
  3852                           	psect	text14
  3853  0EF2                     __ptext14:	
  3854 ;; *************** function _external *****************
  3855 ;; Defined at:
  3856 ;;		line 654 in file "D_Clock.c"
  3857 ;; Parameters:    Size  Location     Type
  3858 ;;		None
  3859 ;; Auto vars:     Size  Location     Type
  3860 ;;		None
  3861 ;; Return value:  Size  Location     Type
  3862 ;;                  1    wreg      void 
  3863 ;; Registers used:
  3864 ;;		wreg, status,2, status,0, pclath, cstack
  3865 ;; Tracked objects:
  3866 ;;		On entry : 0/0
  3867 ;;		On exit  : 0/0
  3868 ;;		Unchanged: 0/0
  3869 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3870 ;;      Params:         0       0       0       0       0
  3871 ;;      Locals:         0       0       0       0       0
  3872 ;;      Temps:          3       0       0       0       0
  3873 ;;      Totals:         3       0       0       0       0
  3874 ;;Total ram usage:        3 bytes
  3875 ;; Hardware stack levels used:    1
  3876 ;; Hardware stack levels required when called:    2
  3877 ;; This function calls:
  3878 ;;		i1_lcd_init
  3879 ;; This function is called by:
  3880 ;;		Interrupt level 1
  3881 ;; This function uses a non-reentrant model
  3882 ;;
  3883                           
  3884                           
  3885                           ;psect for function _external
  3886  0EF2                     _external:	
  3887                           
  3888                           ;D_Clock.c: 657: if (INTCONbits.INTF == 1) {
  3889  0EF2  1C8B               	btfss	11,1	;volatile
  3890  0EF3  2F07               	goto	i1l310
  3891                           
  3892                           ;D_Clock.c: 658: INTCONbits.INTF = 0;
  3893  0EF4  108B               	bcf	11,1	;volatile
  3894                           
  3895                           ;D_Clock.c: 659: lcd_init();
  3896  0EF5  120A  158A  26C4  120A  158A  	fcall	i1_lcd_init
  3897                           
  3898                           ;D_Clock.c: 660: timing_flag = 1 + timing_flag ;
  3899  0EFA  1283               	bcf	3,5	;RP0=0, select bank0
  3900  0EFB  1303               	bcf	3,6	;RP1=0, select bank0
  3901  0EFC  0849               	movf	_timing_flag,w
  3902  0EFD  3E01               	addlw	1
  3903  0EFE  00F3               	movwf	??_external
  3904  0EFF  0873               	movf	??_external,w
  3905  0F00  00C9               	movwf	_timing_flag
  3906                           
  3907                           ;D_Clock.c: 661: if (timing_flag == 7 ) {
  3908  0F01  3007               	movlw	7
  3909  0F02  0649               	xorwf	_timing_flag,w
  3910  0F03  1D03               	btfss	3,2
  3911  0F04  2F07               	goto	i1l310
  3912                           
  3913                           ;D_Clock.c: 662: timing_flag = 1;
  3914  0F05  01C9               	clrf	_timing_flag
  3915  0F06  0AC9               	incf	_timing_flag,f
  3916  0F07                     i1l310:	
  3917  0F07  0875               	movf	??_external+2,w
  3918  0F08  008A               	movwf	10
  3919  0F09  0E74               	swapf	(??_external+1)^(0+4294967168),w
  3920  0F0A  0083               	movwf	3
  3921  0F0B  0EFE               	swapf	126,f
  3922  0F0C  0E7E               	swapf	126,w
  3923  0F0D  0009               	retfie
  3924  0F0E                     __end_of_external:	
  3925                           
  3926                           	psect	intentry
  3927  0004                     __pintentry:	
  3928                           ;incstack = 0
  3929                           ; Regs used in _external: [wreg+status,2+status,0+pclath+cstack]
  3930                           
  3931  0004                     interrupt_function:	
  3932  007E                     saved_w	set	btemp
  3933  0004  00FE               	movwf	btemp
  3934  0005  0E03               	swapf	3,w
  3935  0006  00F4               	movwf	??_external+1
  3936  0007  080A               	movf	10,w
  3937  0008  00F5               	movwf	??_external+2
  3938  0009  120A  158A  2EF2   	ljmp	_external
  3939                           
  3940                           	psect	text15
  3941  0EC4                     __ptext15:	
  3942 ;; *************** function i1_lcd_init *****************
  3943 ;; Defined at:
  3944 ;;		line 88 in file "D_Clock.c"
  3945 ;; Parameters:    Size  Location     Type
  3946 ;;		None
  3947 ;; Auto vars:     Size  Location     Type
  3948 ;;		None
  3949 ;; Return value:  Size  Location     Type
  3950 ;;                  1    wreg      void 
  3951 ;; Registers used:
  3952 ;;		wreg, status,2, status,0, pclath, cstack
  3953 ;; Tracked objects:
  3954 ;;		On entry : 0/0
  3955 ;;		On exit  : 0/0
  3956 ;;		Unchanged: 0/0
  3957 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3958 ;;      Params:         0       0       0       0       0
  3959 ;;      Locals:         0       0       0       0       0
  3960 ;;      Temps:          0       0       0       0       0
  3961 ;;      Totals:         0       0       0       0       0
  3962 ;;Total ram usage:        0 bytes
  3963 ;; Hardware stack levels used:    1
  3964 ;; Hardware stack levels required when called:    1
  3965 ;; This function calls:
  3966 ;;		i1_lcd_command
  3967 ;; This function is called by:
  3968 ;;		_external
  3969 ;; This function uses a non-reentrant model
  3970 ;;
  3971                           
  3972                           
  3973                           ;psect for function i1_lcd_init
  3974  0EC4                     i1_lcd_init:	
  3975                           
  3976                           ;D_Clock.c: 89: lcd_command (0x38);
  3977                           
  3978                           ;incstack = 0
  3979                           ; Regs used in i1_lcd_init: [wreg+status,2+status,0+pclath+cstack]
  3980  0EC4  3038               	movlw	56
  3981  0EC5  120A  158A  2685  120A  158A  	fcall	i1_lcd_command
  3982                           
  3983                           ;D_Clock.c: 90: lcd_command (0x06);
  3984  0ECA  3006               	movlw	6
  3985  0ECB  120A  158A  2685  120A  158A  	fcall	i1_lcd_command
  3986                           
  3987                           ;D_Clock.c: 91: lcd_command (0x0c);
  3988  0ED0  300C               	movlw	12
  3989  0ED1  120A  158A  2685  120A  158A  	fcall	i1_lcd_command
  3990                           
  3991                           ;D_Clock.c: 92: lcd_command (0x01);
  3992  0ED6  3001               	movlw	1
  3993  0ED7  120A  158A  2685   	fcall	i1_lcd_command
  3994  0EDA  0008               	return
  3995  0EDB                     __end_ofi1_lcd_init:	
  3996                           
  3997                           	psect	text16
  3998  0E85                     __ptext16:	
  3999 ;; *************** function i1_lcd_command *****************
  4000 ;; Defined at:
  4001 ;;		line 104 in file "D_Clock.c"
  4002 ;; Parameters:    Size  Location     Type
  4003 ;;  cmd             1    wreg     unsigned char 
  4004 ;; Auto vars:     Size  Location     Type
  4005 ;;  cmd             1    2[COMMON] unsigned char 
  4006 ;; Return value:  Size  Location     Type
  4007 ;;                  1    wreg      void 
  4008 ;; Registers used:
  4009 ;;		wreg
  4010 ;; Tracked objects:
  4011 ;;		On entry : 0/0
  4012 ;;		On exit  : 0/0
  4013 ;;		Unchanged: 0/0
  4014 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4015 ;;      Params:         0       0       0       0       0
  4016 ;;      Locals:         1       0       0       0       0
  4017 ;;      Temps:          2       0       0       0       0
  4018 ;;      Totals:         3       0       0       0       0
  4019 ;;Total ram usage:        3 bytes
  4020 ;; Hardware stack levels used:    1
  4021 ;; This function calls:
  4022 ;;		Nothing
  4023 ;; This function is called by:
  4024 ;;		i1_lcd_init
  4025 ;; This function uses a non-reentrant model
  4026 ;;
  4027                           
  4028                           
  4029                           ;psect for function i1_lcd_command
  4030  0E85                     i1_lcd_command:	
  4031                           
  4032                           ;incstack = 0
  4033                           ; Regs used in i1_lcd_command: [wreg]
  4034                           ;i1lcd_command@cmd stored from wreg
  4035  0E85  00F2               	movwf	i1lcd_command@cmd
  4036                           
  4037                           ;D_Clock.c: 105: PORTD = cmd;
  4038  0E86  0872               	movf	i1lcd_command@cmd,w
  4039  0E87  1283               	bcf	3,5	;RP0=0, select bank0
  4040  0E88  1303               	bcf	3,6	;RP1=0, select bank0
  4041  0E89  0088               	movwf	8	;volatile
  4042                           
  4043                           ;D_Clock.c: 106: PORTBbits.RB1 = 0;
  4044  0E8A  1086               	bcf	6,1	;volatile
  4045                           
  4046                           ;D_Clock.c: 107: PORTBbits.RB2 = 0;
  4047  0E8B  1106               	bcf	6,2	;volatile
  4048                           
  4049                           ;D_Clock.c: 108: PORTBbits.RB3 =1;
  4050  0E8C  1586               	bsf	6,3	;volatile
  4051                           
  4052                           ;D_Clock.c: 109: _delay((unsigned long)((5)*(20000000/4000.0)));
  4053  0E8D  3021               	movlw	33
  4054  0E8E  00F1               	movwf	??i1_lcd_command+1
  4055  0E8F  3076               	movlw	118
  4056  0E90  00F0               	movwf	??i1_lcd_command
  4057  0E91                     u248_27:	
  4058  0E91  0BF0               	decfsz	??i1_lcd_command,f
  4059  0E92  2E91               	goto	u248_27
  4060  0E93  0BF1               	decfsz	??i1_lcd_command+1,f
  4061  0E94  2E91               	goto	u248_27
  4062  0E95  0000               	nop
  4063                           
  4064                           ;D_Clock.c: 110: PORTBbits.RB3 =0 ;
  4065  0E96  1283               	bcf	3,5	;RP0=0, select bank0
  4066  0E97  1303               	bcf	3,6	;RP1=0, select bank0
  4067  0E98  1186               	bcf	6,3	;volatile
  4068  0E99  0008               	return
  4069  0E9A                     __end_ofi1_lcd_command:	
  4070  007E                     btemp	set	126	;btemp
  4071  007E                     wtemp0	set	126


Data Sizes:
    Strings     43
    Constant    0
    Data        0
    BSS         9
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80     41      50
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    lcd_string@str	PTR const unsigned char  size(1) Largest target is 7
		 -> STR_22(CODE[6]), STR_21(CODE[7]), STR_20(CODE[6]), STR_19(CODE[6]), 
		 -> STR_18(CODE[6]), STR_17(CODE[6]), STR_16(CODE[6]), STR_15(CODE[6]), 
		 -> STR_14(CODE[6]), STR_13(CODE[6]), STR_12(CODE[6]), STR_11(CODE[6]), 
		 -> STR_10(CODE[6]), STR_9(CODE[6]), STR_8(CODE[6]), STR_7(CODE[6]), 
		 -> STR_6(CODE[6]), STR_5(CODE[6]), STR_4(CODE[6]), STR_3(CODE[6]), 
		 -> STR_2(CODE[6]), STR_1(CODE[7]), 


Critical Paths under _main in COMMON

    _main->_lcd_command
    _set_timing->_DS1307_write
    _set_timing->_lcd_command
    _lcd_string->_lcd_data
    _lcd_init->_lcd_command
    _bcd_to_decimal->___bmul
    _decimal_to_bcd->___awdiv
    _decimal_to_bcd->___awmod
    _DS1307_read->_lcd_command
    _DS1307_read->_lcd_data
    _bcd_to_ascii->_lcd_data

Critical Paths under _external in COMMON

    i1_lcd_init->i1_lcd_command

Critical Paths under _main in BANK0

    _main->_set_timing
    _set_timing->_DS1307_write
    _lcd_string->_lcd_data
    _lcd_init->_lcd_command
    _bcd_to_decimal->___bmul
    _DS1307_write->_decimal_to_bcd
    _decimal_to_bcd->___awdiv
    _DS1307_read->_bcd_to_ascii
    _bcd_to_ascii->_lcd_data

Critical Paths under _external in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _external in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _external in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _external in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    9815
                                             38 BANK0      3     3      0
                        _DS1307_read
                        _lcd_command
                           _lcd_init
                         _lcd_string
                         _set_timing
 ---------------------------------------------------------------------------------
 (1) _set_timing                                          17    17      0    6848
                                             21 BANK0     17    17      0
                       _DS1307_write
                       _bcd_to_ascii
                     _bcd_to_decimal
                     _decimal_to_bcd
                        _lcd_command
                           _lcd_init
                         _lcd_string
 ---------------------------------------------------------------------------------
 (2) _lcd_string                                           4     3      1    2510
                                              1 BANK0      4     3      1
                           _lcd_data
 ---------------------------------------------------------------------------------
 (2) _lcd_init                                             0     0      0      22
                        _lcd_command
 ---------------------------------------------------------------------------------
 (2) _bcd_to_decimal                                       4     4      0     327
                                              2 BANK0      4     4      0
                             ___bmul
 ---------------------------------------------------------------------------------
 (3) ___bmul                                               4     3      1     168
                                              6 COMMON     2     1      1
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 (2) _DS1307_write                                         7     1      6    1623
                                              7 COMMON     1     1      0
                                             15 BANK0      6     0      6
                     _decimal_to_bcd
 ---------------------------------------------------------------------------------
 (2) _decimal_to_bcd                                       7     7      0    1013
                                              8 BANK0      7     7      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (3) ___awmod                                              7     3      4     448
                                              6 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (3) ___awdiv                                              9     5      4     452
                                              6 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 (1) _DS1307_read                                          3     2      1     413
                                              5 BANK0      3     2      1
                       _bcd_to_ascii
                        _lcd_command
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_command                                          3     3      0      22
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _bcd_to_ascii                                         4     4      0     227
                                              1 BANK0      4     4      0
                           _lcd_data
 ---------------------------------------------------------------------------------
 (3) _lcd_data                                             3     3      0      22
                                              6 COMMON     2     2      0
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _external                                             3     3      0      22
                                              3 COMMON     3     3      0
                         i1_lcd_init
 ---------------------------------------------------------------------------------
 (6) i1_lcd_init                                           0     0      0      22
                      i1_lcd_command
 ---------------------------------------------------------------------------------
 (7) i1_lcd_command                                        3     3      0      22
                                              0 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 7
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _DS1307_read
     _bcd_to_ascii
       _lcd_data
     _lcd_command
     _lcd_data
   _lcd_command
   _lcd_init
     _lcd_command
   _lcd_string
     _lcd_data
   _set_timing
     _DS1307_write
       _decimal_to_bcd
         ___awdiv
         ___awmod
     _bcd_to_ascii
       _lcd_data
     _bcd_to_decimal
       ___bmul
     _decimal_to_bcd
       ___awdiv
       ___awmod
     _lcd_command
     _lcd_init
       _lcd_command
     _lcd_string
       _lcd_data

 _external (ROOT)
   i1_lcd_init
     i1_lcd_command

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      3A       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50     29      32       5       62.5%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      3A      12        0.0%


Microchip Technology PIC Macro Assembler V2.05 build -831301201 
Symbol Table                                                                                   Tue Oct 24 09:21:08 2023

                           pc 0002                  lcd_data@data 0020                ___bmul@product 0020  
                 __CFG_CP$OFF 0000                   _SSPSTATbits 0094                            l97 0684  
                ___awdiv@sign 0025                            fsr 0004        set_timing@bcd_val_date 003D  
      set_timing@bcd_val_hour 003C        set_timing@bcd_val_year 003F                _decimal_to_bcd 0F75  
                 __CFG_LVP$ON 0000                           l100 068B                           l112 06A1  
                         l104 0693                           l121 06C5                           l202 05FE  
                         l130 06E9                           l211 0619                           l115 06AD  
                         l220 062B                           l124 06D1                           l108 0699  
                         l205 060A                           l133 06F5                           l301 04E0  
                         l214 061C                           l118 06B9                           l151 058C  
                         l127 06DD                           l208 060D                           l144 057D  
                         l136 06F9                           l217 0628                           l162 059F  
                         l155 0593                           l147 0584                           l139 06FF  
                         l243 00FC                           l172 05B3                           l260 023A  
                         l181 05CE                           l165 05A7                           l190 05E0  
                         l158 059E                           l254 01C1                           l246 0107  
                         l238 00B0                           l175 05BF                           l159 059B  
                         l271 02FF                           l184 05D1                           l168 05B2  
                         l193 05EC                           l169 05AF                           l265 0286  
                         l257 01CC                           l249 0175                           l178 05C2  
                         l290 041B                           l282 03C4                           l187 05DD  
                         l196 05EF                           l276 034B                           l268 0291  
                         l293 0489                           l199 05FB                           l287 0410  
                         l279 0356                           l298 04D5                           _PEN 048A  
                __CFG_CPD$OFF 0000                           _SEN 0488                           fsr0 0004  
                ___awmod@sign 0025       set_timing@bcd_val_month 003E                    i1_lcd_init 0EC4  
                _DS1307_write 0680                          l2010 02CF                          l2114 0459  
                        l2042 0347                          l2062 0394                          l1610 07CD  
                        l1602 07BA                          l2146 04D1                          l2218 0759  
                        l2164 007A                          l1606 07C5                          l1622 0FBF  
                        l1710 0696                          l1702 07D6                          l2094 040C  
                        l2166 007F                          l1640 0FE8                          l2168 051A  
                        l1634 0FCC                          l1626 0FC6                          l1714 06A4  
                        l1636 0FDA                          l1644 0FF3                          l1584 078E  
                        l1648 0FFB                          l1594 0796                          l1578 0783  
                        l1682 0E76                          l1906 0145                          l1596 07A4  
                        l1686 0E7C                          l1778 058F                          l1938 01BD  
                        l1990 0282                          l1958 020A                          l1886 00F8  
                        STR_1 0806                          STR_2 0825                          STR_3 080D  
                        STR_4 080D                          STR_5 080D                          STR_6 0813  
                        STR_7 0813                          STR_8 0813                          STR_9 082B  
                        u1215 07A5                          u1225 07B1                          u1235 07BB  
                        u1315 0FE0                          u1325 0FE9                          u1195 0799  
                        u1355 0FA7                          u2317 0753                          u1295 0FCF  
                        u2407 035E                          u2327 075F                          u2417 03D6  
                        u2337 00C2                          u1555 0F4C                          u2427 0423  
                        u2347 010F                          u1565 0F1D                          u2437 049B  
                        u2357 0187                          u2447 04E8                          u2367 01D4  
                        u2457 0554                          u2377 024C                          u2467 0EBB  
                        u2387 0299                          u2477 0EA6                          u2397 0311  
                        _RSEN 0489                  __CFG_WRT$OFF 0000                          _main 0705  
                        btemp 007E                          start 000C                   lcd_string@i 0023  
    set_timing@bcd_val_minute 003B      set_timing@bcd_val_second 003A             ___bmul@multiplier 0021  
      __end_of_decimal_to_bcd 0FB3                         ?_main 0070                         _ACKEN 048C  
             __end_of___awdiv 07D2                         STR_10 080D                         STR_11 080D  
                       STR_20 081F                         STR_12 0825                         STR_13 0825  
                       STR_21 0806                         STR_22 0825                         STR_14 0825  
                       STR_15 0819                         STR_16 080D                         STR_17 080D  
               __CFG_WDTE$OFF 0000                         STR_18 081F                         STR_19 081F  
             __end_of___awmod 1000               ___awdiv@divisor 0020                         i1l310 0F07  
             ___awdiv@counter 0024         __size_of_bcd_to_ascii 0038                         _PORTD 0008  
                       _TRISC 0087                         _TRISD 0088                         _SSPIF 0063  
                       ___day 004E                         ___con 004A                __CFG_BOREN$OFF 0000  
                       pclath 000A                         status 0003                         wtemp0 007E  
             __initialization 000F                  __end_of_main 0777                  _bcd_to_ascii 0F3D  
             ?_decimal_to_bcd 0070                        ??_main 0046                lcd_command@cmd 0020  
      __size_ofi1_lcd_command 0015                   ?i1_lcd_init 0070              ___awdiv@dividend 0022  
set_timing@decimal_val_minute 0041  set_timing@decimal_val_second 0040                        u248_27 0E91  
                      _SSPADD 0093                        _SSPCON 0014                        _SSPBUF 0013  
              __CFG_PWRTE$OFF 0000              __end_of_lcd_data 0EAF              __end_of_lcd_init 0EF2  
        __size_of_lcd_command 0015                        ___date 004D                        ___bmul 0E72  
                      ___hour 004F                        ___year 004B                     ??___awdiv 0076  
                   ??___awmod 0076              ___awdiv@quotient 0026               ___awmod@divisor 0020  
             ___awmod@counter 0024              __end_of_external 0F0E                        saved_w 007E  
               lcd_string@num 0021               __CFG_FOSC$EXTRC 0000                 lcd_string@str 0024  
     __end_of__initialization 001A                 i1_lcd_command 0E85           ___bmul@multiplicand 0076  
              __pcstackCOMMON 0070           __size_ofi1_lcd_init 0017                _OPTION_REGbits 0081  
                  __pbssBANK0 0049                 ??_DS1307_read 0026                ?i1_lcd_command 0070  
                  __pmaintext 0705                       ?___bmul 0076             bcd_to_decimal@dec 0025  
                  __pintentry 0004               bcd_to_ascii@bcd 0024           bcd_to_decimal@value 0024  
     __size_of_bcd_to_decimal 002F                     ?_lcd_data 0070                    _lcd_string 07D2  
                   ?_lcd_init 0070                    __stringtab 0800             bcd_to_ascii@value 0023  
                   ?_external 0070              ??_decimal_to_bcd 0028           __end_of_DS1307_read 0680  
    DS1307_read@slave_address 0027               __size_of___bmul 0013                       ___awdiv 0777  
                     ___awmod 0FB3                       ___month 004C                       __ptext1 001E  
                     __ptext2 07D2                       __ptext3 0EDB                       __ptext4 0F0E  
                     __ptext5 0E72                       __ptext6 0680                       __ptext7 0F75  
                     __ptext8 0FB3                       __ptext9 0777              ___awmod@dividend 0022  
                ??i1_lcd_init 0073           decimal_to_bcd@value 002E                    ??_lcd_data 0076  
                  ??_lcd_init 0078          end_of_initialization 001A               ??i1_lcd_command 0070  
            i1lcd_command@cmd 0072              DS1307_write@_day 0031                    ??_external 0073  
                  _set_timing 001E            __end_ofi1_lcd_init 0EDB                     _PORTBbits 0006  
                   _TRISBbits 0086                   ?_lcd_string 0021                   _DS1307_read 0577  
               ??_lcd_command 0076                __end_of___bmul 0E85           start_initialization 000F  
              _bcd_to_decimal 0F0E                 ?_DS1307_write 002F                      ??___bmul 0077  
                 ?_set_timing 0070             decimal_to_bcd@hex 002D             decimal_to_bcd@lsb 002C  
           decimal_to_bcd@msb 002B           __end_of_lcd_command 0EC4           __size_of_lcd_string 001C  
      __end_of_bcd_to_decimal 0F3D                     ___latbits 0002                 __pcstackBANK0 0020  
              ??_DS1307_write 0077             __size_of_lcd_data 0015             __size_of_lcd_init 0017  
         DS1307_write@_minute 002F           DS1307_write@_second 0077             __size_of_external 001C  
               ?_bcd_to_ascii 0070                      ?___awdiv 0020                      ?___awmod 0020  
                   __pstrings 0800               ?_bcd_to_decimal 0070           __size_of_set_timing 0559  
           interrupt_function 0004                   _lcd_command 0EAF                      _PIR1bits 000C  
              ??_bcd_to_ascii 0021                   __stringbase 0805                  ??_lcd_string 0022  
                ?_DS1307_read 0025         __end_ofi1_lcd_command 0E9A   set_timing@decimal_val_month 0044  
        __end_of_DS1307_write 0705              __size_of___awdiv 005B              __size_of___awmod 004D  
          __end_of_lcd_string 07EE                      ___minute 0050            __end_of__stringtab 0806  
                    ___second 0051       __size_of_decimal_to_bcd 003E            DS1307_write@_month 0033  
                    __ptext10 0577                      __ptext11 0EAF                      __ptext12 0F3D  
                    __ptext13 0E9A                      __ptext14 0EF2                      __ptext15 0EC4  
                    __ptext16 0E85                      _lcd_data 0E9A                      _lcd_init 0EDB  
               __size_of_main 0072                      _external 0EF2                  ??_set_timing 0035  
                  _INTCONbits 000B    set_timing@decimal_val_date 0043    set_timing@decimal_val_hour 0042  
  set_timing@decimal_val_year 0045          __end_of_bcd_to_ascii 0F75                      intlevel1 0000  
          __end_of_set_timing 0577             DS1307_write@_date 0032             DS1307_write@_hour 0030  
           DS1307_write@_year 0034                     stringcode 0800              ??_bcd_to_decimal 0022  
 DS1307_read@register_address 0025                      stringdir 0800                      stringtab 0800  
                 _SSPCON2bits 0091                   _timing_flag 0049         __size_of_DS1307_write 0085  
                ?_lcd_command 0070          __size_of_DS1307_read 0109  
